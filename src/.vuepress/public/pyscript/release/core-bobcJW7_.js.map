{"version":3,"file":"core-bobcJW7_.js","sources":["../node_modules/sticky-module/esm/index.js","../node_modules/@ungap/with-resolvers/index.js","../node_modules/polyscript/esm/fetch-utils.js","../node_modules/basic-devtools/esm/index.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/json.js","../node_modules/coincident/esm/channel.js","../node_modules/proxy-target/esm/types.js","../node_modules/proxy-target/esm/traps.js","../node_modules/coincident/esm/shared/traps.js","../node_modules/coincident/esm/fallback.js","../node_modules/coincident/esm/index.js","../node_modules/proxy-target/esm/utils.js","../node_modules/proxy-target/esm/array.js","../node_modules/gc-hook/esm/index.js","../node_modules/coincident/esm/shared/utils.js","../node_modules/coincident/esm/shared/main.js","../node_modules/coincident/esm/window/main.js","../node_modules/coincident/esm/window/thread.js","../node_modules/coincident/esm/shared/thread.js","../node_modules/coincident/esm/shared/worker.js","../node_modules/coincident/esm/window.js","../node_modules/codedent/esm/index.js","../node_modules/plain-tag/esm/index.js","../node_modules/html-escaper/esm/index.js","../node_modules/polyscript/esm/interpreter/_io.js","../node_modules/polyscript/esm/utils.js","../node_modules/polyscript/esm/interpreter/_utils.js","../node_modules/polyscript/esm/interpreter/_python.js","../node_modules/polyscript/esm/python/mip.js","../node_modules/polyscript/esm/interpreter/micropython.js","../node_modules/polyscript/esm/interpreter/pyodide.js","../node_modules/polyscript/esm/interpreter/ruby-wasm-wasi.js","../node_modules/polyscript/esm/interpreter/wasmoon.js","../node_modules/polyscript/esm/interpreters.js","../node_modules/polyscript/esm/toml.js","../node_modules/polyscript/esm/loader.js","../node_modules/to-json-callback/esm/index.js","../node_modules/polyscript/esm/hooks.js","../node_modules/polyscript/esm/worker/hook.js","../node_modules/polyscript/esm/worker/class.js","../node_modules/polyscript/esm/worker/xworker.js","../node_modules/polyscript/esm/errors.js","../node_modules/polyscript/esm/worker/url.js","../node_modules/polyscript/esm/script-handler.js","../node_modules/polyscript/esm/listeners.js","../node_modules/polyscript/esm/xworker.js","../node_modules/polyscript/esm/custom.js","../node_modules/polyscript/esm/index.js","../src/types.js","../src/all-done.js","../src/plugins.js","../src/exceptions.js","../src/fetch.js","../src/config.js","../src/sync.js","../src/plugins-helper.js","../node_modules/type-checked-collections/esm/index.js","../src/stdlib.js","../src/stdlib/pyscript.js","../src/hooks.js","../src/core.js"],"sourcesContent":["/**\n * Allow leaking a module globally to help avoid conflicting exports\n * if the module might have been re-bundled in other projects.\n * @template T\n * @param {string} name the module name to save or retrieve\n * @param {T} value the module as value to save if not known\n * @param {globalThis} [global=globalThis] the reference where modules are saved where `globalThis` is the default\n * @returns {[T, boolean]} the passed `value` or the previous one as first entry, a boolean indicating if it was known or not\n */\nconst stickyModule = (name, value, global = globalThis) => {\n  const symbol = Symbol.for(name);\n  const known = symbol in global;\n  return [\n    known ?\n      global[symbol] :\n      Object.defineProperty(global, symbol, { value })[symbol],\n    known\n  ];\n};\n\nexport default stickyModule;\n","Promise.withResolvers || (Promise.withResolvers = function withResolvers() {\n  var a, b, c = new this(function (resolve, reject) {\n    a = resolve;\n    b = reject;\n  });\n  return {resolve: a, reject: b, promise: c};\n});\n","/** @param {Response} response */\nexport const getBuffer = (response) => response.arrayBuffer();\n\n/** @param {Response} response */\nexport const getJSON = (response) => response.json();\n\n/** @param {Response} response */\nexport const getText = (response) => response.text();\n","/**\n * Given a CSS selector, returns the first matching node, if any.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element?} the found element, if any\n */\nconst $ = (css, root = document) => root.querySelector(css);\n\n/**\n * Given a CSS selector, returns a list of all matching nodes.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element[]} a list of found nodes\n */\nconst $$ = (css, root = document) => [...root.querySelectorAll(css)];\n\n/**\n * Given a XPath selector, returns a list of all matching nodes.\n * @param {string} path the XPath selector to evaluate\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Node[]} a list of found nodes (elements, attributes, text, comments)\n */\nconst $x = (path, root = document) => {\n  const expression = (new XPathEvaluator).createExpression(path);\n  const xpath = expression.evaluate(root, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n  const result = [];\n  for (let i = 0, {snapshotLength} = xpath; i < snapshotLength; i++)\n    result.push(xpath.snapshotItem(i));\n  return result;\n};\n\nexport {$, $$, $x};\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","/*! (c) Andrea Giammarchi - ISC */\n\nimport {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\nconst {parse: $parse, stringify: $stringify} = JSON;\nconst options = {json: true, lossy: true};\n\n/**\n * Revive a previously stringified structured clone.\n * @param {string} str previously stringified data as string.\n * @returns {any} whatever was previously stringified as clone.\n */\nexport const parse = str => deserialize($parse(str));\n\n/**\n * Represent a structured clone value as string.\n * @param {any} any some clone-able value to stringify.\n * @returns {string} the value stringified.\n */\nexport const stringify = any => $stringify(serialize(any, options));\n","// ⚠️ AUTOMATICALLY GENERATED - DO NOT CHANGE\nexport const CHANNEL = 'ac6c1995-0675-46af-a99f-7fa298fa4e6d';\n\nexport const MAIN = 'M' + CHANNEL;\nexport const THREAD = 'T' + CHANNEL;\n","export const ARRAY     = 'array';\nexport const BIGINT    = 'bigint';\nexport const BOOLEAN   = 'boolean';\nexport const FUNCTION  = 'function';\nexport const NULL      = 'null';\nexport const NUMBER    = 'number';\nexport const OBJECT    = 'object';\nexport const STRING    = 'string';\nexport const SYMBOL    = 'symbol';\nexport const UNDEFINED = 'undefined';\n","export const APPLY                        = 'apply';\nexport const CONSTRUCT                    = 'construct';\nexport const DEFINE_PROPERTY              = 'defineProperty';\nexport const DELETE_PROPERTY              = 'deleteProperty';\nexport const GET                          = 'get';\nexport const GET_OWN_PROPERTY_DESCRIPTOR  = 'getOwnPropertyDescriptor';\nexport const GET_PROTOTYPE_OF             = 'getPrototypeOf';\nexport const HAS                          = 'has';\nexport const IS_EXTENSIBLE                = 'isExtensible';\nexport const OWN_KEYS                     = 'ownKeys';\nexport const PREVENT_EXTENSION            = 'preventExtensions';\nexport const SET                          = 'set';\nexport const SET_PROTOTYPE_OF             = 'setPrototypeOf';\n","export * from 'proxy-target/traps';\nexport const DELETE = 'delete';\n","// encodeURIComponent('onmessage=({data:b})=>(Atomics.wait(b,0),postMessage(0))')\n\nexport default buffer => ({\n  value: new Promise(onmessage => {\n    let w = new Worker('data:application/javascript,onmessage%3D(%7Bdata%3Ab%7D)%3D%3E(Atomics.wait(b%2C0)%2CpostMessage(0))');\n    w.onmessage = onmessage;\n    w.postMessage(buffer);\n  })\n});\n","/*! (c) Andrea Giammarchi - ISC */\n\nimport {FUNCTION} from 'proxy-target/types';\n\nimport {CHANNEL} from './channel.js';\nimport {GET, HAS, SET} from './shared/traps.js';\nimport waitAsyncFallback from './fallback.js';\n\n// just minifier friendly for Blob Workers' cases\nconst {Int32Array, Map, SharedArrayBuffer, Uint16Array} = globalThis;\n\n// common constants / utilities for repeated operations\nconst {BYTES_PER_ELEMENT: I32_BYTES} = Int32Array;\nconst {BYTES_PER_ELEMENT: UI16_BYTES} = Uint16Array;\n\nconst {isArray} = Array;\nconst {notify, wait, waitAsync} = Atomics;\n\nconst waitInterrupt = (sb, delay, handler) => {\n  while (wait(sb, 0, 0, delay) === 'timed-out')\n    handler();\n};\n\n// retain buffers to transfer\nconst buffers = new WeakSet;\n\n// retain either main threads or workers global context\nconst context = new WeakMap;\n\nconst syncResult = {value: {then: fn => fn()}};\n\n// used to generate a unique `id` per each worker `postMessage` \"transaction\"\nlet uid = 0;\n\n/**\n * @typedef {Object} Interrupt used to sanity-check interrupts while waiting synchronously.\n * @prop {function} [handler] a callback invoked every `delay` milliseconds.\n * @prop {number} [delay=42] define `handler` invokes in terms of milliseconds.\n */\n\n/**\n * Create once a `Proxy` able to orchestrate synchronous `postMessage` out of the box.\n * @param {globalThis | Worker} self the context in which code should run\n * @param {{parse: (serialized: string) => any, stringify: (serializable: any) => string, transform?: (value:any) => any, interrupt?: () => void | Interrupt}} [JSON] an optional `JSON` like interface to `parse` or `stringify` content with extra `transform` ability.\n * @returns {ProxyHandler<globalThis> | ProxyHandler<Worker>}\n */\nconst coincident = (self, {parse = JSON.parse, stringify = JSON.stringify, transform, interrupt} = JSON) => {\n  // create a Proxy once for the given context (globalThis or Worker instance)\n  if (!context.has(self)) {\n    // ensure the CHANNEL and data are posted correctly\n    const post = (transfer, ...args) => self.postMessage({[CHANNEL]: args}, {transfer});\n\n    const handler = typeof interrupt === FUNCTION ? interrupt : interrupt?.handler;\n    const delay = interrupt?.delay || 42;\n    const decoder = new TextDecoder('utf-16');\n\n    // automatically uses sync wait (worker -> main)\n    // or fallback to async wait (main -> worker)\n    const waitFor = (isAsync, sb) => isAsync ?\n      (waitAsync || waitAsyncFallback)(sb, 0) :\n      ((handler ? waitInterrupt(sb, delay, handler) : wait(sb, 0)), syncResult);\n\n    // prevent Harakiri https://github.com/WebReflection/coincident/issues/18\n    let seppuku = false;\n\n    context.set(self, new Proxy(new Map, {\n      // there is very little point in checking prop in proxy for this very specific case\n      // and I don't want to orchestrate a whole roundtrip neither, as stuff would fail\n      // regardless if from Worker we access non existent Main callback, and vice-versa.\n      // This is here mostly to guarantee that if such check is performed, at least the\n      // get trap goes through and then it's up to developers guarantee they are accessing\n      // stuff that actually exists elsewhere.\n      [HAS]: (_, action) => typeof action === 'string' && !action.startsWith('_'),\n\n      // worker related: get any utility that should be available on the main thread\n      [GET]: (_, action) => action === 'then' ? null : ((...args) => {\n        // transaction id\n        const id = uid++;\n\n        // first contact: just ask for how big the buffer should be\n        // the value would be stored at index [1] while [0] is just control\n        let sb = new Int32Array(new SharedArrayBuffer(I32_BYTES * 2));\n\n        // if a transfer list has been passed, drop it from args\n        let transfer = [];\n        if (buffers.has(args.at(-1) || transfer))\n          buffers.delete(transfer = args.pop());\n\n        // ask for invoke with arguments and wait for it\n        post(transfer, id, sb, action, transform ? args.map(transform) : args);\n\n        // helps deciding how to wait for results\n        const isAsync = self !== globalThis;\n\n        // warn users about possible deadlock still allowing them\n        // to explicitly `proxy.invoke().then(...)` without blocking\n        let deadlock = 0;\n        if (seppuku && isAsync)\n          deadlock = setTimeout(console.warn, 1000, `💀🔒 - Possible deadlock if proxy.${action}(...args) is awaited`);\n\n        return waitFor(isAsync, sb).value.then(() => {\n          clearTimeout(deadlock);\n\n          // commit transaction using the returned / needed buffer length\n          const length = sb[1];\n\n          // filter undefined results\n          if (!length) return;\n\n          // calculate the needed ui16 bytes length to store the result string\n          const bytes = UI16_BYTES * length;\n\n          // round up to the next amount of bytes divided by 4 to allow i32 operations\n          sb = new Int32Array(new SharedArrayBuffer(bytes + (bytes % I32_BYTES)));\n\n          // ask for results and wait for it\n          post([], id, sb);\n          return waitFor(isAsync, sb).value.then(() => parse(\n            decoder.decode(new Uint16Array(sb.buffer).slice(0, length)))\n          );\n        });\n      }),\n\n      // main thread related: react to any utility a worker is asking for\n      [SET](actions, action, callback) {\n        const type = typeof callback;\n        if (type !== FUNCTION)\n          throw new Error(`Unable to assign ${action} as ${type}`);\n        // lazy event listener and logic handling, triggered once by setters actions\n        if (!actions.size) {\n          // maps results by `id` as they are asked for\n          const results = new Map;\n          // add the event listener once (first defined setter, all others work the same)\n          self.addEventListener('message', async (event) => {\n            // grub the very same library CHANNEL; ignore otherwise\n            const details = event.data?.[CHANNEL];\n            if (isArray(details)) {\n              // if early enough, avoid leaking data to other listeners\n              event.stopImmediatePropagation();\n              const [id, sb, ...rest] = details;\n              let error;\n              // action available: it must be defined/known on the main thread\n              if (rest.length) {\n                const [action, args] = rest;\n                if (actions.has(action)) {\n                  seppuku = true;\n                  try {\n                    // await for result either sync or async and serialize it\n                    const result = await actions.get(action)(...args);\n                    if (result !== void 0) {\n                      const serialized = stringify(transform ? transform(result) : result);\n                      // store the result for \"the very next\" event listener call\n                      results.set(id, serialized);\n                      // communicate the required SharedArrayBuffer length out of the\n                      // resulting serialized string\n                      sb[1] = serialized.length;\n                    }\n                  }\n                  catch (_) {\n                    error = _;\n                  }\n                  finally {\n                    seppuku = false;\n                  }\n                }\n                // unknown action should be notified as missing on the main thread\n                else {\n                  error = new Error(`Unsupported action: ${action}`);\n                }\n                // unlock the wait lock later on\n                sb[0] = 1;\n              }\n              // no action means: get results out of the well known `id`\n              // wait lock automatically unlocked here as no `0` value would\n              // possibly ever land at index `0`\n              else {\n                const result = results.get(id);\n                results.delete(id);\n                // populate the SharedArrayBuffer with utf-16 chars code\n                for (let ui16a = new Uint16Array(sb.buffer), i = 0; i < result.length; i++)\n                  ui16a[i] = result.charCodeAt(i);\n              }\n              // release te worker waiting either the length or the result\n              notify(sb, 0);\n              if (error) throw error;\n            }\n          });\n        }\n        // store this action callback allowing the setter in the process\n        return !!actions.set(action, callback);\n      }\n    }));\n  }\n  return context.get(self);\n};\n\ncoincident.transfer = (...args) => (buffers.add(args), args);\n\nexport default coincident;\n","import { BIGINT, BOOLEAN, FUNCTION, NULL, NUMBER, OBJECT, STRING, SYMBOL, UNDEFINED } from './types.js';\n\nconst { isArray } = Array;\n\nexport { isArray };\n\nexport const invoke = value => /** @type {Function} */ (value)();\n\n/**\n * @template Value\n * @param {string} type\n * @param {Value} value\n * @returns {Value}\n */\nexport const reviver = (type, value) => value;\n\n/**\n * @template V\n * @typedef {[V]} Arr\n */\n\n/**\n * @template V\n * @typedef {() => V} Ctx\n */\n\n/**\n * @template T, V\n * @typedef {{t:T, v:V}} Obj\n */\n\n/**\n * @template V\n * @typedef {V extends bigint ? BIGINT : V extends boolean ? BOOLEAN : V extends null ? NULL : V extends number ? NUMBER : V extends string ? STRING : V extends symbol ? SYMBOL : V extends undefined ? UNDEFINED : V extends object ? OBJECT : never} TypeOf\n */\n\n/**\n * @template T, V\n * @param {T} t\n * @param {V} v\n * @returns {Obj<T, V>}\n */\nexport const obj = (t, v) => ({t, v});\n\n/**\n * @template V\n * @param {V} value\n * @returns {Ctx<V>}\n */\nexport const bound = value => Context.bind(value);\n\n/**\n * @template V, T\n * @param {V} value\n * @returns {V extends Ctx<T> ? ReturnType<V> : V}\n */\nexport const unbound = value => (\n  typeof value === FUNCTION ? invoke(value) : value\n);\n\n// This is needed to unlock *both* apply and construct\n// traps otherwise one of these might fail.\n// The 'use strict' directive is needed to allow\n// also primitive types to be bound.\nfunction Context() {\n  'use strict';\n  return this;\n}\n\n// TODO: is this really needed in here?\n// const { hasOwn } = Object;\n// const isConstructable = value => hasOwn(value, 'prototype');\n// const isFunction = value => typeof value === FUNCTION;\n","import { ARRAY, FUNCTION, NULL, OBJECT } from './types.js';\nimport { isArray, reviver, obj } from './utils.js';\n\nexport { bound, unbound } from './utils.js';\n\n/**\n * @template V\n * @typedef {import(\"./utils.js\").Arr<V>} Arr\n */\n\n/**\n * @template T, V\n * @typedef {import(\"./utils.js\").Obj<T, V>} Obj\n */\n\n/**\n * @template V\n * @typedef {import(\"./utils.js\").TypeOf<V>} TypeOf\n */\n\n/**\n * @template W, T, V\n * @typedef {W extends Function ? W : W extends Arr<V> ? W[0] : W extends Obj<T, V> ? W[\"v\"] : never} ValueOf\n */\n\n/**\n * @template {string} T\n * @template V\n * @param {T} type\n * @param {V} value\n * @returns {T extends typeof ARRAY ? Arr<V> : Obj<T, V>}\n */\nexport const target = (type, value) =>\n// @see https://github.com/microsoft/TypeScript/issues/33014\n// @ts-ignore\n(\n  type === ARRAY ?\n    (/** @type {Arr<V>} */ ([value])) :\n    obj(type, value)\n);\n\n/**\n * @template W, T, V\n * @param {W} wrap\n * @param {typeof reviver} [revive]\n * @returns\n */\nexport const unwrap = (wrap, revive = reviver) => {\n  /** @type {string} */\n  let type = typeof wrap, value = wrap;\n  if (type === OBJECT) {\n    if (isArray(wrap)) {\n      type = ARRAY;\n      value = wrap.at(0);\n    }\n    else\n      ({ t: type, v: value } = /** @type {Obj<string, any>} */ (wrap));\n  }\n  return revive(type, /** @type {ValueOf<W, T, V>} */ (value));\n};\n\nconst resolver = (type, value) => (\n  type === FUNCTION ? value : target(type, value)\n);\n\n/**\n * Returns a `{t, v}` pair if the value is not a function and not an array.\n * It returns the function or the array as they are otherwise.\n * @template V\n * @param {V} value\n * @param {Function} [resolve]\n * @returns {V extends Function ? V : V extends Array ? Arr<V> : Obj<TypeOf<V>, V>}\n */\nexport const wrap = (value, resolve = resolver) => {\n  const type = value === null ? NULL : typeof value;\n  return resolve(type === OBJECT && isArray(value) ? ARRAY : type, value);\n};\n","// (c) Andrea Giammarchi - ISC\n\nconst registry = new FinalizationRegistry(\n  ([onGarbageCollected, held, debug]) => {\n    if (debug) console.debug(`Held value ${String(held)} not relevant anymore`);\n    onGarbageCollected(held);\n  }\n);\n\nconst handler = Object.create(null);\n\n/**\n * Register a generic reference to hold in memory, returning either an explicit replacement for it, if specified as optional extra option, or just a `ProxyHandler<hold>` to allow the GC to collect such proxy later on.\n * @template {object} H\n * @template R\n * @param {H} hold the reference to retain in memory until the returned value is not collected.\n * @param {(held:H) => void} onGarbageCollected the callback to invoke once the returned value is collected.\n * @param {{debug?: true, return?:R, token?:H | false}} [options] optionally override the returned value or the token to unregister. If `debug` is true it will log once FinalizationRegistry kicked in.\n * @returns {R | ProxyHandler<typeof hold>} a transparent proxy for the held reference or whatever override was passed as `return` field of the options.\n */\nexport const create = (\n  hold,\n  onGarbageCollected,\n  { debug, return: R, token = hold } = handler\n) => {\n  // if no reference to return is defined,\n  // create a proxy for the held one and register that instead.\n  const target = R || new Proxy(hold, handler);\n  const args = [target, [onGarbageCollected, hold, !!debug]];\n  if (token !== false) args.push(token);\n  // register the target reference in a way that\n  // the `onGarbageCollected(held)` callback will eventually notify.\n  registry.register(...args);\n  return target;\n};\n\n/**\n * If previously registered as either `token` or `hold` value, allow explicit removal of the entry in the registry.\n * @param {unknown} token the token used during registration. If no `token` was passed, this can be the same `hold` reference.\n * @returns {boolean} `true` if successfully unregistered.\n */\nexport const drop = token => registry.unregister(token);\n","import { target as tv, wrap } from 'proxy-target/array';\n\nimport {\n  ARRAY,\n  OBJECT,\n  FUNCTION,\n  BOOLEAN,\n  NUMBER,\n  STRING,\n  UNDEFINED,\n  BIGINT,\n  SYMBOL,\n  NULL,\n} from 'proxy-target/types';\n\nconst {\n  defineProperty,\n  deleteProperty,\n  getOwnPropertyDescriptor,\n  getPrototypeOf,\n  isExtensible,\n  ownKeys,\n  preventExtensions,\n  set,\n  setPrototypeOf\n} = Reflect;\n\nconst { assign, create } = Object;\n\nexport const TypedArray = getPrototypeOf(Int8Array);\n\nexport {\n  assign,\n  create,\n  defineProperty,\n  deleteProperty,\n  getOwnPropertyDescriptor,\n  getPrototypeOf,\n  isExtensible,\n  ownKeys,\n  preventExtensions,\n  set,\n  setPrototypeOf\n};\n\nexport const augment = (descriptor, how) => {\n  const {get, set, value} = descriptor;\n  if (get) descriptor.get = how(get);\n  if (set) descriptor.set = how(set);\n  if (value) descriptor.value = how(value);\n  return descriptor;\n};\n\nexport const asEntry = transform => value => wrap(value, (type, value) => {\n  switch (type) {\n    case NULL:\n      return tv(NULL, value);\n    case OBJECT:\n      if (value === globalThis)\n        return tv(type, null);\n    case ARRAY:\n    case FUNCTION:\n      return transform(type, value);\n    case BOOLEAN:\n    case NUMBER:\n    case STRING:\n    case UNDEFINED:\n    case BIGINT:\n      return tv(type, value);\n    case SYMBOL: {\n      // handle known symbols\n      if (symbols.has(value))\n        return tv(type, symbols.get(value));\n      // handle `Symbol.for('...')` cases\n      let key = Symbol.keyFor(value);\n      if (key)\n        return tv(type, `.${key}`);\n    }\n  }\n  throw new TypeError(`Unable to handle this ${type}: ${String(value)}`);\n});\n\nconst symbols = new Map(\n  ownKeys(Symbol)\n    .filter(s => typeof Symbol[s] === SYMBOL)\n    .map(s => [Symbol[s], s])\n);\n\nexport const symbol = value => {\n  if (value.startsWith('.'))\n    return Symbol.for(value.slice(1));\n  for (const [symbol, name] of symbols) {\n    if (name === value)\n      return symbol;\n  }\n};\n\nexport const transform = o => o;\n","import { target as tv, unwrap } from 'proxy-target/array';\nimport { create as createGCHook } from 'gc-hook';\n\nimport {\n  ARRAY,\n  OBJECT,\n  FUNCTION,\n  NUMBER,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'proxy-target/types';\n\nimport {\n  TypedArray,\n  defineProperty,\n  deleteProperty,\n  getOwnPropertyDescriptor,\n  getPrototypeOf,\n  isExtensible,\n  ownKeys,\n  preventExtensions,\n  set,\n  setPrototypeOf,\n\n  assign,\n  create,\n  augment,\n  asEntry,\n  symbol,\n  transform\n} from './utils.js';\n\nimport {\n  APPLY,\n  CONSTRUCT,\n  DEFINE_PROPERTY,\n  DELETE_PROPERTY,\n  GET,\n  GET_OWN_PROPERTY_DESCRIPTOR,\n  GET_PROTOTYPE_OF,\n  HAS,\n  IS_EXTENSIBLE,\n  OWN_KEYS,\n  PREVENT_EXTENSION,\n  SET,\n  SET_PROTOTYPE_OF,\n  DELETE\n} from './traps.js';\n\nexport default (name, patch) => {\n  const eventsHandler = patch && new WeakMap;\n\n  // patch once main UI tread\n  if (patch) {\n    const { addEventListener } = EventTarget.prototype;\n    // this should never be on the way as it's extremely light and fast\n    // but it's necessary to allow \"preventDefault\" or other event invokes at distance\n    defineProperty(EventTarget.prototype, 'addEventListener', {\n      value(type, listener, ...options) {\n        if (options.at(0)?.invoke) {\n          if (!eventsHandler.has(this))\n            eventsHandler.set(this, new Map);\n          eventsHandler.get(this).set(type, [].concat(options[0].invoke));\n          delete options[0].invoke;\n        }\n        return addEventListener.call(this, type, listener, ...options);\n      }\n    });\n  }\n\n  const handleEvent = patch && (event => {\n    const {currentTarget, target, type} = event;\n    for (const method of eventsHandler.get(currentTarget || target)?.get(type) || [])\n      event[method]();\n  });\n\n  return function (thread, MAIN, THREAD, ...args) {\n    let id = 0, $ = this?.transform || transform;\n    const ids = new Map;\n    const values = new Map;\n\n    const {[THREAD]: __thread__} = thread;\n\n    const global = args.length ? assign(create(globalThis), ...args) : globalThis;\n\n    const result = asEntry((type, value) => {\n      if (!ids.has(value)) {\n        let sid;\n        // a bit apocalyptic scenario but if this main runs forever\n        // and the id does a whole int32 roundtrip we might have still\n        // some reference dangling around\n        while (values.has(sid = id++));\n        ids.set(value, sid);\n        values.set(sid, type === FUNCTION ? value : $(value));\n      }\n      return tv(type, ids.get(value));\n    });\n\n    const onGarbageCollected = value => {\n      __thread__(DELETE, tv(STRING, value));\n    };\n\n    const asValue = (type, value) => {\n      switch (type) {\n        case OBJECT:\n          if (value == null) return global;\n        case ARRAY:\n          if (typeof value === NUMBER) return values.get(value);\n          if (!(value instanceof TypedArray)) {\n            for (const key in value)\n              value[key] = target(value[key]);\n          }\n          return value;\n        case FUNCTION:\n          if (typeof value === STRING) {\n            if (!values.has(value)) {\n              const cb = function (...args) {\n                if (patch && args.at(0) instanceof Event) handleEvent(...args);\n                return __thread__(\n                  APPLY,\n                  tv(FUNCTION, value),\n                  result(this),\n                  args.map(result)\n                );\n              };\n              values.set(value, new WeakRef(cb));\n              return createGCHook(value, onGarbageCollected, {\n                return: cb,\n                token: false,\n              });\n            }\n            return values.get(value).deref();\n          }\n          return values.get(value);\n        case SYMBOL:\n          return symbol(value);\n      }\n      return value;\n    };\n\n    const target = entry => unwrap(entry, asValue);\n\n    const trapsHandler = {\n      [APPLY]: (target, thisArg, args) => result(target.apply(thisArg, args)),\n      [CONSTRUCT]: (target, args) => result(new target(...args)),\n      [DEFINE_PROPERTY]: (target, name, descriptor) => result(defineProperty(target, name, descriptor)),\n      [DELETE_PROPERTY]: (target, name) => result(deleteProperty(target, name)),\n      [GET_PROTOTYPE_OF]: target => result(getPrototypeOf(target)),\n      [GET]: (target, name) => result(target[name]),\n      [GET_OWN_PROPERTY_DESCRIPTOR]: (target, name) => {\n        const descriptor = getOwnPropertyDescriptor(target, name);\n        return descriptor ? tv(OBJECT, augment(descriptor, result)) : tv(UNDEFINED, descriptor);\n      },\n      [HAS]: (target, name) => result(name in target),\n      [IS_EXTENSIBLE]: target => result(isExtensible(target)),\n      [OWN_KEYS]: target => tv(ARRAY, ownKeys(target).map(result)),\n      [PREVENT_EXTENSION]: target => result(preventExtensions(target)),\n      [SET]: (target, name, value) => result(set(target, name, value)),\n      [SET_PROTOTYPE_OF]: (target, proto) => result(setPrototypeOf(target, proto)),\n      [DELETE](id) {\n        ids.delete(values.get(id));\n        values.delete(id);\n      }\n    };\n\n    thread[MAIN] = (trap, entry, ...args) => {\n      switch (trap) {\n        case APPLY:\n          args[0] = target(args[0]);\n          args[1] = args[1].map(target);\n          break;\n        case CONSTRUCT:\n          args[0] = args[0].map(target);\n          break;\n        case DEFINE_PROPERTY: {\n          const [name, descriptor] = args;\n          args[0] = target(name);\n          const {get, set, value} = descriptor;\n          if (get) descriptor.get = target(get);\n          if (set) descriptor.set = target(set);\n          if (value) descriptor.value = target(value);\n          break;\n        }\n        default:\n          args = args.map(target);\n          break;\n      }\n      return trapsHandler[trap](target(entry), ...args);\n    };\n\n    return {\n      proxy: thread,\n      [name.toLowerCase()]: global,\n      [`is${name}Proxy`]: () => false\n    };\n  };\n};\n","import main from '../shared/main.js';\n\nexport default main('Window', true);\n","import thread from '../shared/thread.js';\n\nexport default thread('Window');\n","import { target as tv, unwrap, bound, unbound } from 'proxy-target/array';\nimport { create as createGCHook } from 'gc-hook';\n\nimport {\n  ARRAY,\n  OBJECT,\n  FUNCTION,\n  NUMBER,\n  STRING,\n  SYMBOL,\n} from 'proxy-target/types';\n\nimport {\n  TypedArray,\n  augment,\n  asEntry,\n  symbol,\n  transform,\n} from './utils.js';\n\nimport {\n  APPLY,\n  CONSTRUCT,\n  DEFINE_PROPERTY,\n  DELETE_PROPERTY,\n  GET,\n  GET_OWN_PROPERTY_DESCRIPTOR,\n  GET_PROTOTYPE_OF,\n  HAS,\n  IS_EXTENSIBLE,\n  OWN_KEYS,\n  PREVENT_EXTENSION,\n  SET,\n  SET_PROTOTYPE_OF,\n  DELETE\n} from './traps.js';\n\nexport default name => {\n  let id = 0;\n  const ids = new Map;\n  const values = new Map;\n\n  const __proxy__ = Symbol();\n\n  return function (main, MAIN, THREAD) {\n    const $ = this?.transform || transform;\n    const { [MAIN]: __main__ } = main;\n\n    const proxies = new Map;\n\n    const onGarbageCollected = value => {\n      proxies.delete(value);\n      __main__(DELETE, argument(value));\n    };\n\n    const argument = asEntry(\n      (type, value) => {\n        if (__proxy__ in value)\n          return unbound(value[__proxy__]);\n        if (type === FUNCTION) {\n          value = $(value);\n          if (!values.has(value)) {\n            let sid;\n            // a bit apocalyptic scenario but if this thread runs forever\n            // and the id does a whole int32 roundtrip we might have still\n            // some reference dangling around\n            while (values.has(sid = String(id++)));\n            ids.set(value, sid);\n            values.set(sid, value);\n          }\n          return tv(type, ids.get(value));\n        }\n        if (!(value instanceof TypedArray)) {\n          value = $(value);\n          for(const key in value)\n            value[key] = argument(value[key]);\n        }\n        return tv(type, value);\n      }\n    );\n\n    const register = (entry, type, value) => {\n      if (!proxies.has(value)) {\n        const target = type === FUNCTION ? bound(entry) : entry;\n        const proxy = new Proxy(target, proxyHandler);\n        proxies.set(value, new WeakRef(proxy));\n        return createGCHook(value, onGarbageCollected, {\n          return: proxy,\n          token: false,\n        });\n      }\n      return proxies.get(value).deref();\n    };\n\n    const fromEntry = entry => unwrap(entry, (type, value) => {\n      switch (type) {\n        case OBJECT:\n          if (value === null) return globalThis;\n        case ARRAY:\n          return typeof value === NUMBER ? register(entry, type, value) : value;\n        case FUNCTION:\n          return typeof value === STRING ? values.get(value) : register(entry, type, value);\n        case SYMBOL:\n          return symbol(value);\n      }\n      return value;\n    });\n\n    const result = (TRAP, target, ...args) => fromEntry(__main__(TRAP, unbound(target), ...args));\n\n    const proxyHandler = {\n      [APPLY]: (target, thisArg, args) => result(APPLY, target, argument(thisArg), args.map(argument)),\n      [CONSTRUCT]: (target, args) => result(CONSTRUCT, target, args.map(argument)),\n      [DEFINE_PROPERTY]: (target, name, descriptor) => {\n        const { get, set, value } = descriptor;\n        if (typeof get === FUNCTION) descriptor.get = argument(get);\n        if (typeof set === FUNCTION) descriptor.set = argument(set);\n        if (typeof value === FUNCTION) descriptor.value = argument(value);\n        return result(DEFINE_PROPERTY, target, argument(name), descriptor);\n      },\n      [DELETE_PROPERTY]: (target, name) => result(DELETE_PROPERTY, target, argument(name)),\n      [GET_PROTOTYPE_OF]: target => result(GET_PROTOTYPE_OF, target),\n      [GET]: (target, name) => name === __proxy__ ? target : result(GET, target, argument(name)),\n      [GET_OWN_PROPERTY_DESCRIPTOR]: (target, name) => {\n        const descriptor = result(GET_OWN_PROPERTY_DESCRIPTOR, target, argument(name));\n        return descriptor && augment(descriptor, fromEntry);\n      },\n      [HAS]: (target, name) => name === __proxy__ || result(HAS, target, argument(name)),\n      [IS_EXTENSIBLE]: target => result(IS_EXTENSIBLE, target),\n      [OWN_KEYS]: target => result(OWN_KEYS, target).map(fromEntry),\n      [PREVENT_EXTENSION]: target => result(PREVENT_EXTENSION, target),\n      [SET]: (target, name, value) => result(SET, target, argument(name), argument(value)),\n      [SET_PROTOTYPE_OF]: (target, proto) => result(SET_PROTOTYPE_OF, target, argument(proto)),\n    };\n\n    main[THREAD] = (trap, entry, ctx, args) => {\n      switch (trap) {\n        case APPLY:\n          return fromEntry(entry).apply(fromEntry(ctx), args.map(fromEntry));\n        case DELETE: {\n          const id = fromEntry(entry);\n          ids.delete(values.get(id));\n          values.delete(id);\n        }\n      }\n    };\n\n    const global = new Proxy(tv(OBJECT, null), proxyHandler);\n\n    return {\n      [name.toLowerCase()]: global,\n      [`is${name}Proxy`]: value => typeof value === OBJECT && !!value && __proxy__ in value,\n      proxy: main\n    };\n  };\n};\n","import {FUNCTION} from 'proxy-target/types';\nexport default typeof Worker === FUNCTION ? Worker : class {};\n","import {MAIN, THREAD} from './channel.js';\nimport $coincident from './index.js';\nimport main from './window/main.js';\nimport thread from './window/thread.js';\nimport Worker from './shared/worker.js';\n\nconst proxies = new WeakMap;\n\n/**\n * @typedef {object} Coincident\n * @property {ProxyHandler<globalThis>} proxy\n * @property {ProxyHandler<Window>} window\n * @property {(value: any) => boolean} isWindowProxy\n */\n\n/**\n * Create once a `Proxy` able to orchestrate synchronous `postMessage` out of the box.\n * In workers, returns a `{proxy, window, isWindowProxy}` namespace to reach main globals synchronously.\n * @param {Worker | globalThis} self the context in which code should run\n * @returns {ProxyHandler<Worker> | Coincident}\n */\nconst coincident = (self, ...args) => {\n  const proxy = $coincident(self, ...args);\n  if (!proxies.has(proxy)) {\n    const util = self instanceof Worker ? main : thread;\n    proxies.set(proxy, util.call(args.at(0), proxy, MAIN, THREAD));\n  }\n  return proxies.get(proxy);\n}\n\ncoincident.transfer = $coincident.transfer;\n\nexport default coincident;\n","import content from 'plain-tag';\n\nconst dedent = {\n  object(...args) {\n    return this.string(content(...args));\n  },\n  string(content) {\n    for (const line of content.split(/[\\r\\n]+/)) {\n      // skip initial empty lines\n      if (line.trim().length) {\n        // trap indentation at the very first line of code\n        if (/^(\\s+)/.test(line))\n          content = content.replace(new RegExp('^' + RegExp.$1, 'gm'), '');\n        // no indentation? all good: get out of here!\n        break;\n      }\n    }\n    return content;\n  }\n};\n\n/**\n * Usable both as template literal tag or just as callback for strings, removes all spaces found\n * at the very first line of code encountered while sanitizing, keeping everything else around.\n * @param {string | TemplateStringsArray} tpl either code as string or as template, when used as tag\n * @param  {...any} values the template interpolations, when used as tag\n * @returns {string} code without undesired indentation\n */\nconst codedent = (tpl, ...values) => dedent[typeof tpl](tpl, ...values);\n\nexport default codedent;\n","export default function (t) {\n  for (var s = t[0], i = 1, l = arguments.length; i < l; i++)\n    s += arguments[i] + t[i];\n  return s;\n};\n","/**\n * Copyright (C) 2017-present by Andrea Giammarchi - @WebReflection\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst {replace} = '';\n\n// escape\nconst es = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\nconst ca = /[&<>'\"]/g;\n\nconst esca = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;'\n};\nconst pe = m => esca[m];\n\n/**\n * Safely escape HTML entities such as `&`, `<`, `>`, `\"`, and `'`.\n * @param {string} es the input to safely escape\n * @returns {string} the escaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const escape = es => replace.call(es, ca, pe);\n\n\n// unescape\nconst unes = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"'\n};\nconst cape = m => unes[m];\n\n/**\n * Safely unescape previously escaped entities such as `&`, `<`, `>`, `\"`,\n * and `'`.\n * @param {string} un a previously escaped string\n * @returns {string} the unescaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const unescape = un => replace.call(un, es, cape);\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const io = new WeakMap();\nexport const stdio = (init) => {\n    const context = init || console;\n    const localIO = {\n        stderr: (context.stderr || console.error).bind(context),\n        stdout: (context.stdout || console.log).bind(context),\n    };\n    return {\n        stderr: (...args) => localIO.stderr(...args),\n        stdout: (...args) => localIO.stdout(...args),\n        async get(engine) {\n            const interpreter = await engine;\n            io.set(interpreter, localIO);\n            return interpreter;\n        },\n    };\n};\n/* c8 ignore stop */\n","import $dedent from 'codedent';\nimport { unescape as $unescape } from 'html-escaper';\nimport { io } from './interpreter/_io.js';\n\n/** @type {(tpl: string | TemplateStringsArray, ...values:any[]) => string} */\nconst dedent = $dedent;\n\n/** @type {(value:string) => string} */\nconst unescape = $unescape;\n\nconst { isArray } = Array;\n\nconst { assign, create, defineProperties, defineProperty, entries } = Object;\n\nconst { all, resolve } = new Proxy(Promise, {\n    get: ($, name) => $[name].bind($),\n});\n\nconst absoluteURL = (path, base = location.href) =>\n    new URL(path, base.replace(/^blob:/, '')).href;\n\n/* c8 ignore start */\nlet id = 0;\nconst nodeInfo = (node, type) => ({\n    id: node.id || (node.id = `${type}-w${id++}`),\n    tag: node.tagName\n});\n\n/**\n * Notify the main thread about element \"readiness\".\n * @param {HTMLScriptElement | HTMLElement} target the script or custom-type element\n * @param {string} type the custom/type as event prefix\n * @param {string} what the kind of event to dispatch, i.e. `ready` or `done`\n * @param {boolean} [worker = false] `true` if dispatched form a worker, `false` by default if in main\n * @param {globalThis.CustomEvent} [CustomEvent = globalThis.CustomEvent] the `CustomEvent` to use\n */\nconst dispatch = (target, type, what, worker = false, CE = CustomEvent) => {\n    target.dispatchEvent(\n        new CE(`${type}:${what}`, {\n            bubbles: true,\n            detail: { worker },\n        })\n    );\n};\n\nexport const createFunction = value => Function(`'use strict';return (${value})`)();\n\nexport const createResolved = (module, type, config, interpreter) => ({\n    type,\n    config,\n    interpreter,\n    io: io.get(interpreter),\n    run: (code, ...args) => module.run(interpreter, code, ...args),\n    runAsync: (code, ...args) => module.runAsync(interpreter, code, ...args),\n    runEvent: (...args) => module.runEvent(interpreter, ...args),\n});\n\nexport const createOverload = (module, name) => ($, pre) => {\n    const method = module[name].bind(module);\n    module[name] = (interpreter, code, ...args) =>\n        method(interpreter, `${pre ? $ : code}\\n${pre ? code : $}`, ...args);\n};\n\nexport const js_modules = Symbol.for('polyscript.js_modules');\n\nconst jsModules = new Map;\ndefineProperty(globalThis, js_modules, { value: jsModules });\n\nexport const JSModules = new Proxy(jsModules, {\n    get: (map, name) => map.get(name),\n    has: (map, name) => map.has(name),\n    ownKeys: map => [...map.keys()],\n});\n\nconst has = (_, field) => !field.startsWith('_');\n\nconst proxy = (modules, name) => new Proxy(\n    modules,\n    { has, get: (modules, field) => modules[name][field] }\n);\n\nexport const registerJSModules = (type, module, interpreter, modules) => {\n    // Pyodide resolves JS modules magically\n    if (type === 'pyodide') return;\n\n    // other runtimes need this pretty ugly dance (it works though)\n    const jsModules = 'polyscript.js_modules';\n    for (const name of Reflect.ownKeys(modules))\n        module.registerJSModule(interpreter, `${jsModules}.${name}`, proxy(modules, name));\n    module.registerJSModule(interpreter, jsModules, modules);\n};\n\nexport const importJS = (source, name) => import(source).then(esm => {\n    jsModules.set(name, { ...esm });\n});\n\nexport const importCSS = href => new Promise((onload, onerror) => {\n    if (document.querySelector(`link[href=\"${href}\"]`)) onload();\n    document.head.append(\n        assign(\n            document.createElement('link'),\n            { rel: 'stylesheet', href, onload, onerror },\n        )\n    )\n});\n\nexport const isCSS = source => /\\.css/i.test(new URL(source).pathname);\n/* c8 ignore stop */\n\nexport {\n    dedent, unescape,\n    dispatch,\n    isArray,\n    assign,\n    create,\n    defineProperties,\n    defineProperty,\n    entries,\n    all,\n    resolve,\n    absoluteURL,\n    nodeInfo,\n};\n","import '@ungap/with-resolvers';\nimport { UNDEFINED } from 'proxy-target/types';\n\nimport { getBuffer } from '../fetch-utils.js';\nimport { absoluteURL, all, entries, importCSS, importJS, isArray, isCSS } from '../utils.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n\n// This should be the only helper needed for all Emscripten based FS exports\nexport const writeFile = ({ FS, PATH, PATH_FS }, path, buffer) => {\n    const absPath = PATH_FS.resolve(path);\n    FS.mkdirTree(PATH.dirname(absPath));\n    return FS.writeFile(absPath, new Uint8Array(buffer), {\n        canOwn: true,\n    });\n};\n/* c8 ignore stop */\n\n// This is instead a fallback for Lua or others\nexport const writeFileShim = (FS, path, buffer) => {\n    mkdirTree(FS, dirname(path));\n    path = resolve(FS, path);\n    return FS.writeFile(path, new Uint8Array(buffer), { canOwn: true });\n};\n\nconst dirname = (path) => {\n    const tree = path.split('/');\n    tree.pop();\n    return tree.join('/');\n};\n\nconst mkdirTree = (FS, path) => {\n    const current = [];\n    for (const branch of path.split('/')) {\n        if (branch === '.') continue;\n        current.push(branch);\n        if (branch) FS.mkdir(current.join('/'));\n    }\n};\n\nconst resolve = (FS, path) => {\n    const tree = [];\n    for (const branch of path.split('/')) {\n        switch (branch) {\n            case '':\n                break;\n            case '.':\n                break;\n            case '..':\n                tree.pop();\n                break;\n            default:\n                tree.push(branch);\n        }\n    }\n    return [FS.cwd()].concat(tree).join('/').replace(/^\\/+/, '/');\n};\n\nconst calculateFetchPaths = (config_fetch) => {\n    // REQUIRES INTEGRATION TEST\n    /* c8 ignore start */\n    for (const { files, to_file, from = '' } of config_fetch) {\n        if (files !== undefined && to_file !== undefined)\n            throw new Error(\n                'Cannot use \\'to_file\\' and \\'files\\' parameters together!',\n            );\n        if (files === undefined && to_file === undefined && from.endsWith('/'))\n            throw new Error(\n                `Couldn't determine the filename from the path ${from}, please supply 'to_file' parameter.`,\n            );\n    }\n    /* c8 ignore stop */\n    return config_fetch.flatMap(\n        ({ from = '', to_folder = '.', to_file, files }) => {\n            if (isArray(files))\n                return files.map((file) => ({\n                    url: joinPaths([from, file]),\n                    path: joinPaths([to_folder, file]),\n                }));\n            const filename = to_file || from.slice(1 + from.lastIndexOf('/'));\n            return [{ url: from, path: joinPaths([to_folder, filename]) }];\n        },\n    );\n};\n\nconst joinPaths = (parts) => {\n    const res = parts\n        .map((part) => part.trim().replace(/(^[/]*|[/]*$)/g, ''))\n        .filter((p) => p !== '' && p !== '.')\n        .join('/');\n\n    return parts[0].startsWith('/') ? `/${res}` : res;\n};\n\nconst fetchResolved = (config_fetch, url) =>\n    fetch(absoluteURL(url, base.get(config_fetch)));\n\nexport const base = new WeakMap();\n\n/* c8 ignore start */\nexport const fetchPaths = (module, interpreter, config_fetch) =>\n    all(\n        calculateFetchPaths(config_fetch).map(({ url, path }) =>\n            fetchResolved(config_fetch, url)\n                .then(getBuffer)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n\n    const fillName = (source, dest) => dest.endsWith('/') ?\n                        `${dest}${source.split('/').pop()}` : dest;\n\nconst parseTemplate = (src, map) => src.replace(\n  /\\{.+?\\}/g,\n  k => {\n    if (!map.has(k))\n      throw new SyntaxError(`Invalid template: ${k}`);\n    return map.get(k);\n  }\n);\n\nconst calculateFilesPaths = files => {\n  const map = new Map;\n  const targets = new Set;\n  const sourceDest = [];\n  for (const [source, dest] of entries(files)) {\n    if (/^\\{.+\\}$/.test(source)) {\n      if (map.has(source))\n        throw new SyntaxError(`Duplicated template: ${source}`);\n      map.set(source, parseTemplate(dest, map));\n    }\n    else {\n      const url = parseTemplate(source, map);\n      const path = fillName(url, parseTemplate(dest || './', map));\n      if (targets.has(path))\n        throw new SyntaxError(`Duplicated destination: ${path}`);\n      targets.add(path);\n      sourceDest.push({ url, path });\n    }\n  }\n  return sourceDest;\n};\n\nexport const fetchFiles = (module, interpreter, config_files) =>\n    all(\n        calculateFilesPaths(config_files).map(({ url, path }) =>\n            fetchResolved(config_files, url)\n                .then(getBuffer)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n\nconst RUNNING_IN_WORKER = typeof document === UNDEFINED;\n\nexport const fetchJSModules = ({ main, worker }) => {\n    const promises = [];\n    if (worker && RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(worker)) {\n            source = absoluteURL(source, base.get(worker));\n            promises.push(importJS(source, name));\n        }\n    }\n    if (main && !RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(main)) {\n            source = absoluteURL(source, base.get(main));\n            if (isCSS(source)) importCSS(source);\n            else promises.push(importJS(source, name));\n        }\n    }\n    return all(promises);\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { io } from './_io.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const registerJSModule = (interpreter, name, value) => {\n    interpreter.registerJsModule(name, value);\n};\n\nexport const run = (interpreter, code, ...args) => {\n    try {\n        return interpreter.runPython(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runAsync = async (interpreter, code, ...args) => {\n    try {\n        return await interpreter.runPythonAsync(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runEvent = async (interpreter, code, event) => {\n    // allows method(event) as well as namespace.method(event)\n    // it does not allow fancy brackets names for now\n    const [name, ...keys] = code.split('.');\n    let target = interpreter.globals.get(name);\n    let context;\n    for (const key of keys) [context, target] = [target, target[key]];\n    try {\n        await target.call(context, event);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n/* c8 ignore stop */\n","// ⚠️ DO NOT MODIFY - SOURCE FILE: \"../../python/mip.py\"\nexport default new TextEncoder().encode(\"from uio import StringIO\\nimport sys\\n\\nclass Response:\\n    def __init__(self, f):\\n        self.raw = f\\n        self.encoding = \\\"utf-8\\\"\\n        self._cached = None\\n\\n    def close(self):\\n        if self.raw:\\n            self.raw.close()\\n            self.raw = None\\n        self._cached = None\\n\\n    @property\\n    def content(self):\\n        if self._cached is None:\\n            try:\\n                self._cached = self.raw.read()\\n            finally:\\n                self.raw.close()\\n                self.raw = None\\n        return self._cached\\n\\n    @property\\n    def text(self):\\n        return str(self.content, self.encoding)\\n\\n    def json(self):\\n        import ujson\\n\\n        return ujson.loads(self.content)\\n\\n\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\nHEADERS_TO_IGNORE = (\\\"user-agent\\\",)\\n\\n\\ntry:\\n    import js\\nexcept Exception as err:\\n    raise OSError(\\\"This version of urequests can only be used in the browser\\\")\\n\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\n\\nHEADERS_TO_IGNORE = (\\\"user-agent\\\",)\\n\\n\\ndef request(\\n    method,\\n    url,\\n    data=None,\\n    json=None,\\n    headers={},\\n    stream=None,\\n    auth=None,\\n    timeout=None,\\n    parse_headers=True,\\n):\\n    from js import XMLHttpRequest\\n\\n    xhr = XMLHttpRequest.new()\\n    xhr.withCredentials = False\\n\\n    if auth is not None:\\n        import ubinascii\\n\\n        username, password = auth\\n        xhr.open(method, url, False, username, password)\\n    else:\\n        xhr.open(method, url, False)\\n\\n    for name, value in headers.items():\\n        if name.lower() not in HEADERS_TO_IGNORE:\\n            xhr.setRequestHeader(name, value)\\n\\n    if timeout:\\n        xhr.timeout = int(timeout * 1000)\\n\\n    if json is not None:\\n        assert data is None\\n        import ujson\\n\\n        data = ujson.dumps(json)\\n        # s.write(b\\\"Content-Type: application/json\\\\r\\\\n\\\")\\n        xhr.setRequestHeader(\\\"Content-Type\\\", \\\"application/json\\\")\\n\\n    xhr.send(data)\\n\\n    # Emulates the construction process in the original urequests\\n    resp = Response(StringIO(xhr.responseText))\\n    resp.status_code = xhr.status\\n    resp.reason = xhr.statusText\\n    resp.headers = xhr.getAllResponseHeaders()\\n\\n    return resp\\n\\n\\n# Other methods - head, post, put, patch, delete - are not used by\\n# mip and therefore not included\\n\\n\\ndef get(url, **kw):\\n    return request(\\\"GET\\\", url, **kw)\\n\\n\\n# Content below this line is from the Micropython MIP package and is covered\\n# by the applicable MIT license:\\n# \\n# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER \\n# DEALINGS IN THE SOFTWARE.\\n\\n# MicroPython package installer\\n# MIT license; Copyright (c) 2022 Jim Mussared\\n\\n\\n_PACKAGE_INDEX = const(\\\"https://micropython.org/pi/v2\\\")\\n_CHUNK_SIZE = 128\\n\\n\\n# This implements os.makedirs(os.dirname(path))\\ndef _ensure_path_exists(path):\\n    import os\\n\\n    split = path.split(\\\"/\\\")\\n\\n    # Handle paths starting with \\\"/\\\".\\n    if not split[0]:\\n        split.pop(0)\\n        split[0] = \\\"/\\\" + split[0]\\n\\n    prefix = \\\"\\\"\\n    for i in range(len(split) - 1):\\n        prefix += split[i]\\n        try:\\n            os.stat(prefix)\\n        except:\\n            os.mkdir(prefix)\\n        prefix += \\\"/\\\"\\n\\n\\n# Copy from src (stream) to dest (function-taking-bytes)\\ndef _chunk(src, dest):\\n    buf = memoryview(bytearray(_CHUNK_SIZE))\\n    while True:\\n        n = src.readinto(buf)\\n        if n == 0:\\n            break\\n        dest(buf if n == _CHUNK_SIZE else buf[:n])\\n\\n\\n# Check if the specified path exists and matches the hash.\\ndef _check_exists(path, short_hash):\\n    import os\\n\\n    try:\\n        import binascii\\n        import hashlib\\n\\n        with open(path, \\\"rb\\\") as f:\\n            hs256 = hashlib.sha256()\\n            _chunk(f, hs256.update)\\n            existing_hash = str(binascii.hexlify(hs256.digest())[: len(short_hash)], \\\"utf-8\\\")\\n            return existing_hash == short_hash\\n    except:\\n        return False\\n\\n\\ndef _rewrite_url(url, branch=None):\\n    if not branch:\\n        branch = \\\"HEAD\\\"\\n    if url.startswith(\\\"github:\\\"):\\n        url = url[7:].split(\\\"/\\\")\\n        url = (\\n            \\\"https://raw.githubusercontent.com/\\\"\\n            + url[0]\\n            + \\\"/\\\"\\n            + url[1]\\n            + \\\"/\\\"\\n            + branch\\n            + \\\"/\\\"\\n            + \\\"/\\\".join(url[2:])\\n        )\\n    return url\\n\\n\\ndef _download_file(url, dest):\\n    response = get(url)\\n    try:\\n        if response.status_code != 200:\\n            print(\\\"Error\\\", response.status_code, \\\"requesting\\\", url)\\n            return False\\n\\n        print(\\\"Copying:\\\", dest)\\n        _ensure_path_exists(dest)\\n        with open(dest, \\\"wb\\\") as f:\\n            _chunk(response.raw, f.write)\\n\\n        return True\\n    finally:\\n        response.close()\\n\\n\\ndef _install_json(package_json_url, index, target, version, mpy):\\n    response = get(_rewrite_url(package_json_url, version))\\n    try:\\n        if response.status_code != 200:\\n            print(\\\"Package not found:\\\", package_json_url)\\n            return False\\n\\n        package_json = response.json()\\n    finally:\\n        response.close()\\n    for target_path, short_hash in package_json.get(\\\"hashes\\\", ()):\\n        fs_target_path = target + \\\"/\\\" + target_path\\n        if _check_exists(fs_target_path, short_hash):\\n            print(\\\"Exists:\\\", fs_target_path)\\n        else:\\n            file_url = \\\"{}/file/{}/{}\\\".format(index, short_hash[:2], short_hash)\\n            if not _download_file(file_url, fs_target_path):\\n                print(\\\"File not found: {} {}\\\".format(target_path, short_hash))\\n                return False\\n    for target_path, url in package_json.get(\\\"urls\\\", ()):\\n        fs_target_path = target + \\\"/\\\" + target_path\\n        if not _download_file(_rewrite_url(url, version), fs_target_path):\\n            print(\\\"File not found: {} {}\\\".format(target_path, url))\\n            return False\\n    for dep, dep_version in package_json.get(\\\"deps\\\", ()):\\n        if not _install_package(dep, index, target, dep_version, mpy):\\n            return False\\n    return True\\n\\n\\ndef _install_package(package, index, target, version, mpy):\\n    if (\\n        package.startswith(\\\"http://\\\")\\n        or package.startswith(\\\"https://\\\")\\n        or package.startswith(\\\"github:\\\")\\n    ):\\n        if package.endswith(\\\".py\\\") or package.endswith(\\\".mpy\\\"):\\n            print(\\\"Downloading {} to {}\\\".format(package, target))\\n            return _download_file(\\n                _rewrite_url(package, version), target + \\\"/\\\" + package.rsplit(\\\"/\\\")[-1]\\n            )\\n        else:\\n            if not package.endswith(\\\".json\\\"):\\n                if not package.endswith(\\\"/\\\"):\\n                    package += \\\"/\\\"\\n                package += \\\"package.json\\\"\\n            print(\\\"Installing {} to {}\\\".format(package, target))\\n    else:\\n        if not version:\\n            version = \\\"latest\\\"\\n        print(\\\"Installing {} ({}) from {} to {}\\\".format(package, version, index, target))\\n\\n        mpy_version = (\\n            sys.implementation._mpy & 0xFF if mpy and hasattr(sys.implementation, \\\"_mpy\\\") else \\\"py\\\"\\n        )\\n\\n        package = \\\"{}/package/{}/{}/{}.json\\\".format(index, mpy_version, package, version)\\n\\n    return _install_json(package, index, target, version, mpy)\\n\\n\\ndef install(package, index=None, target=None, version=None, mpy=True):\\n    if not target:\\n        for p in sys.path:\\n            if p.endswith(\\\"/lib\\\"):\\n                target = p\\n                break\\n        else:\\n            print(\\\"Unable to find lib dir in sys.path\\\")\\n            return\\n\\n    if not index:\\n        index = _PACKAGE_INDEX\\n\\n    if _install_package(package, index.rstrip(\\\"/\\\"), target, version, mpy):\\n        print(\\\"Done\\\")\\n    else:\\n        print(\\\"Package may be partially installed\\\")\\n\");","import { fetchFiles, fetchJSModules, fetchPaths, writeFile } from './_utils.js';\nimport { registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio } from './_io.js';\nimport mip from '../python/mip.js';\n\nconst type = 'micropython';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.21.0-279') =>\n        `https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${version}/micropython.mjs`,\n    async engine({ loadMicroPython }, config, url) {\n        const { stderr, stdout, get } = stdio();\n        url = url.replace(/\\.m?js$/, '.wasm');\n        const interpreter = await get(loadMicroPython({ stderr, stdout, url }));\n        if (config.files) await fetchFiles(this, interpreter, config.files);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch);\n        if (config.js_modules) await fetchJSModules(config.js_modules);\n\n        // Install Micropython Package\n        this.writeFile(interpreter, './mip.py', mip);\n        if (config.packages){\n            const mpyPackageManager = interpreter.pyimport('mip');\n            for (const mpyPackage of config.packages)\n                mpyPackageManager.install(mpyPackage);\n        }\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (interpreter, value) => (\n        value instanceof interpreter.PyProxy ?\n            interpreter.PyProxy.toJs(value) :\n            value\n    ),\n    writeFile: ({ FS, _module: { PATH, PATH_FS } }, path, buffer) =>\n        writeFile({ FS, PATH, PATH_FS }, path, buffer),\n};\n/* c8 ignore stop */\n","import { fetchFiles, fetchJSModules, fetchPaths, writeFile } from './_utils.js';\nimport { registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio } from './_io.js';\n\nconst type = 'pyodide';\nconst toJsOptions = { dict_converter: Object.fromEntries };\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '0.24.1') =>\n        `https://cdn.jsdelivr.net/pyodide/v${version}/full/pyodide.mjs`,\n    async engine({ loadPyodide }, config, url) {\n        const { stderr, stdout, get } = stdio();\n        const indexURL = url.slice(0, url.lastIndexOf('/'));\n        const interpreter = await get(\n            loadPyodide({ stderr, stdout, indexURL }),\n        );\n        if (config.files) await fetchFiles(this, interpreter, config.files);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch);\n        if (config.js_modules) await fetchJSModules(config.js_modules);\n        if (config.packages) {\n            await interpreter.loadPackage('micropip');\n            const micropip = await interpreter.pyimport('micropip');\n            await micropip.install(config.packages, { keep_going: true });\n            micropip.destroy();\n        }\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (interpreter, value) => (\n        value instanceof interpreter.ffi.PyProxy ?\n            value.toJs(toJsOptions) :\n            value\n    ),\n    writeFile: ({ FS, PATH, _module: { PATH_FS } }, path, buffer) =>\n        writeFile({ FS, PATH, PATH_FS }, path, buffer),\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\n\nconst type = 'ruby-wasm-wasi';\nconst jsType = type.replace(/\\W+/g, '_');\n\n// MISSING:\n//  * there is no VFS apparently or I couldn't reach any\n//  * I've no idea how to override the stderr and stdout\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    experimental: true,\n    module: (version = '2.2.0') =>\n        `https://cdn.jsdelivr.net/npm/ruby-3_2-wasm-wasi@${version}/dist/browser.esm.js`,\n    async engine({ DefaultRubyVM }, config, url) {\n        const response = await fetch(\n            `${url.slice(0, url.lastIndexOf('/'))}/ruby.wasm`,\n        );\n        const module = await WebAssembly.compile(await response.arrayBuffer());\n        const { vm: interpreter } = await DefaultRubyVM(module);\n        if (config.files) await fetchFiles(this, interpreter, config.files);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch);\n        if (config.js_modules) await fetchJSModules(config.js_modules);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(interpreter, name, value) {\n        name = name.replace(/\\W+/g, '__');\n        const id = `__module_${jsType}_${name}`;\n        globalThis[id] = value;\n        this.run(interpreter, `require \"js\";$${name}=JS.global[:${id}]`);\n        delete globalThis[id];\n    },\n    run: (interpreter, code, ...args) => interpreter.eval(dedent(code), ...args),\n    runAsync: (interpreter, code, ...args) => interpreter.evalAsync(dedent(code), ...args),\n    async runEvent(interpreter, code, event) {\n        // patch common xworker.onmessage/onerror cases\n        if (/^xworker\\.(on\\w+)$/.test(code)) {\n            const { $1: name } = RegExp;\n            const id = `__module_${jsType}_event`;\n            globalThis[id] = event;\n            this.run(\n                interpreter,\n                `require \"js\";$xworker.call(\"${name}\",JS.global[:${id}])`,\n            );\n            delete globalThis[id];\n        } else {\n            // Experimental: allows only events by fully qualified method name\n            const method = this.run(interpreter, `method(:${code})`);\n            await method.call(code, interpreter.wrap(event));\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: () => {\n        throw new Error(`writeFile is not supported in ${type}`);\n    },\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths, writeFileShim } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'wasmoon';\n\n// MISSING:\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.16.0') =>\n        `https://cdn.jsdelivr.net/npm/wasmoon@${version}/+esm`,\n    async engine({ LuaFactory, LuaLibraries }, config) {\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(new LuaFactory().createEngine());\n        interpreter.global.getTable(LuaLibraries.Base, (index) => {\n            interpreter.global.setField(index, 'print', stdout);\n            interpreter.global.setField(index, 'printErr', stderr);\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch);\n        if (config.js_modules) await fetchJSModules(config.js_modules);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields\n    registerJSModule: (interpreter, name, value) => {\n        interpreter.global.set(name, value);\n    },\n    run: (interpreter, code, ...args) => {\n        try {\n            return interpreter.doStringSync(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runAsync: async (interpreter, code, ...args) => {\n        try {\n            return await interpreter.doString(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runEvent: async (interpreter, code, event) => {\n        // allows method(event) as well as namespace.method(event)\n        // it does not allow fancy brackets names for now\n        const [name, ...keys] = code.split('.');\n        let target = interpreter.global.get(name);\n        let context;\n        for (const key of keys) [context, target] = [target, target[key]];\n        try {\n            await target.call(context, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: (\n        {\n            cmodule: {\n                module: { FS },\n            },\n        },\n        path,\n        buffer,\n    ) => writeFileShim(FS, path, buffer),\n};\n/* c8 ignore stop */\n","// ⚠️ Part of this file is automatically generated\n//    The :RUNTIMES comment is a delimiter and no code should be written/changed after\n//    See rollup/build_interpreters.cjs to know more\n\nimport { base } from './interpreter/_utils.js';\n\n/** @type {Map<string, object>} */\nexport const registry = new Map();\n\n/** @type {Map<string, object>} */\nexport const configs = new Map();\n\n/** @type {string[]} */\nexport const selectors = [];\n\n/** @type {string[]} */\nexport const prefixes = [];\n\nexport const interpreter = new Proxy(new Map(), {\n    get(map, id) {\n        if (!map.has(id)) {\n            const [type, ...rest] = id.split('@');\n            const interpreter = registry.get(type);\n            const url = /^(?:\\.?\\.?\\/|https?:\\/\\/)/i.test(rest) \n                ? rest.join('@')\n                : interpreter.module(...rest);\n            map.set(id, {\n                url,\n                module: import(/* webpackIgnore: true */url),\n                engine: interpreter.engine.bind(interpreter),\n            });\n        }\n        const { url, module, engine } = map.get(id);\n        return (config, baseURL) =>\n            module.then((module) => {\n                configs.set(id, config);\n                for (const entry of ['files', 'fetch']) {\n                    const value = config?.[entry];\n                    if (value) base.set(value, baseURL);\n                }\n                for (const entry of ['main', 'worker']) {\n                    const value = config?.js_modules?.[entry];\n                    if (value) base.set(value, baseURL);\n                }\n                return engine(module, config, url);\n            });\n    },\n});\n\nconst register = (interpreter) => {\n    for (const type of [].concat(interpreter.type)) {\n        registry.set(type, interpreter);\n        selectors.push(`script[type=\"${type}\"]`);\n        prefixes.push(`${type}-`);\n    }\n};\n\n//:RUNTIMES\nimport micropython from './interpreter/micropython.js';\nimport pyodide from './interpreter/pyodide.js';\nimport ruby_wasm_wasi from './interpreter/ruby-wasm-wasi.js';\nimport wasmoon from './interpreter/wasmoon.js';\nfor (const interpreter of [micropython, pyodide, ruby_wasm_wasi, wasmoon])\n    register(interpreter);\n","// lazy TOML parser (fast-toml might be a better alternative)\nconst TOML_LIB = 'https://cdn.jsdelivr.net/npm/basic-toml@0.3.1/es.js';\n\n/**\n * @param {string} text TOML text to parse\n * @returns {object} the resulting JS object\n */\nexport const parse = async (text) => (await import(/* webpackIgnore: true */TOML_LIB)).parse(text);\n","import { interpreter } from './interpreters.js';\nimport { absoluteURL, resolve } from './utils.js';\nimport { parse } from './toml.js';\nimport { getJSON, getText } from './fetch-utils.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const getConfigURLAndType = (config, configURL = './config.txt') => {\n    let type = typeof config;\n    if (type === 'string' && /\\.(json|toml|txt)$/.test(config))\n        type = RegExp.$1;\n    else\n        config = configURL;\n    return [absoluteURL(config), type];\n};\n\nconst parseString = config => {\n    try {\n        return JSON.parse(config);\n    } catch (_) {\n        return parse(config);\n    }\n};\n/* c8 ignore stop */\n\n/**\n * Parse a generic config if it came from an attribute either as URL\n * or as a serialized string. In XWorker case, accepts a pre-defined\n * options to use as it is to avoid needing at all a fetch operation.\n * In latter case, config will be suffixed as `config.txt`.\n * @param {string} id the interpreter name @ version identifier\n * @param {string | object} config optional config file to parse\n * @param {string} [configURL] optional config URL if config is not string\n * @param {object} [options] optional options used to bootstrap XWorker\n * @returns\n */\nexport const getRuntime = (id, config, configURL, options = {}) => {\n    if (config) {\n        // REQUIRES INTEGRATION TEST\n        /* c8 ignore start */\n        const [absolute, type] = getConfigURLAndType(config, configURL);\n        if (type === 'json') {\n            options = fetch(absolute).then(getJSON);\n        } else if (type === 'toml') {\n            options = fetch(absolute).then(getText).then(parse);\n        } else if (type === 'string') {\n            options = parseString(config);\n        } else if (type === 'object' && config) {\n            options = config;\n        } else if (type === 'txt' && typeof options === 'string') {\n            options = parseString(options);\n        }\n        config = absolute;\n        /* c8 ignore stop */\n    }\n    return resolve(options).then(options => interpreter[id](options, config));\n};\n\n/**\n * @param {string} type the interpreter type\n * @param {string} [version] the optional interpreter version\n * @returns\n */\nexport const getRuntimeID = (type, version = '') =>\n    `${type}@${version}`.replace(/@$/, '');\n","export default function (callback = this) {\n  return String(callback).replace(\n    /^(async\\s*)?(\\bfunction\\b)?(.*?)\\(/,\n    (_, isAsync, fn, name) => (\n      name && !fn ?\n        `${isAsync || \"\"}function ${name}(` :\n        _\n    ),\n  );\n};\n","import { registry } from './interpreters.js';\n\nconst beforeRun = 'BeforeRun';\nconst afterRun = 'AfterRun';\n\nexport const code = [\n    `code${beforeRun}`,\n    `code${beforeRun}Async`,\n    `code${afterRun}`,\n    `code${afterRun}Async`,\n];\n\nexport const js = [\n    'onWorker',\n    'onReady',\n    `on${beforeRun}`,\n    `on${beforeRun}Async`,\n    `on${afterRun}`,\n    `on${afterRun}Async`,\n];\n\n/* c8 ignore start */\n// create a copy of the resolved wrapper with the original\n// run and runAsync so that, if used within onBeforeRun/Async\n// or onAfterRun/Async polluted entries won't matter and just\n// the native utilities will be available without seppuku.\n// The same applies if called within `onReady` worker hook.\nexport function patch(resolved, interpreter) {\n    const { run, runAsync } = registry.get(this.type);\n    return {\n        ...resolved,\n        run: run.bind(this, interpreter),\n        runAsync: runAsync.bind(this, interpreter)\n    };\n}\n\n/**\n * Created the wrapper to pass along hooked callbacks.\n * @param {object} module the details module\n * @param {object} ref the node or reference to pass as second argument\n * @param {boolean} isAsync if run should be async\n * @param {function?} before callback to run before\n * @param {function?} after callback to run after\n * @returns {object}\n */\nexport const polluteJS = (module, resolved, ref, isAsync, before, after) => {\n    if (before || after) {\n        const patched = patch.bind(module, resolved);\n        const name = isAsync ? 'runAsync' : 'run';\n        const method = module[name];\n        module[name] = isAsync ?\n            async function (interpreter, code, ...args) {\n                if (before) await before.call(this, patched(interpreter), ref);\n                const result = await method.call(\n                    this,\n                    interpreter,\n                    code,\n                    ...args\n                );\n                if (after) await after.call(this, patched(interpreter), ref);\n                return result;\n            } :\n            function (interpreter, code, ...args) {\n                if (before) before.call(this, patched(interpreter), ref);\n                const result = method.call(this, interpreter, code, ...args);\n                if (after) after.call(this, patched(interpreter), ref);\n                return result;\n            }\n        ;\n    }\n};\n/* c8 ignore stop */\n","import toJSONCallback from 'to-json-callback';\n\nimport { dedent } from '../utils.js';\nimport { js as jsHooks, code as codeHooks } from '../hooks.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default class Hook {\n    constructor(interpreter, hooks = {}) {\n        const { main, worker } = hooks;\n        this.interpreter = interpreter;\n        this.onWorker = main?.onWorker;\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1))\n            this[key] = worker?.[key];\n        for (const key of codeHooks)\n            this[key] = worker?.[key];\n    }\n    toJSON() {\n        const hooks = {};\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1)) {\n            if (this[key]) hooks[key] = toJSONCallback(this[key]);\n        }\n        // code related: exclude `onReady` callback\n        for (const key of codeHooks) {\n            if (this[key]) hooks[key] = dedent(this[key]());\n        }\n        return hooks;\n    }\n}\n/* c8 ignore stop */\n","import * as JSON from '@ungap/structured-clone/json';\nimport coincident from 'coincident/window';\nimport xworker from './xworker.js';\nimport { getConfigURLAndType } from '../loader.js';\nimport { assign, create, defineProperties, importCSS, importJS } from '../utils.js';\nimport { getText } from '../fetch-utils.js';\nimport Hook from './hook.js';\n\n/**\n * @typedef {Object} WorkerOptions custom configuration\n * @prop {string} type the interpreter type to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string | object} [config] the optional config to use within such interpreter\n * @prop {string} [configURL] the optional configURL used to resolve config entries\n */\n\nexport default (...args) =>\n    /**\n     * A XWorker is a Worker facade able to bootstrap a channel with any desired interpreter.\n     * @param {string} url the remote file to evaluate on bootstrap\n     * @param {WorkerOptions} [options] optional arguments to define the interpreter to use\n     * @returns {Worker}\n     */\n    function XWorker(url, options) {\n        const worker = xworker();\n        const { postMessage } = worker;\n        const isHook = this instanceof Hook;\n\n        if (args.length) {\n            const [type, version] = args;\n            options = assign({}, options || { type, version });\n            if (!options.type) options.type = type;\n        }\n\n        // provide a base url to fetch or load config files from a Worker\n        // because there's no location at all in the Worker as it's embedded.\n        // fallback to a generic, ignored, config.txt file to still provide a URL.\n        const [ config ] = getConfigURLAndType(options.config, options.configURL);\n\n        const bootstrap = fetch(url)\n            .then(getText)\n            .then(code => {\n                const hooks = isHook ? this.toJSON() : void 0;\n                postMessage.call(worker, { options, config, code, hooks });\n            });\n\n        const sync = assign(\n            coincident(worker, JSON).proxy,\n            { importJS, importCSS },\n        );\n\n        defineProperties(worker, {\n            sync: { value: sync },\n            postMessage: {\n                value: (data, ...rest) =>\n                    bootstrap.then(() =>\n                        postMessage.call(worker, data, ...rest),\n                    ),\n            },\n            onerror: {\n                writable: true,\n                configurable: true,\n                value: console.error\n            }\n        });\n\n        worker.addEventListener('message', event => {\n            const { data } = event;\n            if (data instanceof Error) {\n                event.stopImmediatePropagation();\n                worker.onerror(create(event, {\n                    type: { value: 'error' },\n                    error: { value: data }\n                }));\n            }\n        });\n\n        if (isHook) this.onWorker?.(this.interpreter, worker);\n\n        return worker;\n    };\n","/* c8 ignore next */\nexport default () => new Worker(URL.createObjectURL(new Blob([\"const e=\\\"object\\\"==typeof self?self:globalThis,t=t=>((t,n)=>{const r=(e,n)=>(t.set(n,e),e),s=o=>{if(t.has(o))return t.get(o);const[a,i]=n[o];switch(a){case 0:case-1:return r(i,o);case 1:{const e=r([],o);for(const t of i)e.push(s(t));return e}case 2:{const e=r({},o);for(const[t,n]of i)e[s(t)]=s(n);return e}case 3:return r(new Date(i),o);case 4:{const{source:e,flags:t}=i;return r(new RegExp(e,t),o)}case 5:{const e=r(new Map,o);for(const[t,n]of i)e.set(s(t),s(n));return e}case 6:{const e=r(new Set,o);for(const t of i)e.add(s(t));return e}case 7:{const{name:t,message:n}=i;return r(new e[t](n),o)}case 8:return r(BigInt(i),o);case\\\"BigInt\\\":return r(Object(BigInt(i)),o)}return r(new e[a](i),o)};return s})(new Map,t)(0),n=\\\"\\\",{toString:r}={},{keys:s}=Object,o=e=>{const t=typeof e;if(\\\"object\\\"!==t||!e)return[0,t];const s=r.call(e).slice(8,-1);switch(s){case\\\"Array\\\":return[1,n];case\\\"Object\\\":return[2,n];case\\\"Date\\\":return[3,n];case\\\"RegExp\\\":return[4,n];case\\\"Map\\\":return[5,n];case\\\"Set\\\":return[6,n]}return s.includes(\\\"Array\\\")?[1,s]:s.includes(\\\"Error\\\")?[7,s]:[2,s]},a=([e,t])=>0===e&&(\\\"function\\\"===t||\\\"symbol\\\"===t),i=(e,{json:t,lossy:n}={})=>{const r=[];return((e,t,n,r)=>{const i=(e,t)=>{const s=r.push(e)-1;return n.set(t,s),s},c=r=>{if(n.has(r))return n.get(r);let[l,u]=o(r);switch(l){case 0:{let t=r;switch(u){case\\\"bigint\\\":l=8,t=r.toString();break;case\\\"function\\\":case\\\"symbol\\\":if(e)throw new TypeError(\\\"unable to serialize \\\"+u);t=null;break;case\\\"undefined\\\":return i([-1],r)}return i([l,t],r)}case 1:{if(u)return i([u,[...r]],r);const e=[],t=i([l,e],r);for(const t of r)e.push(c(t));return t}case 2:{if(u)switch(u){case\\\"BigInt\\\":return i([u,r.toString()],r);case\\\"Boolean\\\":case\\\"Number\\\":case\\\"String\\\":return i([u,r.valueOf()],r)}if(t&&\\\"toJSON\\\"in r)return c(r.toJSON());const n=[],p=i([l,n],r);for(const t of s(r))!e&&a(o(r[t]))||n.push([c(t),c(r[t])]);return p}case 3:return i([l,r.toISOString()],r);case 4:{const{source:e,flags:t}=r;return i([l,{source:e,flags:t}],r)}case 5:{const t=[],n=i([l,t],r);for(const[n,s]of r)(e||!a(o(n))&&!a(o(s)))&&t.push([c(n),c(s)]);return n}case 6:{const t=[],n=i([l,t],r);for(const n of r)!e&&a(o(n))||t.push(c(n));return n}}const{message:p}=r;return i([l,{name:u,message:p}],r)};return c})(!(t||n),!!t,new Map,r)(e),r},{parse:c,stringify:l}=JSON,u={json:!0,lossy:!0};var p=Object.freeze({__proto__:null,parse:e=>t(c(e)),stringify:e=>l(i(e,u))});const f=\\\"ac6c1995-0675-46af-a99f-7fa298fa4e6d\\\",h=\\\"M\\\"+f,d=\\\"T\\\"+f,g=\\\"array\\\",y=\\\"function\\\",m=\\\"null\\\",w=\\\"number\\\",_=\\\"object\\\",b=\\\"string\\\",E=\\\"symbol\\\",k=\\\"undefined\\\",v=\\\"apply\\\",T=\\\"construct\\\",S=\\\"defineProperty\\\",x=\\\"deleteProperty\\\",A=\\\"get\\\",O=\\\"getOwnPropertyDescriptor\\\",j=\\\"getPrototypeOf\\\",R=\\\"has\\\",P=\\\"isExtensible\\\",N=\\\"ownKeys\\\",I=\\\"preventExtensions\\\",$=\\\"set\\\",M=\\\"setPrototypeOf\\\",F=\\\"delete\\\";var H=e=>({value:new Promise((t=>{let n=new Worker(\\\"data:application/javascript,onmessage%3D(%7Bdata%3Ab%7D)%3D%3E(Atomics.wait(b%2C0)%2CpostMessage(0))\\\");n.onmessage=t,n.postMessage(e)}))})\\n/*! (c) Andrea Giammarchi - ISC */;const{Int32Array:W,Map:C,SharedArrayBuffer:D,Uint16Array:L}=globalThis,{BYTES_PER_ELEMENT:B}=W,{BYTES_PER_ELEMENT:U}=L,{isArray:J}=Array,{notify:q,wait:G,waitAsync:K}=Atomics,Y=new WeakSet,z=new WeakMap,X={value:{then:e=>e()}};let V=0;const Z=(e,{parse:t=JSON.parse,stringify:n=JSON.stringify,transform:r,interrupt:s}=JSON)=>{if(!z.has(e)){const o=(t,...n)=>e.postMessage({[f]:n},{transfer:t}),a=typeof s===y?s:s?.handler,i=s?.delay||42,c=new TextDecoder(\\\"utf-16\\\"),l=(e,t)=>e?(K||H)(t,0):(a?((e,t,n)=>{for(;\\\"timed-out\\\"===G(e,0,0,t);)n()})(t,i,a):G(t,0),X);let u=!1;z.set(e,new Proxy(new C,{[R]:(e,t)=>\\\"string\\\"==typeof t&&!t.startsWith(\\\"_\\\"),[A]:(n,s)=>\\\"then\\\"===s?null:(...n)=>{const a=V++;let i=new W(new D(2*B)),p=[];Y.has(n.at(-1)||p)&&Y.delete(p=n.pop()),o(p,a,i,s,r?n.map(r):n);const f=e!==globalThis;let h=0;return u&&f&&(h=setTimeout(console.warn,1e3,`💀🔒 - Possible deadlock if proxy.${s}(...args) is awaited`)),l(f,i).value.then((()=>{clearTimeout(h);const e=i[1];if(!e)return;const n=U*e;return i=new W(new D(n+n%B)),o([],a,i),l(f,i).value.then((()=>t(c.decode(new L(i.buffer).slice(0,e)))))}))},[$](t,s,o){const a=typeof o;if(a!==y)throw new Error(`Unable to assign ${s} as ${a}`);if(!t.size){const s=new C;e.addEventListener(\\\"message\\\",(async e=>{const o=e.data?.[f];if(J(o)){e.stopImmediatePropagation();const[a,i,...c]=o;let l;if(c.length){const[e,o]=c;if(t.has(e)){u=!0;try{const c=await t.get(e)(...o);if(void 0!==c){const e=n(r?r(c):c);s.set(a,e),i[1]=e.length}}catch(e){l=e}finally{u=!1}}else l=new Error(`Unsupported action: ${e}`);i[0]=1}else{const e=s.get(a);s.delete(a);for(let t=new L(i.buffer),n=0;n<e.length;n++)t[n]=e.charCodeAt(n)}if(q(i,0),l)throw l}}))}return!!t.set(s,o)}}))}return z.get(e)};Z.transfer=(...e)=>(Y.add(e),e);const{isArray:Q}=Array,ee=(e,t)=>t,te=e=>typeof e===y?(e=>e())(e):e;function ne(){return this}const re=(e,t)=>e===g?[t]:{t:e,v:t},se=(e,t=ee)=>{let n=typeof e,r=e;return n===_&&(Q(e)?(n=g,r=e.at(0)):({t:n,v:r}=e)),t(n,r)},oe=(e,t)=>e===y?t:re(e,t),ae=(e,t=oe)=>{const n=null===e?m:typeof e;return t(n===_&&Q(e)?g:n,e)},ie=new FinalizationRegistry((([e,t,n])=>{n&&console.debug(`Held value ${String(t)} not relevant anymore`),e(t)})),ce=Object.create(null),le=(e,t,{debug:n,return:r,token:s=e}=ce)=>{const o=r||new Proxy(e,ce),a=[o,[t,e,!!n]];return!1!==s&&a.push(s),ie.register(...a),o},{defineProperty:ue,deleteProperty:pe,getOwnPropertyDescriptor:fe,getPrototypeOf:he,isExtensible:de,ownKeys:ge,preventExtensions:ye,set:me,setPrototypeOf:we}=Reflect,{assign:_e,create:be}=Object,Ee=he(Int8Array),ke=(e,t)=>{const{get:n,set:r,value:s}=e;return n&&(e.get=t(n)),r&&(e.set=t(r)),s&&(e.value=t(s)),e},ve=e=>t=>ae(t,((t,n)=>{switch(t){case m:return re(m,n);case _:if(n===globalThis)return re(t,null);case g:case y:return e(t,n);case\\\"boolean\\\":case w:case b:case k:case\\\"bigint\\\":return re(t,n);case E:{if(Te.has(n))return re(t,Te.get(n));let e=Symbol.keyFor(n);if(e)return re(t,`.${e}`)}}throw new TypeError(`Unable to handle this ${t}: ${String(n)}`)})),Te=new Map(ge(Symbol).filter((e=>typeof Symbol[e]===E)).map((e=>[Symbol[e],e]))),Se=e=>{if(e.startsWith(\\\".\\\"))return Symbol.for(e.slice(1));for(const[t,n]of Te)if(n===e)return t},xe=e=>e;var Ae=((e,t)=>{const n=t&&new WeakMap;if(t){const{addEventListener:e}=EventTarget.prototype;ue(EventTarget.prototype,\\\"addEventListener\\\",{value(t,r,...s){return s.at(0)?.invoke&&(n.has(this)||n.set(this,new Map),n.get(this).set(t,[].concat(s[0].invoke)),delete s[0].invoke),e.call(this,t,r,...s)}})}const r=t&&(e=>{const{currentTarget:t,target:r,type:s}=e;for(const o of n.get(t||r)?.get(s)||[])e[o]()});return function(n,s,o,...a){let i=0,c=this?.transform||xe;const l=new Map,u=new Map,{[o]:p}=n,f=a.length?_e(be(globalThis),...a):globalThis,h=ve(((e,t)=>{if(!l.has(t)){let n;for(;u.has(n=i++););l.set(t,n),u.set(n,e===y?t:c(t))}return re(e,l.get(t))})),d=e=>{p(F,re(b,e))},m=(e,n)=>{switch(e){case _:if(null==n)return f;case g:if(typeof n===w)return u.get(n);if(!(n instanceof Ee))for(const e in n)n[e]=H(n[e]);return n;case y:if(typeof n===b){if(!u.has(n)){const e=function(...e){return t&&e.at(0)instanceof Event&&r(...e),p(v,re(y,n),h(this),e.map(h))};return u.set(n,new WeakRef(e)),le(n,d,{return:e,token:!1})}return u.get(n).deref()}return u.get(n);case E:return Se(n)}return n},H=e=>se(e,m),W={[v]:(e,t,n)=>h(e.apply(t,n)),[T]:(e,t)=>h(new e(...t)),[S]:(e,t,n)=>h(ue(e,t,n)),[x]:(e,t)=>h(pe(e,t)),[j]:e=>h(he(e)),[A]:(e,t)=>h(e[t]),[O]:(e,t)=>{const n=fe(e,t);return n?re(_,ke(n,h)):re(k,n)},[R]:(e,t)=>h(t in e),[P]:e=>h(de(e)),[N]:e=>re(g,ge(e).map(h)),[I]:e=>h(ye(e)),[$]:(e,t,n)=>h(me(e,t,n)),[M]:(e,t)=>h(we(e,t)),[F](e){l.delete(u.get(e)),u.delete(e)}};return n[s]=(e,t,...n)=>{switch(e){case v:n[0]=H(n[0]),n[1]=n[1].map(H);break;case T:n[0]=n[0].map(H);break;case S:{const[e,t]=n;n[0]=H(e);const{get:r,set:s,value:o}=t;r&&(t.get=H(r)),s&&(t.set=H(s)),o&&(t.value=H(o));break}default:n=n.map(H)}return W[e](H(t),...n)},{proxy:n,[e.toLowerCase()]:f,[`is${e}Proxy`]:()=>!1}}})(\\\"Window\\\",!0),Oe=(e=>{let t=0;const n=new Map,r=new Map,s=Symbol();return function(o,a,i){const c=this?.transform||xe,{[a]:l}=o,u=new Map,p=e=>{u.delete(e),l(F,f(e))},f=ve(((e,o)=>{if(s in o)return te(o[s]);if(e===y){if(o=c(o),!r.has(o)){let e;for(;r.has(e=String(t++)););n.set(o,e),r.set(e,o)}return re(e,n.get(o))}if(!(o instanceof Ee)){o=c(o);for(const e in o)o[e]=f(o[e])}return re(e,o)})),h=(e,t,n)=>{if(!u.has(n)){const r=t===y?(e=>ne.bind(e))(e):e,s=new Proxy(r,k);return u.set(n,new WeakRef(s)),le(n,p,{return:s,token:!1})}return u.get(n).deref()},d=e=>se(e,((t,n)=>{switch(t){case _:if(null===n)return globalThis;case g:return typeof n===w?h(e,t,n):n;case y:return typeof n===b?r.get(n):h(e,t,n);case E:return Se(n)}return n})),m=(e,t,...n)=>d(l(e,te(t),...n)),k={[v]:(e,t,n)=>m(v,e,f(t),n.map(f)),[T]:(e,t)=>m(T,e,t.map(f)),[S]:(e,t,n)=>{const{get:r,set:s,value:o}=n;return typeof r===y&&(n.get=f(r)),typeof s===y&&(n.set=f(s)),typeof o===y&&(n.value=f(o)),m(S,e,f(t),n)},[x]:(e,t)=>m(x,e,f(t)),[j]:e=>m(j,e),[A]:(e,t)=>t===s?e:m(A,e,f(t)),[O]:(e,t)=>{const n=m(O,e,f(t));return n&&ke(n,d)},[R]:(e,t)=>t===s||m(R,e,f(t)),[P]:e=>m(P,e),[N]:e=>m(N,e).map(d),[I]:e=>m(I,e),[$]:(e,t,n)=>m($,e,f(t),f(n)),[M]:(e,t)=>m(M,e,f(t))};o[i]=(e,t,s,o)=>{switch(e){case v:return d(t).apply(d(s),o.map(d));case F:{const e=d(t);n.delete(r.get(e)),r.delete(e)}}};const H=new Proxy(re(_,null),k);return{[e.toLowerCase()]:H,[`is${e}Proxy`]:e=>typeof e===_&&!!e&&s in e,proxy:o}}})(\\\"Window\\\"),je=typeof Worker===y?Worker:class{};const Re=new WeakMap,Pe=(e,...t)=>{const n=Z(e,...t);if(!Re.has(n)){const r=e instanceof je?Ae:Oe;Re.set(n,r.call(t.at(0),n,h,d))}return Re.get(n)};Pe.transfer=Z.transfer;const Ne={object(...e){return this.string(function(e){for(var t=e[0],n=1,r=arguments.length;n<r;n++)t+=arguments[n]+e[n];return t}(...e))},string(e){for(const t of e.split(/[\\\\r\\\\n]+/))if(t.trim().length){/^(\\\\s+)/.test(t)&&(e=e.replace(new RegExp(\\\"^\\\"+RegExp.$1,\\\"gm\\\"),\\\"\\\"));break}return e}},Ie=new WeakMap,$e=e=>{const t=e||console,n={stderr:(t.stderr||console.error).bind(t),stdout:(t.stdout||console.log).bind(t)};return{stderr:(...e)=>n.stderr(...e),stdout:(...e)=>n.stdout(...e),async get(e){const t=await e;return Ie.set(t,n),t}}},Me=(e,...t)=>Ne[typeof e](e,...t),{isArray:Fe}=Array,{assign:He,create:We,defineProperties:Ce,defineProperty:De,entries:Le}=Object,{all:Be,resolve:Ue}=new Proxy(Promise,{get:(e,t)=>e[t].bind(e)}),Je=(e,t=location.href)=>new URL(e,t.replace(/^blob:/,\\\"\\\")).href,qe=(e,t,n,r=!1,s=CustomEvent)=>{e.dispatchEvent(new s(`${t}:${n}`,{bubbles:!0,detail:{worker:r}}))},Ge=e=>Function(`'use strict';return (${e})`)(),Ke=Symbol.for(\\\"polyscript.js_modules\\\"),Ye=new Map;De(globalThis,Ke,{value:Ye}),new Proxy(Ye,{get:(e,t)=>e.get(t),has:(e,t)=>e.has(t),ownKeys:e=>[...e.keys()]});const ze=(e,t)=>!t.startsWith(\\\"_\\\"),Xe=(e,t)=>new Proxy(e,{has:ze,get:(e,n)=>e[t][n]}),Ve=(e,t)=>import(e).then((e=>{Ye.set(t,{...e})})),Ze=e=>new Promise(((t,n)=>{document.querySelector(`link[href=\\\"${e}\\\"]`)&&t(),document.head.append(He(document.createElement(\\\"link\\\"),{rel:\\\"stylesheet\\\",href:e,onload:t,onerror:n}))})),Qe=e=>/\\\\.css/i.test(new URL(e).pathname);Promise.withResolvers||(Promise.withResolvers=function(){var e,t,n=new this((function(n,r){e=n,t=r}));return{resolve:e,reject:t,promise:n}});const et=e=>e.arrayBuffer(),tt=e=>e.json(),nt=e=>e.text(),rt=({FS:e,PATH:t,PATH_FS:n},r,s)=>{const o=n.resolve(r);return e.mkdirTree(t.dirname(o)),e.writeFile(o,new Uint8Array(s),{canOwn:!0})},st=e=>{const t=e.split(\\\"/\\\");return t.pop(),t.join(\\\"/\\\")},ot=(e,t)=>{const n=[];for(const r of t.split(\\\"/\\\"))\\\".\\\"!==r&&(n.push(r),r&&e.mkdir(n.join(\\\"/\\\")))},at=(e,t)=>{const n=[];for(const e of t.split(\\\"/\\\"))switch(e){case\\\"\\\":case\\\".\\\":break;case\\\"..\\\":n.pop();break;default:n.push(e)}return[e.cwd()].concat(n).join(\\\"/\\\").replace(/^\\\\/+/,\\\"/\\\")},it=e=>{const t=e.map((e=>e.trim().replace(/(^[/]*|[/]*$)/g,\\\"\\\"))).filter((e=>\\\"\\\"!==e&&\\\".\\\"!==e)).join(\\\"/\\\");return e[0].startsWith(\\\"/\\\")?`/${t}`:t},ct=(e,t)=>fetch(Je(t,lt.get(e))),lt=new WeakMap,ut=(e,t,n)=>Be((e=>{for(const{files:t,to_file:n,from:r=\\\"\\\"}of e){if(void 0!==t&&void 0!==n)throw new Error(\\\"Cannot use 'to_file' and 'files' parameters together!\\\");if(void 0===t&&void 0===n&&r.endsWith(\\\"/\\\"))throw new Error(`Couldn't determine the filename from the path ${r}, please supply 'to_file' parameter.`)}return e.flatMap((({from:e=\\\"\\\",to_folder:t=\\\".\\\",to_file:n,files:r})=>{if(Fe(r))return r.map((n=>({url:it([e,n]),path:it([t,n])})));const s=n||e.slice(1+e.lastIndexOf(\\\"/\\\"));return[{url:e,path:it([t,s])}]}))})(n).map((({url:r,path:s})=>ct(n,r).then(et).then((n=>e.writeFile(t,s,n)))))),pt=(e,t)=>t.endsWith(\\\"/\\\")?`${t}${e.split(\\\"/\\\").pop()}`:t,ft=(e,t)=>e.replace(/\\\\{.+?\\\\}/g,(e=>{if(!t.has(e))throw new SyntaxError(`Invalid template: ${e}`);return t.get(e)})),ht=(e,t,n)=>Be((e=>{const t=new Map,n=new Set,r=[];for(const[s,o]of Le(e))if(/^\\\\{.+\\\\}$/.test(s)){if(t.has(s))throw new SyntaxError(`Duplicated template: ${s}`);t.set(s,ft(o,t))}else{const e=ft(s,t),a=pt(e,ft(o||\\\"./\\\",t));if(n.has(a))throw new SyntaxError(`Duplicated destination: ${a}`);n.add(a),r.push({url:e,path:a})}return r})(n).map((({url:r,path:s})=>ct(n,r).then(et).then((n=>e.writeFile(t,s,n)))))),dt=typeof document===k,gt=({main:e,worker:t})=>{const n=[];if(t&&dt)for(let[e,r]of Le(t))e=Je(e,lt.get(t)),n.push(Ve(e,r));if(e&&!dt)for(let[t,r]of Le(e))t=Je(t,lt.get(e)),Qe(t)?Ze(t):n.push(Ve(t,r));return Be(n)},yt=(e,t)=>e.has(t),mt=e=>[...e.keys()];var wt=(e,t,n)=>{let r=globalThis[Ke],s=\\\"\\\";if(n){s=lt.get(n);for(let[e,t]of Le(n)){let n=r.get(t);n&&!Fe(n)||(r.set(t,n||(n=[])),n.push(e))}}return((e,t,n,r)=>new Proxy(e,{has:yt,ownKeys:mt,get:(e,s)=>{let o=e.get(s);if(Fe(o)){let a=o;o=null;for(let e of a)e=Je(e,r),Qe(e)?n.importCSS(e):(n.importJS(e,s),o=t[Ke].get(s));e.set(s,o)}return o}}))(r,e,t,s)};const _t=(e,t,n)=>{e.registerJsModule(t,n)},bt=(e,t,...n)=>{try{return e.runPython(Me(t),...n)}catch(t){Ie.get(e).stderr(t)}},Et=async(e,t,...n)=>{try{return await e.runPythonAsync(Me(t),...n)}catch(t){Ie.get(e).stderr(t)}},kt=async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.globals.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){Ie.get(e).stderr(t)}};var vt=(new TextEncoder).encode('from uio import StringIO\\\\nimport sys\\\\n\\\\nclass Response:\\\\n    def __init__(self, f):\\\\n        self.raw = f\\\\n        self.encoding = \\\"utf-8\\\"\\\\n        self._cached = None\\\\n\\\\n    def close(self):\\\\n        if self.raw:\\\\n            self.raw.close()\\\\n            self.raw = None\\\\n        self._cached = None\\\\n\\\\n    @property\\\\n    def content(self):\\\\n        if self._cached is None:\\\\n            try:\\\\n                self._cached = self.raw.read()\\\\n            finally:\\\\n                self.raw.close()\\\\n                self.raw = None\\\\n        return self._cached\\\\n\\\\n    @property\\\\n    def text(self):\\\\n        return str(self.content, self.encoding)\\\\n\\\\n    def json(self):\\\\n        import ujson\\\\n\\\\n        return ujson.loads(self.content)\\\\n\\\\n\\\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\\\nHEADERS_TO_IGNORE = (\\\"user-agent\\\",)\\\\n\\\\n\\\\ntry:\\\\n    import js\\\\nexcept Exception as err:\\\\n    raise OSError(\\\"This version of urequests can only be used in the browser\\\")\\\\n\\\\n# TODO try to support streaming xhr requests, a-la pyodide-http\\\\n\\\\nHEADERS_TO_IGNORE = (\\\"user-agent\\\",)\\\\n\\\\n\\\\ndef request(\\\\n    method,\\\\n    url,\\\\n    data=None,\\\\n    json=None,\\\\n    headers={},\\\\n    stream=None,\\\\n    auth=None,\\\\n    timeout=None,\\\\n    parse_headers=True,\\\\n):\\\\n    from js import XMLHttpRequest\\\\n\\\\n    xhr = XMLHttpRequest.new()\\\\n    xhr.withCredentials = False\\\\n\\\\n    if auth is not None:\\\\n        import ubinascii\\\\n\\\\n        username, password = auth\\\\n        xhr.open(method, url, False, username, password)\\\\n    else:\\\\n        xhr.open(method, url, False)\\\\n\\\\n    for name, value in headers.items():\\\\n        if name.lower() not in HEADERS_TO_IGNORE:\\\\n            xhr.setRequestHeader(name, value)\\\\n\\\\n    if timeout:\\\\n        xhr.timeout = int(timeout * 1000)\\\\n\\\\n    if json is not None:\\\\n        assert data is None\\\\n        import ujson\\\\n\\\\n        data = ujson.dumps(json)\\\\n        # s.write(b\\\"Content-Type: application/json\\\\\\\\r\\\\\\\\n\\\")\\\\n        xhr.setRequestHeader(\\\"Content-Type\\\", \\\"application/json\\\")\\\\n\\\\n    xhr.send(data)\\\\n\\\\n    # Emulates the construction process in the original urequests\\\\n    resp = Response(StringIO(xhr.responseText))\\\\n    resp.status_code = xhr.status\\\\n    resp.reason = xhr.statusText\\\\n    resp.headers = xhr.getAllResponseHeaders()\\\\n\\\\n    return resp\\\\n\\\\n\\\\n# Other methods - head, post, put, patch, delete - are not used by\\\\n# mip and therefore not included\\\\n\\\\n\\\\ndef get(url, **kw):\\\\n    return request(\\\"GET\\\", url, **kw)\\\\n\\\\n\\\\n# Content below this line is from the Micropython MIP package and is covered\\\\n# by the applicable MIT license:\\\\n# \\\\n# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\\\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \\\\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\\\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \\\\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING \\\\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER \\\\n# DEALINGS IN THE SOFTWARE.\\\\n\\\\n# MicroPython package installer\\\\n# MIT license; Copyright (c) 2022 Jim Mussared\\\\n\\\\n\\\\n_PACKAGE_INDEX = const(\\\"https://micropython.org/pi/v2\\\")\\\\n_CHUNK_SIZE = 128\\\\n\\\\n\\\\n# This implements os.makedirs(os.dirname(path))\\\\ndef _ensure_path_exists(path):\\\\n    import os\\\\n\\\\n    split = path.split(\\\"/\\\")\\\\n\\\\n    # Handle paths starting with \\\"/\\\".\\\\n    if not split[0]:\\\\n        split.pop(0)\\\\n        split[0] = \\\"/\\\" + split[0]\\\\n\\\\n    prefix = \\\"\\\"\\\\n    for i in range(len(split) - 1):\\\\n        prefix += split[i]\\\\n        try:\\\\n            os.stat(prefix)\\\\n        except:\\\\n            os.mkdir(prefix)\\\\n        prefix += \\\"/\\\"\\\\n\\\\n\\\\n# Copy from src (stream) to dest (function-taking-bytes)\\\\ndef _chunk(src, dest):\\\\n    buf = memoryview(bytearray(_CHUNK_SIZE))\\\\n    while True:\\\\n        n = src.readinto(buf)\\\\n        if n == 0:\\\\n            break\\\\n        dest(buf if n == _CHUNK_SIZE else buf[:n])\\\\n\\\\n\\\\n# Check if the specified path exists and matches the hash.\\\\ndef _check_exists(path, short_hash):\\\\n    import os\\\\n\\\\n    try:\\\\n        import binascii\\\\n        import hashlib\\\\n\\\\n        with open(path, \\\"rb\\\") as f:\\\\n            hs256 = hashlib.sha256()\\\\n            _chunk(f, hs256.update)\\\\n            existing_hash = str(binascii.hexlify(hs256.digest())[: len(short_hash)], \\\"utf-8\\\")\\\\n            return existing_hash == short_hash\\\\n    except:\\\\n        return False\\\\n\\\\n\\\\ndef _rewrite_url(url, branch=None):\\\\n    if not branch:\\\\n        branch = \\\"HEAD\\\"\\\\n    if url.startswith(\\\"github:\\\"):\\\\n        url = url[7:].split(\\\"/\\\")\\\\n        url = (\\\\n            \\\"https://raw.githubusercontent.com/\\\"\\\\n            + url[0]\\\\n            + \\\"/\\\"\\\\n            + url[1]\\\\n            + \\\"/\\\"\\\\n            + branch\\\\n            + \\\"/\\\"\\\\n            + \\\"/\\\".join(url[2:])\\\\n        )\\\\n    return url\\\\n\\\\n\\\\ndef _download_file(url, dest):\\\\n    response = get(url)\\\\n    try:\\\\n        if response.status_code != 200:\\\\n            print(\\\"Error\\\", response.status_code, \\\"requesting\\\", url)\\\\n            return False\\\\n\\\\n        print(\\\"Copying:\\\", dest)\\\\n        _ensure_path_exists(dest)\\\\n        with open(dest, \\\"wb\\\") as f:\\\\n            _chunk(response.raw, f.write)\\\\n\\\\n        return True\\\\n    finally:\\\\n        response.close()\\\\n\\\\n\\\\ndef _install_json(package_json_url, index, target, version, mpy):\\\\n    response = get(_rewrite_url(package_json_url, version))\\\\n    try:\\\\n        if response.status_code != 200:\\\\n            print(\\\"Package not found:\\\", package_json_url)\\\\n            return False\\\\n\\\\n        package_json = response.json()\\\\n    finally:\\\\n        response.close()\\\\n    for target_path, short_hash in package_json.get(\\\"hashes\\\", ()):\\\\n        fs_target_path = target + \\\"/\\\" + target_path\\\\n        if _check_exists(fs_target_path, short_hash):\\\\n            print(\\\"Exists:\\\", fs_target_path)\\\\n        else:\\\\n            file_url = \\\"{}/file/{}/{}\\\".format(index, short_hash[:2], short_hash)\\\\n            if not _download_file(file_url, fs_target_path):\\\\n                print(\\\"File not found: {} {}\\\".format(target_path, short_hash))\\\\n                return False\\\\n    for target_path, url in package_json.get(\\\"urls\\\", ()):\\\\n        fs_target_path = target + \\\"/\\\" + target_path\\\\n        if not _download_file(_rewrite_url(url, version), fs_target_path):\\\\n            print(\\\"File not found: {} {}\\\".format(target_path, url))\\\\n            return False\\\\n    for dep, dep_version in package_json.get(\\\"deps\\\", ()):\\\\n        if not _install_package(dep, index, target, dep_version, mpy):\\\\n            return False\\\\n    return True\\\\n\\\\n\\\\ndef _install_package(package, index, target, version, mpy):\\\\n    if (\\\\n        package.startswith(\\\"http://\\\")\\\\n        or package.startswith(\\\"https://\\\")\\\\n        or package.startswith(\\\"github:\\\")\\\\n    ):\\\\n        if package.endswith(\\\".py\\\") or package.endswith(\\\".mpy\\\"):\\\\n            print(\\\"Downloading {} to {}\\\".format(package, target))\\\\n            return _download_file(\\\\n                _rewrite_url(package, version), target + \\\"/\\\" + package.rsplit(\\\"/\\\")[-1]\\\\n            )\\\\n        else:\\\\n            if not package.endswith(\\\".json\\\"):\\\\n                if not package.endswith(\\\"/\\\"):\\\\n                    package += \\\"/\\\"\\\\n                package += \\\"package.json\\\"\\\\n            print(\\\"Installing {} to {}\\\".format(package, target))\\\\n    else:\\\\n        if not version:\\\\n            version = \\\"latest\\\"\\\\n        print(\\\"Installing {} ({}) from {} to {}\\\".format(package, version, index, target))\\\\n\\\\n        mpy_version = (\\\\n            sys.implementation._mpy & 0xFF if mpy and hasattr(sys.implementation, \\\"_mpy\\\") else \\\"py\\\"\\\\n        )\\\\n\\\\n        package = \\\"{}/package/{}/{}/{}.json\\\".format(index, mpy_version, package, version)\\\\n\\\\n    return _install_json(package, index, target, version, mpy)\\\\n\\\\n\\\\ndef install(package, index=None, target=None, version=None, mpy=True):\\\\n    if not target:\\\\n        for p in sys.path:\\\\n            if p.endswith(\\\"/lib\\\"):\\\\n                target = p\\\\n                break\\\\n        else:\\\\n            print(\\\"Unable to find lib dir in sys.path\\\")\\\\n            return\\\\n\\\\n    if not index:\\\\n        index = _PACKAGE_INDEX\\\\n\\\\n    if _install_package(package, index.rstrip(\\\"/\\\"), target, version, mpy):\\\\n        print(\\\"Done\\\")\\\\n    else:\\\\n        print(\\\"Package may be partially installed\\\")\\\\n');var Tt={type:\\\"micropython\\\",module:(e=\\\"1.21.0-279\\\")=>`https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${e}/micropython.mjs`,async engine({loadMicroPython:e},t,n){const{stderr:r,stdout:s,get:o}=$e();n=n.replace(/\\\\.m?js$/,\\\".wasm\\\");const a=await o(e({stderr:r,stdout:s,url:n}));if(t.files&&await ht(this,a,t.files),t.fetch&&await ut(this,a,t.fetch),t.js_modules&&await gt(t.js_modules),this.writeFile(a,\\\"./mip.py\\\",vt),t.packages){const e=a.pyimport(\\\"mip\\\");for(const n of t.packages)e.install(n)}return a},registerJSModule:_t,run:bt,runAsync:Et,runEvent:kt,transform:(e,t)=>t instanceof e.PyProxy?e.PyProxy.toJs(t):t,writeFile:({FS:e,_module:{PATH:t,PATH_FS:n}},r,s)=>rt({FS:e,PATH:t,PATH_FS:n},r,s)};const St={dict_converter:Object.fromEntries};var xt={type:\\\"pyodide\\\",module:(e=\\\"0.24.1\\\")=>`https://cdn.jsdelivr.net/pyodide/v${e}/full/pyodide.mjs`,async engine({loadPyodide:e},t,n){const{stderr:r,stdout:s,get:o}=$e(),a=n.slice(0,n.lastIndexOf(\\\"/\\\")),i=await o(e({stderr:r,stdout:s,indexURL:a}));if(t.files&&await ht(this,i,t.files),t.fetch&&await ut(this,i,t.fetch),t.js_modules&&await gt(t.js_modules),t.packages){await i.loadPackage(\\\"micropip\\\");const e=await i.pyimport(\\\"micropip\\\");await e.install(t.packages,{keep_going:!0}),e.destroy()}return i},registerJSModule:_t,run:bt,runAsync:Et,runEvent:kt,transform:(e,t)=>t instanceof e.ffi.PyProxy?t.toJs(St):t,writeFile:({FS:e,PATH:t,_module:{PATH_FS:n}},r,s)=>rt({FS:e,PATH:t,PATH_FS:n},r,s)};const At=\\\"ruby-wasm-wasi\\\",Ot=At.replace(/\\\\W+/g,\\\"_\\\");var jt={type:At,experimental:!0,module:(e=\\\"2.2.0\\\")=>`https://cdn.jsdelivr.net/npm/ruby-3_2-wasm-wasi@${e}/dist/browser.esm.js`,async engine({DefaultRubyVM:e},t,n){const r=await fetch(`${n.slice(0,n.lastIndexOf(\\\"/\\\"))}/ruby.wasm`),s=await WebAssembly.compile(await r.arrayBuffer()),{vm:o}=await e(s);return t.files&&await ht(this,o,t.files),t.fetch&&await ut(this,o,t.fetch),t.js_modules&&await gt(t.js_modules),o},registerJSModule(e,t,n){t=t.replace(/\\\\W+/g,\\\"__\\\");const r=`__module_${Ot}_${t}`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$${t}=JS.global[:${r}]`),delete globalThis[r]},run:(e,t,...n)=>e.eval(Me(t),...n),runAsync:(e,t,...n)=>e.evalAsync(Me(t),...n),async runEvent(e,t,n){if(/^xworker\\\\.(on\\\\w+)$/.test(t)){const{$1:t}=RegExp,r=`__module_${Ot}_event`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$xworker.call(\\\"${t}\\\",JS.global[:${r}])`),delete globalThis[r]}else{const r=this.run(e,`method(:${t})`);await r.call(t,e.wrap(n))}},transform:(e,t)=>t,writeFile:()=>{throw new Error(`writeFile is not supported in ${At}`)}};var Rt={type:\\\"wasmoon\\\",module:(e=\\\"1.16.0\\\")=>`https://cdn.jsdelivr.net/npm/wasmoon@${e}/+esm`,async engine({LuaFactory:e,LuaLibraries:t},n){const{stderr:r,stdout:s,get:o}=$e(),a=await o((new e).createEngine());return a.global.getTable(t.Base,(e=>{a.global.setField(e,\\\"print\\\",s),a.global.setField(e,\\\"printErr\\\",r)})),n.files&&await ht(this,a,n.files),n.fetch&&await ut(this,a,n.fetch),n.js_modules&&await gt(n.js_modules),a},registerJSModule:(e,t,n)=>{e.global.set(t,n)},run:(e,t,...n)=>{try{return e.doStringSync(Me(t),...n)}catch(t){Ie.get(e).stderr(t)}},runAsync:async(e,t,...n)=>{try{return await e.doString(Me(t),...n)}catch(t){Ie.get(e).stderr(t)}},runEvent:async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.global.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){Ie.get(e).stderr(t)}},transform:(e,t)=>t,writeFile:({cmodule:{module:{FS:e}}},t,n)=>((e,t,n)=>(ot(e,st(t)),t=at(e,t),e.writeFile(t,new Uint8Array(n),{canOwn:!0})))(e,t,n)};const Pt=new Map,Nt=new Map,It=new Proxy(new Map,{get(e,t){if(!e.has(t)){const[n,...r]=t.split(\\\"@\\\"),s=Pt.get(n),o=/^(?:\\\\.?\\\\.?\\\\/|https?:\\\\/\\\\/)/i.test(r)?r.join(\\\"@\\\"):s.module(...r);e.set(t,{url:o,module:import(o),engine:s.engine.bind(s)})}const{url:n,module:r,engine:s}=e.get(t);return(e,o)=>r.then((r=>{Nt.set(t,e);for(const t of[\\\"files\\\",\\\"fetch\\\"]){const n=e?.[t];n&&lt.set(n,o)}for(const t of[\\\"main\\\",\\\"worker\\\"]){const n=e?.js_modules?.[t];n&&lt.set(n,o)}return s(r,e,n)}))}}),$t=e=>{for(const t of[].concat(e.type))Pt.set(t,e)};for(const e of[Tt,xt,jt,Rt])$t(e);const Mt=async e=>(await import(\\\"https://cdn.jsdelivr.net/npm/basic-toml@0.3.1/es.js\\\")).parse(e),Ft=e=>{try{return JSON.parse(e)}catch(t){return Mt(e)}},Ht=(e,t,n,r={})=>{if(t){const[e,s]=((e,t=\\\"./config.txt\\\")=>{let n=typeof e;return\\\"string\\\"===n&&/\\\\.(json|toml|txt)$/.test(e)?n=RegExp.$1:e=t,[Je(e),n]})(t,n);\\\"json\\\"===s?r=fetch(e).then(tt):\\\"toml\\\"===s?r=fetch(e).then(nt).then(Mt):\\\"string\\\"===s?r=Ft(t):\\\"object\\\"===s&&t?r=t:\\\"txt\\\"===s&&\\\"string\\\"==typeof r&&(r=Ft(r)),t=e}return Ue(r).then((n=>It[e](n,t)))},Wt=\\\"BeforeRun\\\",Ct=\\\"AfterRun\\\",Dt=[`code${Wt}`,`code${Wt}Async`,`code${Ct}`,`code${Ct}Async`],Lt=[\\\"onWorker\\\",\\\"onReady\\\",`on${Wt}`,`on${Wt}Async`,`on${Ct}`,`on${Ct}Async`];function Bt(e,t){const{run:n,runAsync:r}=Pt.get(this.type);return{...e,run:n.bind(this,t),runAsync:r.bind(this,t)}}const Ut=(e,t,n,r,s,o)=>{if(s||o){const a=Bt.bind(e,t),i=r?\\\"runAsync\\\":\\\"run\\\",c=e[i];e[i]=r?async function(e,t,...r){s&&await s.call(this,a(e),n);const i=await c.call(this,e,t,...r);return o&&await o.call(this,a(e),n),i}:function(e,t,...r){s&&s.call(this,a(e),n);const i=c.call(this,e,t,...r);return o&&o.call(this,a(e),n),i}}};try{new SharedArrayBuffer(4)}catch(e){throw new Error([\\\"Unable to use SharedArrayBuffer due insecure environment.\\\",\\\"Please read requirements in MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer#security_requirements\\\"].join(\\\"\\\\n\\\"))}let Jt,qt,Gt;const Kt=(e,t)=>{addEventListener(e,t||(async t=>{try{await Jt,qt(`xworker.on${e}`,t)}catch(e){postMessage(e)}}),!!t&&{once:!0})},{parse:Yt,stringify:zt}=p,{proxy:Xt,window:Vt,isWindowProxy:Zt}=Pe(self,{parse:Yt,stringify:zt,transform:e=>Gt?Gt(e):e}),Qt={sync:Xt,window:Vt,isWindowProxy:Zt,onmessage:console.info,onerror:console.error,onmessageerror:console.warn,postMessage:postMessage.bind(self)};Kt(\\\"message\\\",(({data:{options:e,config:t,configURL:n,code:r,hooks:s}})=>{Jt=(async()=>{try{const{id:o,tag:a,type:i,custom:c,version:l,config:u,async:p}=e,f=((e,t=\\\"\\\")=>`${e}@${t}`.replace(/@$/,\\\"\\\"))(i,l),h=await Ht(f,t,n,u),d=Nt.get(f).js_modules?.main,g=We(Pt.get(i)),y=((e,t,n,r)=>({type:t,config:n,interpreter:r,io:Ie.get(r),run:(t,...n)=>e.run(r,t,...n),runAsync:(t,...n)=>e.runAsync(r,t,...n),runEvent:(...t)=>e.runEvent(r,...t)}))(g,c||i,u,h);let m=\\\"run\\\";if(p&&(m+=\\\"Async\\\"),s){const e=((e,t)=>(n,r)=>{const s=e[t].bind(e);e[t]=(e,t,...o)=>s(e,`${r?n:t}\\\\n${r?t:n}`,...o)})(g,m);let t,n,r=\\\"\\\",o=\\\"\\\";for(const e of Dt){const t=s[e];if(t){const n=e.endsWith(\\\"Async\\\");(n&&p||!n&&!p)&&(e.startsWith(\\\"codeBefore\\\")?r=t:o=t)}}o&&e(o,!1),r&&e(r,!0);for(const e of Lt.slice(2)){const r=s[e];if(r){const s=e.endsWith(\\\"Async\\\");if(s&&p||!s&&!p){const s=Ge(r);e.startsWith(\\\"onBefore\\\")?t=s:n=s}}}Ut(g,y,Qt,p,t,n)}const{CustomEvent:w,document:_}=Vt,b=o&&_.getElementById(o)||null,E=e=>qe(b,c||i,e,!0,w),k=wt(Vt,Xt,d);let v=\\\"\\\";return((e,t,n,r)=>{if(\\\"pyodide\\\"===e)return;const s=\\\"polyscript.js_modules\\\";for(const e of Reflect.ownKeys(r))t.registerJSModule(n,`${s}.${e}`,Xe(r,e));t.registerJSModule(n,s,r)})(i,g,h,k),g.registerJSModule(h,\\\"polyscript\\\",{xworker:Qt,currentScript:b,js_modules:k,get target(){return!v&&b&&(\\\"SCRIPT\\\"===a?b.after(He(_.createElement(`script-${c||i}`),{id:v=`${o}-target`})):(v=o,b.replaceChildren(),b.style.display=\\\"block\\\")),v}}),qt=g.runEvent.bind(g,h),Gt=g.transform.bind(g,h),b&&E(\\\"ready\\\"),s?.onReady&&Ge(s?.onReady).call(g,Bt.call(g,y,h),Qt),await g[m](h,r),b&&E(\\\"done\\\"),h}catch(e){postMessage(e)}})(),Kt(\\\"error\\\"),Kt(\\\"message\\\"),Kt(\\\"messageerror\\\")}));\\n\"],{type:'application/javascript'})),{type:'module'});","export const INVALID_CONTENT = 'Invalid content';\nexport const INVALID_SRC_ATTR = 'Invalid worker attribute';\nexport const INVALID_WORKER_ATTR = 'Invalid worker attribute';\n","import { INVALID_CONTENT, INVALID_SRC_ATTR, INVALID_WORKER_ATTR } from '../errors.js';\n\nimport { dedent, unescape } from '../utils.js';\n\nconst hasCommentsOnly = text => !text\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n    .replace(/^\\s*(?:\\/\\/|#).*/gm, '')\n    .trim()\n;\n\n/* c8 ignore start */ // tested via integration\nexport default element => {\n  const { src, worker } = element.attributes;\n  if (worker) {\n      let { value } = worker;\n      // throw on worker values as ambiguous\n      // @see https://github.com/pyscript/polyscript/issues/43\n      if (value) throw new SyntaxError(INVALID_WORKER_ATTR);\n      value = src?.value;\n      if (!value) {\n          // throw on empty src attributes\n          if (src) throw new SyntaxError(INVALID_SRC_ATTR);\n          if (!element.childElementCount)\n              value = element.textContent;\n          else {\n              const { innerHTML, localName, type } = element;\n              const name = type || localName.replace(/-script$/, '');\n              value = unescape(innerHTML);\n              console.warn(\n                  `Deprecated: use <script type=\"${name}\"> for an always safe content parsing:\\n`,\n                  value,\n              );\n          }\n\n          const url = URL.createObjectURL(new Blob([dedent(value)], { type: 'text/plain' }));\n          // TODO: should we really clean up this? debugging non-existent resources\n          //       at distance might be very problematic if the url is revoked.\n          // setTimeout(URL.revokeObjectURL, 5000, url);\n          return url;\n      }\n      return value;\n  }\n  // validate ambiguous cases with src and not empty/commented content\n  if (src && !hasCommentsOnly(element.textContent))\n    throw new SyntaxError(INVALID_CONTENT);\n};\n/* c8 ignore stop */\n","import { $ } from 'basic-devtools';\n\nimport $xworker from './worker/class.js';\nimport workerURL from './worker/url.js';\nimport { getRuntime, getRuntimeID } from './loader.js';\nimport { registry } from './interpreters.js';\nimport { JSModules, all, dispatch, resolve, defineProperty, nodeInfo, registerJSModules } from './utils.js';\nimport { getText } from './fetch-utils.js';\n\nconst getRoot = (script) => {\n    let parent = script;\n    while (parent.parentNode) parent = parent.parentNode;\n    return parent;\n};\n\nexport const queryTarget = (script, idOrSelector) => {\n    const root = getRoot(script);\n    return root.getElementById(idOrSelector) || $(idOrSelector, root);\n};\n\nconst targets = new WeakMap();\nconst targetDescriptor = {\n    get() {\n        let target = targets.get(this);\n        if (!target) {\n            target = document.createElement(`${this.type}-script`);\n            targets.set(this, target);\n            handle(this);\n        }\n        return target;\n    },\n    set(target) {\n        if (typeof target === 'string')\n            targets.set(this, queryTarget(this, target));\n        else {\n            targets.set(this, target);\n            handle(this);\n        }\n    },\n};\n\nconst handled = new WeakMap();\n\nexport const interpreters = new Map();\n\nconst execute = async (currentScript, source, XWorker, isAsync) => {\n    const { type } = currentScript;\n    const module = registry.get(type);\n    /* c8 ignore start */\n    if (module.experimental)\n        console.warn(`The ${type} interpreter is experimental`);\n    const [interpreter, content] = await all([\n        handled.get(currentScript).interpreter,\n        source,\n    ]);\n    try {\n        // temporarily override inherited document.currentScript in a non writable way\n        // but it deletes it right after to preserve native behavior (as it's sync: no trouble)\n        defineProperty(document, 'currentScript', {\n            configurable: true,\n            get: () => currentScript,\n        });\n        registerJSModules(type, module, interpreter, JSModules);\n        module.registerJSModule(interpreter, 'polyscript', {\n            XWorker,\n            currentScript,\n            js_modules: JSModules,\n        });\n        dispatch(currentScript, type, 'ready');\n        const result = module[isAsync ? 'runAsync' : 'run'](interpreter, content);\n        const done = dispatch.bind(null, currentScript, type, 'done');\n        if (isAsync) result.then(done);\n        else done();\n        return result;\n    } finally {\n        delete document.currentScript;\n    }\n    /* c8 ignore stop */\n};\n\nconst getValue = (ref, prefix) => {\n    const value = ref?.value;\n    return value ? prefix + value : '';\n};\n\nexport const getDetails = (type, id, name, version, config, configURL, runtime = type) => {\n    if (!interpreters.has(id)) {\n        const details = {\n            interpreter: getRuntime(name, config, configURL),\n            queue: resolve(),\n            XWorker: $xworker(type, version),\n        };\n        interpreters.set(id, details);\n        // enable sane defaults when single interpreter *of kind* is used in the page\n        // this allows `xxx-*` attributes to refer to such interpreter without `env` around\n        /* c8 ignore start *//* this is tested very well in PyScript */\n        if (!interpreters.has(type)) interpreters.set(type, details);\n        if (!interpreters.has(runtime)) interpreters.set(runtime, details);\n        /* c8 ignore stopt */\n    }\n    return interpreters.get(id);\n};\n\n/**\n * @param {HTMLScriptElement} script a special type of <script>\n */\nexport const handle = async (script) => {\n    // known node, move its companion target after\n    // vDOM or other use cases where the script is a tracked element\n    if (handled.has(script)) {\n        const { target } = script;\n        if (target) {\n            // if the script is in the head just append target to the body\n            if (script.closest('head')) document.body.append(target);\n            // in any other case preserve the script position\n            else script.after(target);\n        }\n    }\n    // new script to handle ... allow newly created scripts to work\n    // just exactly like any other script would\n    else {\n        // allow a shared config among scripts, beside interpreter,\n        // and/or source code with different config or interpreter\n        const {\n            attributes: { async: isAsync, config, env, target, version },\n            src,\n            type,\n        } = script;\n\n        const versionValue = version?.value;\n        const name = getRuntimeID(type, versionValue);\n        let configValue = getValue(config, '|');\n        const id = getValue(env, '') || `${name}${configValue}`;\n        configValue = configValue.slice(1);\n\n        /* c8 ignore start */\n        const url = workerURL(script);\n        if (url) {\n            const XWorker = $xworker(type, versionValue);\n            const xworker = new XWorker(url, {\n                ...nodeInfo(script, type),\n                async: !!isAsync,\n                config: configValue\n            });\n            handled.set(\n                defineProperty(script, 'xworker', { value: xworker }),\n                { xworker }\n            );\n            return;\n        }\n        /* c8 ignore stop */\n\n        const targetValue = getValue(target, '');\n        const details = getDetails(type, id, name, versionValue, configValue);\n\n        handled.set(\n            defineProperty(script, 'target', targetDescriptor),\n            details,\n        );\n\n        if (targetValue) targets.set(script, queryTarget(script, targetValue));\n\n        // start fetching external resources ASAP\n        const source = src ? fetch(src).then(getText) : script.textContent;\n        details.queue = details.queue.then(() =>\n            execute(script, source, details.XWorker, !!isAsync),\n        );\n    }\n};\n","import { $x } from 'basic-devtools';\n\nimport { interpreters } from './script-handler.js';\nimport { all, create } from './utils.js';\nimport { registry, prefixes } from './interpreters.js';\n\nexport const env = new Proxy(create(null), {\n    get: (_, name) => new Promise(queueMicrotask).then(\n        () => awaitInterpreter(name)\n    ),\n});\n\n/* c8 ignore start */ // attributes are tested via integration / e2e\n// ensure both interpreter and its queue are awaited then returns the interpreter\nconst awaitInterpreter = async (key) => {\n    if (interpreters.has(key)) {\n        const { interpreter, queue } = interpreters.get(key);\n        return (await all([interpreter, queue]))[0];\n    }\n\n    const available = interpreters.size\n        ? `Available interpreters are: ${[...interpreters.keys()]\n              .map((r) => `\"${r}\"`)\n              .join(', ')}.`\n        : 'There are no interpreters in this page.';\n\n    throw new Error(`The interpreter \"${key}\" was not found. ${available}`);\n};\n\nexport const listener = async (event) => {\n    const { type, currentTarget } = event;\n    if (!prefixes.length) return;\n    for (let { name, value, ownerElement: el } of $x(\n        `./@*[${prefixes.map((p) => `name()=\"${p}${type}\"`).join(' or ')}]`,\n        currentTarget,\n    )) {\n        name = name.slice(0, -(type.length + 1));\n        const interpreter = await awaitInterpreter(\n            el.getAttribute(`${name}-env`) || name,\n        );\n        const handler = registry.get(name);\n        handler.runEvent(interpreter, value, event);\n    }\n};\n\n/**\n * Look for known prefixes and add related listeners.\n * @param {Document | Element} root\n */\nexport const addAllListeners = (root) => {\n    if (!prefixes.length) return;\n    for (let { name, ownerElement: el } of $x(\n        `.//@*[${prefixes\n            .map((p) => `starts-with(name(),\"${p}\")`)\n            .join(' or ')}]`,\n        root,\n    )) {\n        const i = name.lastIndexOf('-');\n        const type = name.slice(i + 1);\n        if (type !== 'env') {\n            el.addEventListener(type, listener);\n            // automatically disable form controls that are not disabled already\n            if ('disabled' in el && !el.disabled) {\n                el.disabled = true;\n                // set these to enable once the interpreter is known (registered + loaded)\n                env[name.slice(0, i)].then(() => {\n                    el.disabled = false;\n                });\n            }\n        }\n    }\n};\n/* c8 ignore stop */\n","import xworker from './worker/class.js';\nimport Hook from './worker/hook.js';\n\nconst XWorker = xworker();\n\nexport { Hook, XWorker };\n","import '@ungap/with-resolvers';\nimport { $$ } from 'basic-devtools';\n\nimport { JSModules, assign, create, createOverload, createResolved, dedent, defineProperty, nodeInfo, registerJSModules } from './utils.js';\nimport { getDetails } from './script-handler.js';\nimport { registry as defaultRegistry, prefixes, configs } from './interpreters.js';\nimport { getRuntimeID } from './loader.js';\nimport { addAllListeners } from './listeners.js';\nimport { Hook, XWorker } from './xworker.js';\nimport { polluteJS, js as jsHooks, code as codeHooks } from './hooks.js';\nimport workerURL from './worker/url.js';\n\nexport const CUSTOM_SELECTORS = [];\n\n/**\n * @typedef {Object} Runtime custom configuration\n * @prop {object} interpreter the bootstrapped interpreter\n * @prop {(url:string, options?: object) => Worker} XWorker an XWorker constructor that defaults to same interpreter on the Worker.\n * @prop {object} config a cloned config used to bootstrap the interpreter\n * @prop {(code:string) => any} run an utility to run code within the interpreter\n * @prop {(code:string) => Promise<any>} runAsync an utility to run code asynchronously within the interpreter\n * @prop {(path:string, data:ArrayBuffer) => void} writeFile an utility to write a file in the virtual FS, if available\n */\n\nconst types = new Map();\nconst waitList = new Map();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n/**\n * @param {Element} node any DOM element registered via define.\n */\nexport const handleCustomType = (node) => {\n    for (const selector of CUSTOM_SELECTORS) {\n        if (node.matches(selector)) {\n            const type = types.get(selector);\n            const details = registry.get(type);\n            const { resolve } = waitList.get(type);\n            const { options, known } = details;\n            if (!known.has(node)) {\n                known.add(node);\n                const {\n                    interpreter: runtime,\n                    configURL,\n                    config,\n                    version,\n                    env,\n                    onerror,\n                    hooks,\n                } = options;\n\n                let error;\n                try {\n                    const worker = workerURL(node);\n                    if (worker) {\n                        const xworker = XWorker.call(new Hook(null, hooks), worker, {\n                            ...nodeInfo(node, type),\n                            version,\n                            configURL,\n                            type: runtime,\n                            custom: type,\n                            config: node.getAttribute('config') || config || {},\n                            async: node.hasAttribute('async')\n                        });\n                        defineProperty(node, 'xworker', { value: xworker });\n                        resolve({ type, xworker });\n                        return;\n                    }\n                }\n                // let the custom type handle errors via its `io`\n                catch (workerError) {\n                    error = workerError;\n                }\n\n                const name = getRuntimeID(runtime, version);\n                const id = env || `${name}${config ? `|${config}` : ''}`;\n                const { interpreter: engine, XWorker: Worker } = getDetails(\n                    type,\n                    id,\n                    name,\n                    version,\n                    config,\n                    configURL,\n                    runtime\n                );\n                engine.then((interpreter) => {\n                    const module = create(defaultRegistry.get(runtime));\n\n                    const hook = new Hook(interpreter, hooks);\n\n                    const XWorker = function XWorker(...args) {\n                        return Worker.apply(hook, args);\n                    };\n\n                    const resolved = {\n                        ...createResolved(\n                            module,\n                            type,\n                            structuredClone(configs.get(name)),\n                            interpreter,\n                        ),\n                        XWorker,\n                    };\n\n                    registerJSModules(runtime, module, interpreter, JSModules);\n                    module.registerJSModule(interpreter, 'polyscript', {\n                        XWorker,\n                        currentScript: type.startsWith('_') ? null : node,\n                        js_modules: JSModules,\n                    });\n\n                    // patch methods accordingly to hooks (and only if needed)\n                    for (const suffix of ['Run', 'RunAsync']) {\n                        const overload = createOverload(module, `r${suffix.slice(1)}`);\n\n                        let before = '';\n                        let after = '';\n\n                        for (const key of codeHooks) {\n                            const value = hooks?.main?.[key];\n                            if (value && key.endsWith(suffix)) {\n                                if (key.startsWith('codeBefore'))\n                                    before = dedent(value());\n                                else\n                                    after = dedent(value());\n                            }\n                        }\n\n                        // append code that should be executed *after* first\n                        if (after) overload(after, false);\n\n                        // prepend code that should be executed *before* (so that after is post-patched)\n                        if (before) overload(before, true);\n\n                        let beforeCB, afterCB;\n                        // ignore onReady and onWorker\n                        for (let i = 2; i < jsHooks.length; i++) {\n                            const key = jsHooks[i];\n                            const value = hooks?.main?.[key];\n                            if (value && key.endsWith(suffix)) {\n                                if (key.startsWith('onBefore'))\n                                    beforeCB = value;\n                                else\n                                    afterCB = value;\n                            }\n                        }\n                        polluteJS(module, resolved, node, suffix.endsWith('Async'), beforeCB, afterCB);\n                    }\n\n                    details.queue = details.queue.then(() => {\n                        resolve(resolved);\n                        if (error) onerror?.(error, node);\n                        return hooks?.main?.onReady?.(resolved, node);\n                    });\n                });\n            }\n        }\n    }\n};\n\n/**\n * @type {Map<string, {options:object, known:WeakSet<Element>}>}\n */\nconst registry = new Map();\n\n/**\n * @typedef {Object} CustomOptions custom configuration\n * @prop {'pyodide' | 'micropython' | 'wasmoon' | 'ruby-wasm-wasi'} interpreter the interpreter to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string} [config] the optional config to use within such interpreter\n */\n\nlet dontBotherCount = 0;\n\n/**\n * Allows custom types and components on the page to receive interpreters to execute any code\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @param {CustomOptions} options the custom type configuration\n */\nexport const define = (type, options) => {\n    // allow no-type to be bootstrapped out of the box\n    let dontBother = type == null;\n\n    if (dontBother)\n        type = `_ps${dontBotherCount++}`;\n    else if (defaultRegistry.has(type) || registry.has(type))\n        throw new Error(`<script type=\"${type}\"> already registered`);\n\n    if (!defaultRegistry.has(options?.interpreter))\n        throw new Error('Unspecified interpreter');\n\n    // allows reaching out the interpreter helpers on events\n    defaultRegistry.set(type, defaultRegistry.get(options.interpreter));\n\n    // allows selector -> registry by type\n    const selectors = [`script[type=\"${type}\"]`];\n\n    // ensure a Promise can resolve once a custom type has been bootstrapped\n    whenDefined(type);\n\n    if (dontBother) {\n        // add a script then cleanup everything once that's ready\n        const { hooks } = options;\n        const onReady = hooks?.main?.onReady;\n        options = {\n            ...options,\n            hooks: {\n                ...hooks,\n                main: {\n                    ...hooks?.main,\n                    onReady(resolved, node) {\n                        CUSTOM_SELECTORS.splice(CUSTOM_SELECTORS.indexOf(type), 1);\n                        defaultRegistry.delete(type);\n                        registry.delete(type);\n                        waitList.delete(type);\n                        node.remove();\n                        onReady?.(resolved);\n                    }\n                }\n            },\n        };\n        document.head.append(\n            assign(document.createElement('script'), { type })\n        );\n    }\n    else {\n        selectors.push(`${type}-script`);\n        prefixes.push(`${type}-`);\n    }\n\n    for (const selector of selectors) types.set(selector, type);\n    CUSTOM_SELECTORS.push(...selectors);\n\n    // ensure always same env for this custom type\n    registry.set(type, {\n        options: assign({ env: type }, options),\n        known: new WeakSet(),\n        queue: Promise.resolve(),\n    });\n\n    if (!dontBother) addAllListeners(document);\n    $$(selectors.join(',')).forEach(handleCustomType);\n};\n\n/**\n * Resolves whenever a defined custom type is bootstrapped on the page\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @returns {Promise<object>}\n */\nexport const whenDefined = (type) => {\n    if (!waitList.has(type)) waitList.set(type, Promise.withResolvers());\n    return waitList.get(type).promise;\n};\n/* c8 ignore stop */\n","import stickyModule from 'sticky-module';\nimport { $$ } from 'basic-devtools';\n\nimport { handle } from './script-handler.js';\nimport { assign } from './utils.js';\nimport { selectors, prefixes } from './interpreters.js';\nimport { CUSTOM_SELECTORS, handleCustomType } from './custom.js';\nimport { listener, addAllListeners } from './listeners.js';\n\nimport { define as $define, whenDefined as $whenDefined } from './custom.js';\nimport { env as $env } from './listeners.js';\nimport { Hook as $Hook, XWorker as $XWorker } from './xworker.js';\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        define,\n        whenDefined,\n        env,\n        Hook,\n        XWorker\n    },\n    alreadyLive\n] = stickyModule(\n    'polyscript',\n    {\n        define: $define,\n        whenDefined: $whenDefined,\n        env: $env,\n        Hook: $Hook,\n        XWorker: $XWorker\n    }\n);\n\nexport { define, whenDefined, env, Hook, XWorker };\nexport * from './errors.js';\n\n\nif (!alreadyLive) {\n    const mo = new MutationObserver((records) => {\n        const selector = selectors.join(',');\n        for (const { type, target, attributeName, addedNodes } of records) {\n            // attributes are tested via integration / e2e\n            /* c8 ignore start */\n            if (type === 'attributes') {\n                const i = attributeName.lastIndexOf('-') + 1;\n                if (i) {\n                    const prefix = attributeName.slice(0, i);\n                    for (const p of prefixes) {\n                        if (prefix === p) {\n                            const type = attributeName.slice(i);\n                            if (type !== 'env') {\n                                const method = target.hasAttribute(attributeName)\n                                    ? 'add'\n                                    : 'remove';\n                                target[`${method}EventListener`](type, listener);\n                            }\n                            break;\n                        }\n                    }\n                }\n                continue;\n            }\n            for (const node of addedNodes) {\n                if (node.nodeType === 1) {\n                    addAllListeners(node);\n                    if (selector && node.matches(selector)) handle(node);\n                    else bootstrap(selector, node, true);\n                }\n            }\n            /* c8 ignore stop */\n        }\n    });\n\n    /* c8 ignore start */\n    const bootstrap = (selector, node, shouldHandle) => {\n        if (selector) $$(selector, node).forEach(handle);\n        selector = CUSTOM_SELECTORS.join(',');\n        if (selector) {\n            if (shouldHandle) handleCustomType(node);\n            $$(selector, node).forEach(handleCustomType);\n        }\n    };\n    /* c8 ignore stop */\n\n    const observe = (root) => {\n        mo.observe(root, { childList: true, subtree: true, attributes: true });\n        return root;\n    };\n\n    const { attachShadow } = Element.prototype;\n    assign(Element.prototype, {\n        attachShadow(init) {\n            return observe(attachShadow.call(this, init));\n        },\n    });\n\n    // give 3rd party a chance to apply changes before this happens\n    queueMicrotask(() => {\n        addAllListeners(observe(document));\n        bootstrap(selectors.join(','), document, false);\n    });\n\n}\n","export default new Map([\n    [\"py\", \"pyodide\"],\n    [\"mpy\", \"micropython\"],\n]);\n","import TYPES from \"./types.js\";\n\nconst waitForIt = [];\n\nfor (const [TYPE] of TYPES) {\n    const selectors = [`script[type=\"${TYPE}\"]`, `${TYPE}-script`];\n    for (const element of document.querySelectorAll(selectors.join(\",\"))) {\n        const { promise, resolve } = Promise.withResolvers();\n        waitForIt.push(promise);\n        element.addEventListener(`${TYPE}:done`, resolve, { once: true });\n    }\n}\n\n// wait for all the things then cleanup\nPromise.all(waitForIt).then(() => {\n    dispatchEvent(new Event(\"py:all-done\"));\n});\n","// ⚠️ This file is an artifact: DO NOT MODIFY\nexport default {\n    [\"deprecations-manager\"]: () => import(/* webpackIgnore: true */ \"./plugins/deprecations-manager.js\"),\n    error: () => import(/* webpackIgnore: true */ \"./plugins/error.js\"),\n    [\"py-editor\"]: () => import(/* webpackIgnore: true */ \"./plugins/py-editor.js\"),\n    [\"py-terminal\"]: () => import(/* webpackIgnore: true */ \"./plugins/py-terminal.js\"),\n};\n","import { assign } from \"polyscript/exports\";\n\nconst CLOSEBUTTON =\n    \"<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='currentColor' width='12px'><path d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/></svg>\";\n\n/**\n * These error codes are used to identify the type of error that occurred.\n * @see https://pyscript.github.io/docs/latest/reference/exceptions.html?highlight=errors\n */\nexport const ErrorCode = {\n    GENERIC: \"PY0000\", // Use this only for development then change to a more specific error code\n    CONFLICTING_CODE: \"PY0409\",\n    BAD_CONFIG: \"PY1000\",\n    MICROPIP_INSTALL_ERROR: \"PY1001\",\n    BAD_PLUGIN_FILE_EXTENSION: \"PY2000\",\n    NO_DEFAULT_EXPORT: \"PY2001\",\n    TOP_LEVEL_AWAIT: \"PY9000\",\n    // Currently these are created depending on error code received from fetching\n    FETCH_ERROR: \"PY0001\",\n    FETCH_NAME_ERROR: \"PY0002\",\n    FETCH_UNAUTHORIZED_ERROR: \"PY0401\",\n    FETCH_FORBIDDEN_ERROR: \"PY0403\",\n    FETCH_NOT_FOUND_ERROR: \"PY0404\",\n    FETCH_SERVER_ERROR: \"PY0500\",\n    FETCH_UNAVAILABLE_ERROR: \"PY0503\",\n};\n\n/**\n * Keys of the ErrorCode object\n * @typedef {keyof ErrorCode} ErrorCodes\n * */\n\nexport class UserError extends Error {\n    /**\n     * @param {ErrorCodes} errorCode\n     * @param {string} message\n     * @param {string} messageType\n     * */\n    constructor(errorCode, message = \"\", messageType = \"text\") {\n        super(`(${errorCode}): ${message}`);\n        this.errorCode = errorCode;\n        this.messageType = messageType;\n        this.name = \"UserError\";\n    }\n}\n\nexport class FetchError extends UserError {\n    /**\n     * @param {ErrorCodes} errorCode\n     * @param {string} message\n     * */\n    constructor(errorCode, message) {\n        super(errorCode, message);\n        this.name = \"FetchError\";\n    }\n}\n\nexport class InstallError extends UserError {\n    /**\n     * @param {ErrorCodes} errorCode\n     * @param {string} message\n     * */\n    constructor(errorCode, message) {\n        super(errorCode, message);\n        this.name = \"InstallError\";\n    }\n}\n\n/**\n * Internal function for creating alert banners on the page\n * @param {string} message The message to be displayed to the user\n * @param {string} level The alert level of the message. Can be any string; 'error' or 'warning' cause matching messages to be emitted to the console\n * @param {string} [messageType=\"text\"] If set to \"html\", the message content will be assigned to the banner's innerHTML directly, instead of its textContent\n * @param {any} [logMessage=true] An additional flag for whether the message should be sent to the console log.\n */\nexport function _createAlertBanner(\n    message,\n    level,\n    messageType = \"text\",\n    logMessage = true,\n) {\n    switch (`log-${level}-${logMessage}`) {\n        case \"log-error-true\":\n            console.error(message);\n            break;\n        case \"log-warning-true\":\n            console.warn(message);\n            break;\n    }\n\n    const content = messageType === \"html\" ? \"innerHTML\" : \"textContent\";\n    const banner = assign(document.createElement(\"div\"), {\n        className: `alert-banner py-${level}`,\n        [content]: message,\n    });\n\n    if (level === \"warning\") {\n        const closeButton = assign(document.createElement(\"button\"), {\n            id: \"alert-close-button\",\n            innerHTML: CLOSEBUTTON,\n        });\n\n        banner.appendChild(closeButton).addEventListener(\"click\", () => {\n            banner.remove();\n        });\n    }\n\n    document.body.prepend(banner);\n}\n","import { FetchError, ErrorCode } from \"./exceptions.js\";\nimport { getText } from \"polyscript/exports\";\n\nexport { getText };\n\n/**\n * This is a fetch wrapper that handles any non 200 responses and throws a\n * FetchError with the right ErrorCode. This is useful because our FetchError\n * will automatically create an alert banner.\n *\n * @param {string} url - URL to fetch\n * @param {Request} [options] - options to pass to fetch\n * @returns {Promise<Response>}\n */\nexport async function robustFetch(url, options) {\n    let response;\n\n    // Note: We need to wrap fetch into a try/catch block because fetch\n    // throws a TypeError if the URL is invalid such as http://blah.blah\n    try {\n        response = await fetch(url, options);\n    } catch (err) {\n        const error = err;\n        let errMsg;\n        if (url.startsWith(\"http\")) {\n            errMsg =\n                `Fetching from URL ${url} failed with error ` +\n                `'${error.message}'. Are your filename and path correct?`;\n        } else {\n            errMsg = `Polyscript: Access to local files\n        (using [[fetch]] configurations in &lt;py-config&gt;)\n        is not available when directly opening a HTML file;\n        you must use a webserver to serve the additional files.\n        See <a style=\"text-decoration: underline;\" href=\"https://github.com/pyscript/pyscript/issues/257#issuecomment-1119595062\">this reference</a>\n        on starting a simple webserver with Python.\n            `;\n        }\n        throw new FetchError(ErrorCode.FETCH_ERROR, errMsg);\n    }\n\n    // Note that response.ok is true for 200-299 responses\n    if (!response.ok) {\n        const errorMsg = `Fetching from URL ${url} failed with error ${response.status} (${response.statusText}). Are your filename and path correct?`;\n        switch (response.status) {\n            case 404:\n                throw new FetchError(ErrorCode.FETCH_NOT_FOUND_ERROR, errorMsg);\n            case 401:\n                throw new FetchError(\n                    ErrorCode.FETCH_UNAUTHORIZED_ERROR,\n                    errorMsg,\n                );\n            case 403:\n                throw new FetchError(ErrorCode.FETCH_FORBIDDEN_ERROR, errorMsg);\n            case 500:\n                throw new FetchError(ErrorCode.FETCH_SERVER_ERROR, errorMsg);\n            case 503:\n                throw new FetchError(\n                    ErrorCode.FETCH_UNAVAILABLE_ERROR,\n                    errorMsg,\n                );\n            default:\n                throw new FetchError(ErrorCode.FETCH_ERROR, errorMsg);\n        }\n    }\n    return response;\n}\n","/**\n * This file parses a generic <py-config> or config attribute\n * to use as base config for all py-script elements, importing\n * also a queue of plugins *before* the interpreter (if any) resolves.\n */\nimport { $$ } from \"basic-devtools\";\n\nimport TYPES from \"./types.js\";\nimport allPlugins from \"./plugins.js\";\nimport { robustFetch as fetch, getText } from \"./fetch.js\";\nimport { ErrorCode } from \"./exceptions.js\";\n\nconst { BAD_CONFIG, CONFLICTING_CODE } = ErrorCode;\n\nconst badURL = (url, expected = \"\") => {\n    let message = `(${BAD_CONFIG}): Invalid URL: ${url}`;\n    if (expected) message += `\\nexpected ${expected} content`;\n    throw new Error(message);\n};\n\n/**\n * Given a string, returns its trimmed content as text,\n * fetching it from a file if the content is a URL.\n * @param {string} config either JSON, TOML, or a file to fetch\n * @param {string?} type the optional type to enforce\n * @returns {{json: boolean, toml: boolean, text: string}}\n */\nconst configDetails = async (config, type) => {\n    let text = config?.trim();\n    // we only support an object as root config\n    let url = \"\",\n        toml = false,\n        json = /^{/.test(text) && /}$/.test(text);\n    // handle files by extension (relaxing urls parts after)\n    if (!json && /\\.(\\w+)(?:\\?\\S*)?$/.test(text)) {\n        const ext = RegExp.$1;\n        if (ext === \"json\" && type !== \"toml\") json = true;\n        else if (ext === \"toml\" && type !== \"json\") toml = true;\n        else badURL(text, type);\n        url = text;\n        text = (await fetch(url).then(getText)).trim();\n    }\n    return { json, toml: toml || (!json && !!text), text, url };\n};\n\nconst conflictError = (reason) => new Error(`(${CONFLICTING_CODE}): ${reason}`);\n\nconst syntaxError = (type, url, { message }) => {\n    let str = `(${BAD_CONFIG}): Invalid ${type}`;\n    if (url) str += ` @ ${url}`;\n    return new SyntaxError(`${str}\\n${message}`);\n};\n\nconst configs = new Map();\n\nfor (const [TYPE] of TYPES) {\n    /** @type {Promise<[...any]>} A Promise wrapping any plugins which should be loaded. */\n    let plugins;\n\n    /** @type {any} The PyScript configuration parsed from the JSON or TOML object*. May be any of the return types of JSON.parse() or toml-j0.4's parse() ( {number | string | boolean | null | object | Array} ) */\n    let parsed;\n\n    /** @type {Error | undefined} The error thrown when parsing the PyScript config, if any.*/\n    let error;\n\n    /** @type {string | undefined} The `configURL` field to normalize all config operations as opposite of guessing it once resolved */\n    let configURL;\n\n    let config,\n        type,\n        pyElement,\n        pyConfigs = $$(`${TYPE}-config`),\n        attrConfigs = $$(\n            [\n                `script[type=\"${TYPE}\"][config]:not([worker])`,\n                `${TYPE}-script[config]:not([worker])`,\n            ].join(\",\"),\n        );\n\n    // throw an error if there are multiple <py-config> or <mpy-config>\n    if (pyConfigs.length > 1) {\n        error = conflictError(`Too many ${TYPE}-config`);\n    } else {\n        // throw an error if there are <x-config> and config=\"x\" attributes\n        if (pyConfigs.length && attrConfigs.length) {\n            error = conflictError(\n                `Ambiguous ${TYPE}-config VS config attribute`,\n            );\n        } else if (pyConfigs.length) {\n            [pyElement] = pyConfigs;\n            config = pyElement.getAttribute(\"src\") || pyElement.textContent;\n            type = pyElement.getAttribute(\"type\");\n        } else if (attrConfigs.length) {\n            [pyElement, ...attrConfigs] = attrConfigs;\n            config = pyElement.getAttribute(\"config\");\n            // throw an error if dirrent scripts use different configs\n            if (\n                attrConfigs.some((el) => el.getAttribute(\"config\") !== config)\n            ) {\n                error = conflictError(\n                    \"Unable to use different configs on main\",\n                );\n            }\n        }\n    }\n\n    // catch possible fetch errors\n    if (!error && config) {\n        try {\n            const { json, toml, text, url } = await configDetails(config, type);\n            if (url) configURL = new URL(url, location.href).href;\n            config = text;\n            if (json || type === \"json\") {\n                try {\n                    parsed = JSON.parse(text);\n                } catch (e) {\n                    error = syntaxError(\"JSON\", url, e);\n                }\n            } else if (toml || type === \"toml\") {\n                try {\n                    const { parse } = await import(\n                        /* webpackIgnore: true */ \"./3rd-party/toml.js\"\n                    );\n                    parsed = parse(text);\n                } catch (e) {\n                    error = syntaxError(\"TOML\", url, e);\n                }\n            }\n        } catch (e) {\n            error = e;\n        }\n    }\n\n    // parse all plugins and optionally ignore only\n    // those flagged as \"undesired\" via `!` prefix\n    const toBeAwaited = [];\n    for (const [key, value] of Object.entries(allPlugins)) {\n        if (error) {\n            if (key === \"error\") {\n                // show on page the config is broken, meaning that\n                // it was not possible to disable error plugin neither\n                // as that part wasn't correctly parsed anyway\n                value().then(({ notify }) => notify(error.message));\n            }\n        } else if (!parsed?.plugins?.includes(`!${key}`)) {\n            toBeAwaited.push(value().then(({ default: p }) => p));\n        }\n    }\n\n    // assign plugins as Promise.all only if needed\n    plugins = Promise.all(toBeAwaited);\n\n    configs.set(TYPE, { config: parsed, configURL, plugins, error });\n}\n\nexport default configs;\n","export default {\n    /**\n     * 'Sleep' for the given number of seconds. Used to implement Python's time.sleep in Worker threads.\n     * @param {number} seconds The number of seconds to sleep.\n     */\n    sleep(seconds) {\n        return new Promise(($) => setTimeout($, seconds * 1000));\n    },\n};\n","import { defineProperty } from \"polyscript/exports\";\n\n// helper for all script[type=\"py\"] out there\nconst before = (script) => {\n    defineProperty(document, \"currentScript\", {\n        configurable: true,\n        get: () => script,\n    });\n};\n\nconst after = () => {\n    delete document.currentScript;\n};\n\n// common life-cycle handlers for any node\nexport default async (main, wrap, element, hook) => {\n    const isAsync = hook.endsWith(\"Async\");\n    const isBefore = hook.startsWith(\"onBefore\");\n    // make it possible to reach the current target node via Python\n    // or clean up for other scripts executing around this one\n    (isBefore ? before : after)(element);\n    for (const fn of main(hook)) {\n        if (isAsync) await fn(wrap, element);\n        else fn(wrap, element);\n    }\n};\n","const any = () => true;\nconst error = message => {\n  throw new TypeError(message);\n};\n\nconst validator = (type, Class) => {\n  const checks = [];\n  if (type) {\n    for (const t of type.split(/\\s*\\|\\s*/)) {\n      if (t === 'object')\n        checks.push(v => v !== null && typeof v === t);\n      else if (t === 'null')\n        checks.push(v => v === null);\n      else\n        checks.push(v => typeof v === t);\n    }\n  }\n  if (Class) {\n    for (const C of [].concat(Class))\n      checks.push(o => o instanceof C);\n  }\n  switch (checks.length) {\n    case 0: return any;\n    case 1: return checks[0];\n    default: return v => checks.some(f => f(v));\n  }\n};\n\nconst failure = (type, Class, kind, onerror = error) => value => {\n  const message = [`Invalid ${typeof value} ${kind}: expected `];\n  if (type) {\n    message.push(type);\n    if (Class) message.push(' or ');\n  }\n  if (Class) {\n    message.push('an instanceof ');\n    message.push([].concat(Class).map(({name}) => name).join(' | '));\n  }\n  onerror(message.join(''), value);\n};\n\nconst checkFail = (options, kind = 'value') => {\n  const type = options?.typeof;\n  const Class = options?.instanceof;\n  return [\n    validator(type, Class),\n    failure(type, Class, kind, options?.onerror)\n  ];\n};\n\nconst createSet = Set => options => {\n  const [check, fail] = checkFail(options);\n  return class TypedSet extends Set {\n    add(value) {\n      return check(value) ? super.add(value) : fail(value);\n    }\n  };\n};\n\nexport const typedSet = createSet(Set);\nexport const typedWeakSet = createSet(WeakSet);\n\nconst createMap = Map => ([keyOptions, valueOptions]) => {\n  const [checkKey, failKey] = checkFail(keyOptions, 'key');\n  const [checkValue, failValue] = checkFail(valueOptions);\n  return class TypedMap extends Map {\n    set(key, value) {\n      if (!checkKey(key)) failKey(key);\n      if (!checkValue(value)) failValue(value);\n      return super.set(key, value);\n    }\n  };\n};\n\nexport const typedMap = createMap(Map);\nexport const typedWeakMap = createMap(WeakMap);\n","/**\n * Create through Python the pyscript module through\n * the artifact generated at build time.\n * This the returned value is a string that must be used\n * either before a worker execute code or when the module\n * is registered on the main thread.\n */\n\nimport pyscript from \"./stdlib/pyscript.js\";\n\nconst { entries } = Object;\n\nconst python = [\n    \"import os as _os\",\n    \"from pathlib import Path as _Path\",\n    \"_path = None\",\n];\n\nconst write = (base, literal) => {\n    for (const [key, value] of entries(literal)) {\n        python.push(`_path = _Path(\"${base}/${key}\")`);\n        if (typeof value === \"string\") {\n            const code = JSON.stringify(value);\n            python.push(`_path.write_text(${code})`);\n        } else {\n            // @see https://github.com/pyscript/pyscript/pull/1813#issuecomment-1781502909\n            python.push(`if not _os.path.exists(\"${base}/${key}\"):`);\n            python.push(\"    _path.mkdir(parents=True, exist_ok=True)\");\n            write(`${base}/${key}`, value);\n        }\n    }\n};\n\nwrite(\".\", pyscript);\n\n// in order to fix js.document in the Worker case\n// we need to bootstrap pyscript module ASAP\npython.push(\"import pyscript as _pyscript\");\n\npython.push(\n    ...[\"_Path\", \"_path\", \"_os\", \"_pyscript\"].map((ref) => `del ${ref}`),\n);\npython.push(\"\\n\");\n\nexport default python.join(\"\\n\");\n","// ⚠️ This file is an artifact: DO NOT MODIFY\nexport default {\n  \"pyscript\": {\n    \"display.py\": \"import base64\\nimport html\\nimport io\\nimport re\\n\\nfrom pyscript.magic_js import current_target, document, window\\n\\n_MIME_METHODS = {\\n    \\\"__repr__\\\": \\\"text/plain\\\",\\n    \\\"_repr_html_\\\": \\\"text/html\\\",\\n    \\\"_repr_markdown_\\\": \\\"text/markdown\\\",\\n    \\\"_repr_svg_\\\": \\\"image/svg+xml\\\",\\n    \\\"_repr_pdf_\\\": \\\"application/pdf\\\",\\n    \\\"_repr_jpeg_\\\": \\\"image/jpeg\\\",\\n    \\\"_repr_png_\\\": \\\"image/png\\\",\\n    \\\"_repr_latex\\\": \\\"text/latex\\\",\\n    \\\"_repr_json_\\\": \\\"application/json\\\",\\n    \\\"_repr_javascript_\\\": \\\"application/javascript\\\",\\n    \\\"savefig\\\": \\\"image/png\\\",\\n}\\n\\n\\ndef _render_image(mime, value, meta):\\n    # If the image value is using bytes we should convert it to base64\\n    # otherwise it will return raw bytes and the browser will not be able to\\n    # render it.\\n    if isinstance(value, bytes):\\n        value = base64.b64encode(value).decode(\\\"utf-8\\\")\\n\\n    # This is the pattern of base64 strings\\n    base64_pattern = re.compile(\\n        r\\\"^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$\\\"\\n    )\\n    # If value doesn't match the base64 pattern we should encode it to base64\\n    if len(value) > 0 and not base64_pattern.match(value):\\n        value = base64.b64encode(value.encode(\\\"utf-8\\\")).decode(\\\"utf-8\\\")\\n\\n    data = f\\\"data:{mime};charset=utf-8;base64,{value}\\\"\\n    attrs = \\\" \\\".join(['{k}=\\\"{v}\\\"' for k, v in meta.items()])\\n    return f'<img src=\\\"{data}\\\" {attrs}></img>'\\n\\n\\ndef _identity(value, meta):\\n    return value\\n\\n\\n_MIME_RENDERERS = {\\n    \\\"text/plain\\\": html.escape,\\n    \\\"text/html\\\": _identity,\\n    \\\"image/png\\\": lambda value, meta: _render_image(\\\"image/png\\\", value, meta),\\n    \\\"image/jpeg\\\": lambda value, meta: _render_image(\\\"image/jpeg\\\", value, meta),\\n    \\\"image/svg+xml\\\": _identity,\\n    \\\"application/json\\\": _identity,\\n    \\\"application/javascript\\\": lambda value, meta: f\\\"<script>{value}<\\\\\\\\/script>\\\",\\n}\\n\\n\\nclass HTML:\\n    \\\"\\\"\\\"\\n    Wrap a string so that display() can render it as plain HTML\\n    \\\"\\\"\\\"\\n\\n    def __init__(self, html):\\n        self._html = html\\n\\n    def _repr_html_(self):\\n        return self._html\\n\\n\\ndef _eval_formatter(obj, print_method):\\n    \\\"\\\"\\\"\\n    Evaluates a formatter method.\\n    \\\"\\\"\\\"\\n    if print_method == \\\"__repr__\\\":\\n        return repr(obj)\\n    elif hasattr(obj, print_method):\\n        if print_method == \\\"savefig\\\":\\n            buf = io.BytesIO()\\n            obj.savefig(buf, format=\\\"png\\\")\\n            buf.seek(0)\\n            return base64.b64encode(buf.read()).decode(\\\"utf-8\\\")\\n        return getattr(obj, print_method)()\\n    elif print_method == \\\"_repr_mimebundle_\\\":\\n        return {}, {}\\n    return None\\n\\n\\ndef _format_mime(obj):\\n    \\\"\\\"\\\"\\n    Formats object using _repr_x_ methods.\\n    \\\"\\\"\\\"\\n    if isinstance(obj, str):\\n        return html.escape(obj), \\\"text/plain\\\"\\n\\n    mimebundle = _eval_formatter(obj, \\\"_repr_mimebundle_\\\")\\n    if isinstance(mimebundle, tuple):\\n        format_dict, _ = mimebundle\\n    else:\\n        format_dict = mimebundle\\n\\n    output, not_available = None, []\\n    for method, mime_type in reversed(_MIME_METHODS.items()):\\n        if mime_type in format_dict:\\n            output = format_dict[mime_type]\\n        else:\\n            output = _eval_formatter(obj, method)\\n\\n        if output is None:\\n            continue\\n        elif mime_type not in _MIME_RENDERERS:\\n            not_available.append(mime_type)\\n            continue\\n        break\\n    if output is None:\\n        if not_available:\\n            window.console.warn(\\n                f\\\"Rendered object requested unavailable MIME renderers: {not_available}\\\"\\n            )\\n        output = repr(output)\\n        mime_type = \\\"text/plain\\\"\\n    elif isinstance(output, tuple):\\n        output, meta = output\\n    else:\\n        meta = {}\\n    return _MIME_RENDERERS[mime_type](output, meta), mime_type\\n\\n\\ndef _write(element, value, append=False):\\n    html, mime_type = _format_mime(value)\\n    if html == \\\"\\\\\\\\n\\\":\\n        return\\n\\n    if append:\\n        out_element = document.createElement(\\\"div\\\")\\n        element.append(out_element)\\n    else:\\n        out_element = element.lastElementChild\\n        if out_element is None:\\n            out_element = element\\n\\n    if mime_type in (\\\"application/javascript\\\", \\\"text/html\\\"):\\n        script_element = document.createRange().createContextualFragment(html)\\n        out_element.append(script_element)\\n    else:\\n        out_element.innerHTML = html\\n\\n\\ndef display(*values, target=None, append=True):\\n    if target is None:\\n        target = current_target()\\n    elif not isinstance(target, str):\\n        raise TypeError(f\\\"target must be str or None, not {target.__class__.__name__}\\\")\\n    elif target == \\\"\\\":\\n        raise ValueError(\\\"Cannot have an empty target\\\")\\n    elif target.startswith(\\\"#\\\"):\\n        # note: here target is str and not None!\\n        # align with @when behavior\\n        target = target[1:]\\n\\n    element = document.getElementById(target)\\n\\n    # If target cannot be found on the page, a ValueError is raised\\n    if element is None:\\n        raise ValueError(\\n            f\\\"Invalid selector with id={target}. Cannot be found in the page.\\\"\\n        )\\n\\n    # if element is a <script type=\\\"py\\\">, it has a 'target' attribute which\\n    # points to the visual element holding the displayed values. In that case,\\n    # use that.\\n    if element.tagName == \\\"SCRIPT\\\" and hasattr(element, \\\"target\\\"):\\n        element = element.target\\n\\n    for v in values:\\n        if not append:\\n            element.replaceChildren()\\n        _write(element, v, append=append)\\n\",\n    \"event_handling.py\": \"import inspect\\n\\nfrom pyodide.ffi.wrappers import add_event_listener\\nfrom pyscript.magic_js import document\\n\\n\\ndef when(event_type=None, selector=None):\\n    \\\"\\\"\\\"\\n    Decorates a function and passes py-* events to the decorated function\\n    The events might or not be an argument of the decorated function\\n    \\\"\\\"\\\"\\n\\n    def decorator(func):\\n        if isinstance(selector, str):\\n            elements = document.querySelectorAll(selector)\\n        else:\\n            # TODO: This is a hack that will be removed when pyscript becomes a package\\n            #       and we can better manage the imports without circular dependencies\\n            from pyweb import pydom\\n\\n            if isinstance(selector, pydom.Element):\\n                elements = [selector._js]\\n            elif isinstance(selector, pydom.ElementCollection):\\n                elements = [el._js for el in selector]\\n            else:\\n                raise ValueError(\\n                    f\\\"Invalid selector: {selector}. Selector must\\\"\\n                    \\\" be a string, a pydom.Element or a pydom.ElementCollection.\\\"\\n                )\\n\\n        sig = inspect.signature(func)\\n        # Function doesn't receive events\\n        if not sig.parameters:\\n\\n            def wrapper(*args, **kwargs):\\n                func()\\n\\n            for el in elements:\\n                add_event_listener(el, event_type, wrapper)\\n        else:\\n            for el in elements:\\n                add_event_listener(el, event_type, func)\\n        return func\\n\\n    return decorator\\n\",\n    \"magic_js.py\": \"import sys\\n\\nimport js as globalThis\\nfrom polyscript import js_modules\\nfrom pyscript.util import NotSupported\\n\\nRUNNING_IN_WORKER = not hasattr(globalThis, \\\"document\\\")\\n\\n\\n# allow `from pyscript.js_modules.xxx import yyy`\\nclass JSModule:\\n    def __init__(self, name):\\n        self.name = name\\n\\n    def __getattr__(self, field):\\n        # avoid pyodide looking for non existent fields\\n        if not field.startswith(\\\"_\\\"):\\n            return getattr(getattr(js_modules, self.name), field)\\n\\n\\n# generate N modules in the system that will proxy the real value\\nfor name in globalThis.Reflect.ownKeys(js_modules):\\n    sys.modules[f\\\"pyscript.js_modules.{name}\\\"] = JSModule(name)\\nsys.modules[\\\"pyscript.js_modules\\\"] = js_modules\\n\\nif RUNNING_IN_WORKER:\\n    import js\\n    import polyscript\\n\\n    PyWorker = NotSupported(\\n        \\\"pyscript.PyWorker\\\",\\n        \\\"pyscript.PyWorker works only when running in the main thread\\\",\\n    )\\n    window = polyscript.xworker.window\\n    document = window.document\\n    js.document = document\\n    sync = polyscript.xworker.sync\\n\\n    # in workers the display does not have a default ID\\n    # but there is a sync utility from xworker\\n    def current_target():\\n        return polyscript.target\\n\\nelse:\\n    import _pyscript\\n    from _pyscript import PyWorker\\n\\n    window = globalThis\\n    document = globalThis.document\\n    sync = NotSupported(\\n        \\\"pyscript.sync\\\", \\\"pyscript.sync works only when running in a worker\\\"\\n    )\\n\\n    # in MAIN the current element target exist, just use it\\n    def current_target():\\n        return _pyscript.target\\n\",\n    \"util.py\": \"class NotSupported:\\n    \\\"\\\"\\\"\\n    Small helper that raises exceptions if you try to get/set any attribute on\\n    it.\\n    \\\"\\\"\\\"\\n\\n    def __init__(self, name, error):\\n        object.__setattr__(self, \\\"name\\\", name)\\n        object.__setattr__(self, \\\"error\\\", error)\\n\\n    def __repr__(self):\\n        return f\\\"<NotSupported {self.name} [{self.error}]>\\\"\\n\\n    def __getattr__(self, attr):\\n        raise AttributeError(self.error)\\n\\n    def __setattr__(self, attr, value):\\n        raise AttributeError(self.error)\\n\\n    def __call__(self, *args):\\n        raise TypeError(self.error)\\n\",\n    \"__init__.py\": \"# Some notes about the naming conventions and the relationship between various\\n# similar-but-different names.\\n#\\n# import pyscript\\n#     this package contains the main user-facing API offered by pyscript. All\\n#     the names which are supposed be used by end users should be made\\n#     available in pyscript/__init__.py (i.e., this file)\\n#\\n# import _pyscript\\n#     this is an internal module implemented in JS. It is used internally by\\n#     the pyscript package, end users should not use it directly. For its\\n#     implementation, grep for `interpreter.registerJsModule(\\\"_pyscript\\\",\\n#     ...)` in core.js\\n#\\n# import js\\n#     this is the JS globalThis, as exported by pyodide and/or micropython's\\n#     FFIs. As such, it contains different things in the main thread or in a\\n#     worker.\\n#\\n# import pyscript.magic_js\\n#     this submodule abstracts away some of the differences between the main\\n#     thread and the worker. In particular, it defines `window` and `document`\\n#     in such a way that these names work in both cases: in the main thread,\\n#     they are the \\\"real\\\" objects, in the worker they are proxies which work\\n#     thanks to coincident.\\n#\\n# from pyscript import window, document\\n#     these are just the window and document objects as defined by\\n#     pyscript.magic_js. This is the blessed way to access them from pyscript,\\n#     as it works transparently in both the main thread and worker cases.\\n\\nfrom pyscript.display import HTML, display\\nfrom pyscript.magic_js import (\\n    RUNNING_IN_WORKER,\\n    PyWorker,\\n    current_target,\\n    document,\\n    js_modules,\\n    sync,\\n    window,\\n)\\n\\ntry:\\n    from pyscript.event_handling import when\\nexcept:\\n    from pyscript.util import NotSupported\\n\\n    when = NotSupported(\\n        \\\"pyscript.when\\\", \\\"pyscript.when currently not available with this interpreter\\\"\\n    )\\n\"\n  },\n  \"pyweb\": {\n    \"pydom.py\": \"import sys\\nimport warnings\\nfrom functools import cached_property\\nfrom typing import Any\\n\\nfrom pyodide.ffi import JsProxy\\nfrom pyscript import display, document, window\\n\\nalert = window.alert\\n\\n\\nclass BaseElement:\\n    def __init__(self, js_element):\\n        self._js = js_element\\n        self._parent = None\\n        self.style = StyleProxy(self)\\n        self._proxies = {}\\n\\n    def __eq__(self, obj):\\n        \\\"\\\"\\\"Check if the element is the same as the other element by comparing\\n        the underlying JS element\\\"\\\"\\\"\\n        return isinstance(obj, BaseElement) and obj._js == self._js\\n\\n    @property\\n    def parent(self):\\n        if self._parent:\\n            return self._parent\\n\\n        if self._js.parentElement:\\n            self._parent = self.__class__(self._js.parentElement)\\n\\n        return self._parent\\n\\n    @property\\n    def __class(self):\\n        return self.__class__ if self.__class__ != PyDom else Element\\n\\n    def create(self, type_, is_child=True, classes=None, html=None, label=None):\\n        js_el = document.createElement(type_)\\n        element = self.__class(js_el)\\n\\n        if classes:\\n            for class_ in classes:\\n                element.add_class(class_)\\n\\n        if html is not None:\\n            element.html = html\\n\\n        if label is not None:\\n            element.label = label\\n\\n        if is_child:\\n            self.append(element)\\n\\n        return element\\n\\n    def find(self, selector):\\n        \\\"\\\"\\\"Return an ElementCollection representing all the child elements that\\n        match the specified selector.\\n\\n        Args:\\n            selector (str): A string containing a selector expression\\n\\n        Returns:\\n            ElementCollection: A collection of elements matching the selector\\n        \\\"\\\"\\\"\\n        elements = self._js.querySelectorAll(selector)\\n        if not elements:\\n            return None\\n        return ElementCollection([Element(el) for el in elements])\\n\\n\\nclass Element(BaseElement):\\n    @property\\n    def children(self):\\n        return [self.__class__(el) for el in self._js.children]\\n\\n    def append(self, child):\\n        # TODO: this is Pyodide specific for now!!!!!!\\n        # if we get passed a JSProxy Element directly we just map it to the\\n        # higher level Python element\\n        if isinstance(child, JsProxy):\\n            return self.append(Element(child))\\n\\n        elif isinstance(child, Element):\\n            self._js.appendChild(child._js)\\n\\n            return child\\n\\n        elif isinstance(child, ElementCollection):\\n            for el in child:\\n                self.append(el)\\n\\n    # -------- Pythonic Interface to Element -------- #\\n    @property\\n    def html(self):\\n        return self._js.innerHTML\\n\\n    @html.setter\\n    def html(self, value):\\n        self._js.innerHTML = value\\n\\n    @property\\n    def content(self):\\n        # TODO: This breaks with with standard template elements. Define how to best\\n        #       handle this specifica use case. Just not support for now?\\n        if self._js.tagName == \\\"TEMPLATE\\\":\\n            warnings.warn(\\n                \\\"Content attribute not supported for template elements.\\\", stacklevel=2\\n            )\\n            return None\\n        return self._js.innerHTML\\n\\n    @content.setter\\n    def content(self, value):\\n        # TODO: (same comment as above)\\n        if self._js.tagName == \\\"TEMPLATE\\\":\\n            warnings.warn(\\n                \\\"Content attribute not supported for template elements.\\\", stacklevel=2\\n            )\\n            return\\n\\n        display(value, target=self.id)\\n\\n    @property\\n    def id(self):\\n        return self._js.id\\n\\n    @id.setter\\n    def id(self, value):\\n        self._js.id = value\\n\\n    @property\\n    def options(self):\\n        if \\\"options\\\" in self._proxies:\\n            return self._proxies[\\\"options\\\"]\\n\\n        if not self._js.tagName.lower() in {\\\"select\\\", \\\"datalist\\\", \\\"optgroup\\\"}:\\n            raise AttributeError(\\n                f\\\"Element {self._js.tagName} has no options attribute.\\\"\\n            )\\n        self._proxies[\\\"options\\\"] = OptionsProxy(self)\\n        return self._proxies[\\\"options\\\"]\\n\\n    @property\\n    def value(self):\\n        return self._js.value\\n\\n    @value.setter\\n    def value(self, value):\\n        # in order to avoid confusion to the user, we don't allow setting the\\n        # value of elements that don't have a value attribute\\n        if not hasattr(self._js, \\\"value\\\"):\\n            raise AttributeError(\\n                f\\\"Element {self._js.tagName} has no value attribute. If you want to \\\"\\n                \\\"force a value attribute, set it directly using the `_js.value = <value>` \\\"\\n                \\\"javascript API attribute instead.\\\"\\n            )\\n        self._js.value = value\\n\\n    @property\\n    def selected(self):\\n        return self._js.selected\\n\\n    @selected.setter\\n    def selected(self, value):\\n        # in order to avoid confusion to the user, we don't allow setting the\\n        # value of elements that don't have a value attribute\\n        if not hasattr(self._js, \\\"selected\\\"):\\n            raise AttributeError(\\n                f\\\"Element {self._js.tagName} has no value attribute. If you want to \\\"\\n                \\\"force a value attribute, set it directly using the `_js.value = <value>` \\\"\\n                \\\"javascript API attribute instead.\\\"\\n            )\\n        self._js.selected = value\\n\\n    def clone(self, new_id=None):\\n        clone = Element(self._js.cloneNode(True))\\n        clone.id = new_id\\n\\n        return clone\\n\\n    def remove_class(self, classname):\\n        classList = self._js.classList\\n        if isinstance(classname, list):\\n            classList.remove(*classname)\\n        else:\\n            classList.remove(classname)\\n        return self\\n\\n    def add_class(self, classname):\\n        classList = self._js.classList\\n        if isinstance(classname, list):\\n            classList.add(*classname)\\n        else:\\n            self._js.classList.add(classname)\\n        return self\\n\\n    @property\\n    def classes(self):\\n        classes = self._js.classList.values()\\n        return [x for x in classes]\\n\\n    def show_me(self):\\n        self._js.scrollIntoView()\\n\\n\\nclass OptionsProxy:\\n    \\\"\\\"\\\"This class represents the options of a select element. It\\n    allows to access to add and remove options by using the `add` and `remove` methods.\\n    \\\"\\\"\\\"\\n\\n    def __init__(self, element: Element) -> None:\\n        self._element = element\\n        if self._element._js.tagName.lower() != \\\"select\\\":\\n            raise AttributeError(\\n                f\\\"Element {self._element._js.tagName} has no options attribute.\\\"\\n            )\\n\\n    def add(\\n        self,\\n        value: Any = None,\\n        html: str = None,\\n        text: str = None,\\n        before: Element | int = None,\\n        **kws,\\n    ) -> None:\\n        \\\"\\\"\\\"Add a new option to the select element\\\"\\\"\\\"\\n        # create the option element and set the attributes\\n        option = document.createElement(\\\"option\\\")\\n        if value is not None:\\n            kws[\\\"value\\\"] = value\\n        if html is not None:\\n            option.innerHTML = html\\n        if text is not None:\\n            kws[\\\"text\\\"] = text\\n\\n        for key, value in kws.items():\\n            option.setAttribute(key, value)\\n\\n        if before:\\n            if isinstance(before, Element):\\n                before = before._js\\n\\n        self._element._js.add(option, before)\\n\\n    def remove(self, item: int) -> None:\\n        \\\"\\\"\\\"Remove the option at the specified index\\\"\\\"\\\"\\n        self._element._js.remove(item)\\n\\n    def clear(self) -> None:\\n        \\\"\\\"\\\"Remove all the options\\\"\\\"\\\"\\n        for i in range(len(self)):\\n            self.remove(0)\\n\\n    @property\\n    def options(self):\\n        \\\"\\\"\\\"Return the list of options\\\"\\\"\\\"\\n        return [Element(opt) for opt in self._element._js.options]\\n\\n    @property\\n    def selected(self):\\n        \\\"\\\"\\\"Return the selected option\\\"\\\"\\\"\\n        return self.options[self._element._js.selectedIndex]\\n\\n    def __iter__(self):\\n        yield from self.options\\n\\n    def __len__(self):\\n        return len(self.options)\\n\\n    def __repr__(self):\\n        return f\\\"{self.__class__.__name__} (length: {len(self)}) {self.options}\\\"\\n\\n    def __getitem__(self, key):\\n        return self.options[key]\\n\\n\\nclass StyleProxy(dict):\\n    def __init__(self, element: Element) -> None:\\n        self._element = element\\n\\n    @cached_property\\n    def _style(self):\\n        return self._element._js.style\\n\\n    def __getitem__(self, key):\\n        return self._style.getPropertyValue(key)\\n\\n    def __setitem__(self, key, value):\\n        self._style.setProperty(key, value)\\n\\n    def remove(self, key):\\n        self._style.removeProperty(key)\\n\\n    def set(self, **kws):\\n        for k, v in kws.items():\\n            self._element._js.style.setProperty(k, v)\\n\\n    # CSS Properties\\n    # Reference: https://github.com/microsoft/TypeScript/blob/main/src/lib/dom.generated.d.ts#L3799C1-L5005C2\\n    # Following prperties automatically generated from the above reference using\\n    # tools/codegen_css_proxy.py\\n    @property\\n    def visible(self):\\n        return self._element._js.style.visibility\\n\\n    @visible.setter\\n    def visible(self, value):\\n        self._element._js.style.visibility = value\\n\\n\\nclass StyleCollection:\\n    def __init__(self, collection: \\\"ElementCollection\\\") -> None:\\n        self._collection = collection\\n\\n    def __get__(self, obj, objtype=None):\\n        return obj._get_attribute(\\\"style\\\")\\n\\n    def __getitem__(self, key):\\n        return self._collection._get_attribute(\\\"style\\\")[key]\\n\\n    def __setitem__(self, key, value):\\n        for element in self._collection._elements:\\n            element.style[key] = value\\n\\n    def remove(self, key):\\n        for element in self._collection._elements:\\n            element.style.remove(key)\\n\\n\\nclass ElementCollection:\\n    def __init__(self, elements: [Element]) -> None:\\n        self._elements = elements\\n        self.style = StyleCollection(self)\\n\\n    def __getitem__(self, key):\\n        # If it's an integer we use it to access the elements in the collection\\n        if isinstance(key, int):\\n            return self._elements[key]\\n        # If it's a slice we use it to support slice operations over the elements\\n        # in the collection\\n        elif isinstance(key, slice):\\n            return ElementCollection(self._elements[key])\\n\\n        # If it's anything else (basically a string) we use it as a selector\\n        # TODO: Write tests!\\n        elements = self._element.querySelectorAll(key)\\n        return ElementCollection([Element(el) for el in elements])\\n\\n    def __len__(self):\\n        return len(self._elements)\\n\\n    def __eq__(self, obj):\\n        \\\"\\\"\\\"Check if the element is the same as the other element by comparing\\n        the underlying JS element\\\"\\\"\\\"\\n        return isinstance(obj, ElementCollection) and obj._elements == self._elements\\n\\n    def _get_attribute(self, attr, index=None):\\n        if index is None:\\n            return [getattr(el, attr) for el in self._elements]\\n\\n        # As JQuery, when getting an attr, only return it for the first element\\n        return getattr(self._elements[index], attr)\\n\\n    def _set_attribute(self, attr, value):\\n        for el in self._elements:\\n            setattr(el, attr, value)\\n\\n    @property\\n    def html(self):\\n        return self._get_attribute(\\\"html\\\")\\n\\n    @html.setter\\n    def html(self, value):\\n        self._set_attribute(\\\"html\\\", value)\\n\\n    @property\\n    def value(self):\\n        return self._get_attribute(\\\"value\\\")\\n\\n    @value.setter\\n    def value(self, value):\\n        self._set_attribute(\\\"value\\\", value)\\n\\n    @property\\n    def children(self):\\n        return self._elements\\n\\n    def __iter__(self):\\n        yield from self._elements\\n\\n    def __repr__(self):\\n        return f\\\"{self.__class__.__name__} (length: {len(self._elements)}) {self._elements}\\\"\\n\\n\\nclass DomScope:\\n    def __getattr__(self, __name: str) -> Any:\\n        element = document[f\\\"#{__name}\\\"]\\n        if element:\\n            return element[0]\\n\\n\\nclass PyDom(BaseElement):\\n    # Add objects we want to expose to the DOM namespace since this class instance is being\\n    # remapped as \\\"the module\\\" itself\\n    BaseElement = BaseElement\\n    Element = Element\\n    ElementCollection = ElementCollection\\n\\n    def __init__(self):\\n        super().__init__(document)\\n        self.ids = DomScope()\\n        self.body = Element(document.body)\\n        self.head = Element(document.head)\\n\\n    def create(self, type_, classes=None, html=None):\\n        return super().create(type_, is_child=False, classes=classes, html=html)\\n\\n    def __getitem__(self, key):\\n        if isinstance(key, int):\\n            indices = range(*key.indices(len(self.list)))\\n            return [self.list[i] for i in indices]\\n\\n        elements = self._js.querySelectorAll(key)\\n        if not elements:\\n            return None\\n        return ElementCollection([Element(el) for el in elements])\\n\\n\\ndom = PyDom()\\n\\nsys.modules[__name__] = dom\\n\"\n  }\n};\n","import { typedSet } from \"type-checked-collections\";\nimport { dedent } from \"polyscript/exports\";\nimport toJSONCallback from \"to-json-callback\";\n\nimport stdlib from \"./stdlib.js\";\n\nexport const main = (name) => hooks.main[name];\nexport const worker = (name) => hooks.worker[name];\n\nconst code = (hooks, branch, key, lib) => {\n    hooks[key] = () => {\n        const arr = lib ? [lib] : [];\n        arr.push(...branch(key));\n        return arr.map(dedent).join(\"\\n\");\n    };\n};\n\nexport const codeFor = (branch) => {\n    const hooks = {};\n    code(hooks, branch, `codeBeforeRun`, stdlib);\n    code(hooks, branch, `codeBeforeRunAsync`, stdlib);\n    code(hooks, branch, `codeAfterRun`);\n    code(hooks, branch, `codeAfterRunAsync`);\n    return hooks;\n};\n\nexport const createFunction = (self, name) => {\n    const cbs = [...worker(name)];\n    if (cbs.length) {\n        const cb = toJSONCallback(\n            self[`_${name}`] ||\n                (name.endsWith(\"Async\")\n                    ? async (wrap, xworker, ...cbs) => {\n                          for (const cb of cbs) await cb(wrap, xworker);\n                      }\n                    : (wrap, xworker, ...cbs) => {\n                          for (const cb of cbs) cb(wrap, xworker);\n                      }),\n        );\n        const a = cbs.map(toJSONCallback).join(\", \");\n        return Function(`return(w,x)=>(${cb})(w,x,...[${a}])`)();\n    }\n};\n\nconst SetFunction = typedSet({ typeof: \"function\" });\nconst SetString = typedSet({ typeof: \"string\" });\n\nconst inputFailure = `\n    import builtins\n    def input(prompt=\"\"):\n        raise Exception(\"\\\\n           \".join([\n            \"input() doesn't work when PyScript runs in the main thread.\",\n            \"Consider using the worker attribute: https://pyscript.github.io/docs/2023.11.2/user-guide/workers/\"\n        ]))\n\n    builtins.input = input\n    del builtins\n    del input\n`;\n\nexport const hooks = {\n    main: {\n        /** @type {Set<function>} */\n        onWorker: new SetFunction(),\n        /** @type {Set<function>} */\n        onReady: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRunAsync: new SetFunction(),\n        /** @type {Set<function>} */\n        onAfterRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onAfterRunAsync: new SetFunction(),\n        /** @type {Set<string>} */\n        codeBeforeRun: new SetString([inputFailure]),\n        /** @type {Set<string>} */\n        codeBeforeRunAsync: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRun: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRunAsync: new SetString(),\n    },\n    worker: {\n        /** @type {Set<function>} */\n        onReady: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRunAsync: new SetFunction(),\n        /** @type {Set<function>} */\n        onAfterRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onAfterRunAsync: new SetFunction(),\n        /** @type {Set<string>} */\n        codeBeforeRun: new SetString(),\n        /** @type {Set<string>} */\n        codeBeforeRunAsync: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRun: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRunAsync: new SetString(),\n    },\n};\n","/*! (c) PyScript Development Team */\n\nimport stickyModule from \"sticky-module\";\nimport \"@ungap/with-resolvers\";\n\nimport {\n    INVALID_CONTENT,\n    Hook,\n    XWorker,\n    assign,\n    dedent,\n    define,\n    defineProperty,\n    dispatch,\n    queryTarget,\n    unescape,\n    whenDefined,\n} from \"polyscript/exports\";\n\nimport \"./all-done.js\";\nimport TYPES from \"./types.js\";\nimport configs from \"./config.js\";\nimport sync from \"./sync.js\";\nimport bootstrapNodeAndPlugins from \"./plugins-helper.js\";\nimport { ErrorCode } from \"./exceptions.js\";\nimport { robustFetch as fetch, getText } from \"./fetch.js\";\nimport { hooks, main, worker, codeFor, createFunction } from \"./hooks.js\";\n\n// generic helper to disambiguate between custom element and script\nconst isScript = ({ tagName }) => tagName === \"SCRIPT\";\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        PyWorker: exportedPyWorker,\n        hooks: exportedHooks,\n        config: exportedConfig,\n        whenDefined: exportedWhenDefined,\n    },\n    alreadyLive,\n] = stickyModule(\"@pyscript/core\", {\n    PyWorker,\n    hooks,\n    config: {},\n    whenDefined,\n});\n\nexport {\n    TYPES,\n    exportedPyWorker as PyWorker,\n    exportedHooks as hooks,\n    exportedConfig as config,\n    exportedWhenDefined as whenDefined,\n};\n\nconst hooked = new Map();\n\nfor (const [TYPE, interpreter] of TYPES) {\n    // avoid any dance if the module already landed\n    if (alreadyLive) break;\n\n    const dispatchDone = (element, isAsync, result) => {\n        if (isAsync) result.then(() => dispatch(element, TYPE, \"done\"));\n        else dispatch(element, TYPE, \"done\");\n    };\n\n    const { config, configURL, plugins, error } = configs.get(TYPE);\n\n    // create a unique identifier when/if needed\n    let id = 0;\n    const getID = (prefix = TYPE) => `${prefix}-${id++}`;\n\n    /**\n     * Given a generic DOM Element, tries to fetch the 'src' attribute, if present.\n     * It either throws an error if the 'src' can't be fetched or it returns a fallback\n     * content as source.\n     */\n    const fetchSource = async (tag, io, asText) => {\n        if (tag.hasAttribute(\"src\")) {\n            try {\n                return await fetch(tag.getAttribute(\"src\")).then(getText);\n            } catch (error) {\n                io.stderr(error);\n            }\n        }\n\n        if (asText) return dedent(tag.textContent);\n\n        const code = dedent(unescape(tag.innerHTML));\n        console.warn(\n            `Deprecated: use <script type=\"${TYPE}\"> for an always safe content parsing:\\n`,\n            code,\n        );\n        return code;\n    };\n\n    // register once any interpreter\n    let alreadyRegistered = false;\n\n    // allows lazy element features on code evaluation\n    let currentElement;\n\n    const registerModule = ({ XWorker, interpreter, io }) => {\n        // avoid multiple registration of the same interpreter\n        if (alreadyRegistered) return;\n        alreadyRegistered = true;\n\n        // automatically use the pyscript stderr (when/if defined)\n        // this defaults to console.error\n        function PyWorker(...args) {\n            const worker = XWorker(...args);\n            worker.onerror = ({ error }) => io.stderr(error);\n            return worker;\n        }\n\n        // enrich the Python env with some JS utility for main\n        interpreter.registerJsModule(\"_pyscript\", {\n            PyWorker,\n            get target() {\n                return isScript(currentElement)\n                    ? currentElement.target.id\n                    : currentElement.id;\n            },\n        });\n    };\n\n    // define the module as both `<script type=\"py\">` and `<py-script>`\n    // but only if the config didn't throw an error\n    if (!error) {\n        // ensure plugins are bootstrapped already before custom type definition\n        // NOTE: we cannot top-level await in here as plugins import other utilities\n        //       from core.js itself so that custom definition should not be blocking.\n        plugins.then(() => {\n            // possible early errors sent by polyscript\n            const errors = new Map();\n\n            // specific main and worker hooks\n            const hooks = {\n                main: {\n                    ...codeFor(main),\n                    async onReady(wrap, element) {\n                        registerModule(wrap);\n\n                        // allows plugins to do whatever they want with the element\n                        // before regular stuff happens in here\n                        for (const callback of main(\"onReady\"))\n                            await callback(wrap, element);\n\n                        // now that all possible plugins are configured,\n                        // bail out if polyscript encountered an error\n                        if (errors.has(element)) {\n                            let { message } = errors.get(element);\n                            errors.delete(element);\n                            const clone = message === INVALID_CONTENT;\n                            message = `(${ErrorCode.CONFLICTING_CODE}) ${message} for `;\n                            message += element.cloneNode(clone).outerHTML;\n                            wrap.io.stderr(message);\n                            return;\n                        }\n\n                        if (isScript(element)) {\n                            const {\n                                attributes: { async: isAsync, target },\n                            } = element;\n                            const hasTarget = !!target?.value;\n                            const show = hasTarget\n                                ? queryTarget(element, target.value)\n                                : document.createElement(\"script-py\");\n\n                            if (!hasTarget) {\n                                const { head, body } = document;\n                                if (head.contains(element)) body.append(show);\n                                else element.after(show);\n                            }\n                            if (!show.id) show.id = getID();\n\n                            // allows the code to retrieve the target element via\n                            // document.currentScript.target if needed\n                            defineProperty(element, \"target\", { value: show });\n\n                            // notify before the code runs\n                            dispatch(element, TYPE, \"ready\");\n                            dispatchDone(\n                                element,\n                                isAsync,\n                                wrap[`run${isAsync ? \"Async\" : \"\"}`](\n                                    await fetchSource(element, wrap.io, true),\n                                ),\n                            );\n                        } else {\n                            // resolve PyScriptElement to allow connectedCallback\n                            element._wrap.resolve(wrap);\n                        }\n                        console.debug(\"[pyscript/main] PyScript Ready\");\n                    },\n                    onWorker(_, xworker) {\n                        assign(xworker.sync, sync);\n                        for (const callback of main(\"onWorker\"))\n                            callback(_, xworker);\n                    },\n                    onBeforeRun(wrap, element) {\n                        currentElement = element;\n                        bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onBeforeRun\",\n                        );\n                    },\n                    onBeforeRunAsync(wrap, element) {\n                        currentElement = element;\n                        return bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onBeforeRunAsync\",\n                        );\n                    },\n                    onAfterRun(wrap, element) {\n                        bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onAfterRun\",\n                        );\n                    },\n                    onAfterRunAsync(wrap, element) {\n                        return bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onAfterRunAsync\",\n                        );\n                    },\n                },\n                worker: {\n                    ...codeFor(worker),\n                    // these are lazy getters that returns a composition\n                    // of the current hooks or undefined, if no hook is present\n                    get onReady() {\n                        return createFunction(this, \"onReady\", true);\n                    },\n                    get onBeforeRun() {\n                        return createFunction(this, \"onBeforeRun\", false);\n                    },\n                    get onBeforeRunAsync() {\n                        return createFunction(this, \"onBeforeRunAsync\", true);\n                    },\n                    get onAfterRun() {\n                        return createFunction(this, \"onAfterRun\", false);\n                    },\n                    get onAfterRunAsync() {\n                        return createFunction(this, \"onAfterRunAsync\", true);\n                    },\n                },\n            };\n\n            hooked.set(TYPE, hooks);\n\n            define(TYPE, {\n                config,\n                configURL,\n                interpreter,\n                hooks,\n                env: `${TYPE}-script`,\n                version: config?.interpreter,\n                onerror(error, element) {\n                    errors.set(element, error);\n                },\n            });\n\n            customElements.define(\n                `${TYPE}-script`,\n                class extends HTMLElement {\n                    constructor() {\n                        assign(super(), {\n                            _wrap: Promise.withResolvers(),\n                            srcCode: \"\",\n                            executed: false,\n                        });\n                    }\n                    get id() {\n                        return super.id || (super.id = getID());\n                    }\n                    set id(value) {\n                        super.id = value;\n                    }\n                    async connectedCallback() {\n                        if (!this.executed) {\n                            this.executed = true;\n                            const isAsync = this.hasAttribute(\"async\");\n                            const { io, run, runAsync } = await this._wrap\n                                .promise;\n                            this.srcCode = await fetchSource(\n                                this,\n                                io,\n                                !this.childElementCount,\n                            );\n                            this.replaceChildren();\n                            this.style.display = \"block\";\n                            dispatch(this, TYPE, \"ready\");\n                            dispatchDone(\n                                this,\n                                isAsync,\n                                (isAsync ? runAsync : run)(this.srcCode),\n                            );\n                        }\n                    }\n                },\n            );\n        });\n    }\n\n    // export the used config without allowing leaks through it\n    exportedConfig[TYPE] = structuredClone(config);\n}\n\n/**\n * A `Worker` facade able to bootstrap on the worker thread only a PyScript module.\n * @param {string} file the python file to run ina worker.\n * @param {{config?: string | object, async?: boolean}} [options] optional configuration for the worker.\n * @returns {Worker & {sync: ProxyHandler<object>}}\n */\nfunction PyWorker(file, options) {\n    const hooks = hooked.get(\"py\");\n    // this propagates pyscript worker hooks without needing a pyscript\n    // bootstrap + it passes arguments and it defaults to `pyodide`\n    // as the interpreter to use in the worker, as all hooks assume that\n    // and as `pyodide` is the only default interpreter that can deal with\n    // all the features we need to deliver pyscript out there.\n    const xworker = XWorker.call(new Hook(null, hooks), file, {\n        type: \"pyodide\",\n        ...options,\n    });\n    assign(xworker.sync, sync);\n    return xworker;\n}\n"],"names":["stickyModule","name","value","global","globalThis","symbol","Symbol","for","known","Object","defineProperty","Promise","withResolvers","a","b","c","this","resolve","reject","promise","getBuffer","response","arrayBuffer","getJSON","json","getText","text","$$","css","root","document","querySelectorAll","$x","path","xpath","XPathEvaluator","createExpression","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","result","i","snapshotLength","push","snapshotItem","env","self","deserialize","serialized","$","_","as","out","index","set","unpair","has","get","type","arr","object","key","Date","source","flags","RegExp","map","Map","Set","add","message","BigInt","deserializer","EMPTY","toString","keys","typeOf","asString","call","slice","includes","shouldSkip","TYPE","serialize","lossy","strict","pair","entry","TypeError","valueOf","toJSON","entries","toISOString","serializer","parse","$parse","stringify","$stringify","JSON","options","str","any","CHANNEL","MAIN","THREAD","ARRAY","FUNCTION","NULL","NUMBER","OBJECT","STRING","SYMBOL","UNDEFINED","APPLY","CONSTRUCT","DEFINE_PROPERTY","DELETE_PROPERTY","GET","GET_OWN_PROPERTY_DESCRIPTOR","GET_PROTOTYPE_OF","HAS","IS_EXTENSIBLE","OWN_KEYS","PREVENT_EXTENSION","SET","SET_PROTOTYPE_OF","DELETE","waitAsyncFallback","buffer","onmessage","w","Worker","postMessage","Int32Array","SharedArrayBuffer","Uint16Array","BYTES_PER_ELEMENT","I32_BYTES","UI16_BYTES","isArray","Array","notify","wait","waitAsync","Atomics","buffers","WeakSet","context","WeakMap","syncResult","then","fn","uid","coincident","transform","interrupt","post","transfer","args","handler","delay","decoder","TextDecoder","waitFor","isAsync","sb","waitInterrupt","seppuku","Proxy","action","startsWith","id","at","delete","pop","deadlock","setTimeout","console","warn","clearTimeout","length","bytes","decode","actions","callback","Error","size","results","addEventListener","async","event","details","data","stopImmediatePropagation","rest","error","ui16a","charCodeAt","reviver","unbound","invoke","Context","target","t","v","unwrap","wrap","revive","resolver","registry","FinalizationRegistry","onGarbageCollected","held","debug","String","create","hold","return","R","token","register","deleteProperty","getOwnPropertyDescriptor","getPrototypeOf","isExtensible","ownKeys","preventExtensions","setPrototypeOf","Reflect","assign","TypedArray","Int8Array","augment","descriptor","how","asEntry","tv","symbols","keyFor","filter","s","o","main$1","patch","eventsHandler","EventTarget","prototype","listener","concat","handleEvent","currentTarget","method","thread","ids","values","__thread__","sid","asValue","cb","Event","WeakRef","createGCHook","deref","trapsHandler","thisArg","apply","proto","trap","proxy","toLowerCase","main","__proxy__","__main__","proxies","argument","bind","bound","proxyHandler","fromEntry","TRAP","ctx","Worker$1","$coincident","util","dedent","string","l","arguments","content","line","split","trim","test","replace","$1","es","unes","cape","m","io","stdio","init","localIO","stderr","stdout","log","engine","interpreter","tpl","unescape","un","defineProperties","all","absoluteURL","base","location","href","URL","nodeInfo","node","tag","tagName","dispatch","what","worker","CE","CustomEvent","dispatchEvent","bubbles","detail","createResolved","module","config","run","code","runAsync","runEvent","createOverload","pre","js_modules","jsModules","JSModules","field","modules","registerJSModules","registerJSModule","importJS","import","esm","importCSS","onload","onerror","querySelector","head","append","createElement","rel","isCSS","pathname","writeFile","FS","PATH","PATH_FS","absPath","mkdirTree","dirname","Uint8Array","canOwn","tree","join","current","branch","mkdir","cwd","joinPaths","parts","res","part","p","fetchResolved","config_fetch","url","fetch","fetchPaths","files","to_file","from","undefined","endsWith","flatMap","to_folder","file","filename","lastIndexOf","calculateFetchPaths","fillName","dest","parseTemplate","src","k","SyntaxError","fetchFiles","config_files","targets","sourceDest","calculateFilesPaths","RUNNING_IN_WORKER","fetchJSModules","promises","registerJsModule","runPython","runPythonAsync","globals","mip","TextEncoder","encode","micropython","version","loadMicroPython","packages","mpyPackageManager","pyimport","mpyPackage","install","PyProxy","toJs","_module","toJsOptions","dict_converter","fromEntries","pyodide","loadPyodide","indexURL","loadPackage","micropip","keep_going","destroy","ffi","jsType","ruby_wasm_wasi","experimental","DefaultRubyVM","WebAssembly","compile","vm","eval","evalAsync","wasmoon","LuaFactory","LuaLibraries","createEngine","getTable","Base","setField","doStringSync","doString","cmodule","writeFileShim","configs","selectors","prefixes","baseURL","getConfigURLAndType","configURL","parseString","getRuntime","absolute","getRuntimeID","toJSONCallback","beforeRun","afterRun","js","resolved","polluteJS","ref","before","after","patched","Hook$1","constructor","hooks","onWorker","jsHooks","codeHooks","xworker","createObjectURL","Blob","isHook","Hook","bootstrap","sync","writable","configurable","INVALID_CONTENT","workerURL","element","attributes","childElementCount","innerHTML","localName","textContent","queryTarget","script","idOrSelector","parent","parentNode","getRoot","getElementById","targetDescriptor","handle","handled","interpreters","getValue","prefix","getDetails","runtime","queue","XWorker","$xworker","closest","body","versionValue","configValue","targetValue","currentScript","done","execute","queueMicrotask","awaitInterpreter","available","r","ownerElement","el","getAttribute","addAllListeners","disabled","CUSTOM_SELECTORS","types","waitList","handleCustomType","selector","matches","custom","hasAttribute","workerError","defaultRegistry","hook","structuredClone","suffix","overload","beforeCB","afterCB","onReady","dontBotherCount","whenDefined","define","alreadyLive","dontBother","splice","indexOf","remove","forEach","$whenDefined","$env","$Hook","$XWorker","mo","MutationObserver","records","attributeName","addedNodes","nodeType","shouldHandle","observe","childList","subtree","attachShadow","Element","TYPES","waitForIt","once","allPlugins","ErrorCode","GENERIC","CONFLICTING_CODE","BAD_CONFIG","MICROPIP_INSTALL_ERROR","BAD_PLUGIN_FILE_EXTENSION","NO_DEFAULT_EXPORT","TOP_LEVEL_AWAIT","FETCH_ERROR","FETCH_NAME_ERROR","FETCH_UNAUTHORIZED_ERROR","FETCH_FORBIDDEN_ERROR","FETCH_NOT_FOUND_ERROR","FETCH_SERVER_ERROR","FETCH_UNAVAILABLE_ERROR","UserError","errorCode","messageType","super","FetchError","robustFetch","err","errMsg","ok","errorMsg","status","statusText","configDetails","toml","ext","expected","badURL","conflictError","reason","syntaxError","plugins","parsed","pyElement","pyConfigs","attrConfigs","some","e","toBeAwaited","default","sleep","seconds","bootstrapNodeAndPlugins","validator","Class","checks","C","f","failure","kind","typedSet","check","fail","typeof","instanceof","checkFail","createSet","python","write","literal","pyscript","pyweb","stdlib","lib","codeFor","createFunction","cbs","Function","SetFunction","SetString","onBeforeRun","onBeforeRunAsync","onAfterRun","onAfterRunAsync","codeBeforeRun","codeBeforeRunAsync","codeAfterRun","codeAfterRunAsync","isScript","PyWorker","exportedPyWorker","exportedHooks","exportedConfig","exportedWhenDefined","hooked","dispatchDone","getID","fetchSource","asText","currentElement","alreadyRegistered","registerModule","errors","clone","cloneNode","outerHTML","hasTarget","show","contains","_wrap","customElements","HTMLElement","srcCode","executed","connectedCallback","replaceChildren","style","display"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,59]}